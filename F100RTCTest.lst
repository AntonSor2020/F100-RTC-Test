;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 08.11.2017 17:02:31
;----------------------------------------------

;Address Opcode 	ASM
____SysVT:
0x0000	0x1FFC2000  	536879100
0x0004	0x1AD10000  	6865
0x0008	0x1D350000  	7477
0x000C	0x1D350000  	7477
0x0010	0x1D350000  	7477
0x0014	0x1D350000  	7477
0x0018	0x1D350000  	7477
0x001C	0x1D350000  	7477
0x0020	0x1D350000  	7477
0x0024	0x1D350000  	7477
0x0028	0x1D350000  	7477
0x002C	0x1D350000  	7477
0x0030	0x1D350000  	7477
0x0034	0x1D350000  	7477
0x0038	0x1D350000  	7477
0x003C	0x1D350000  	7477
0x0040	0x1D350000  	7477
0x0044	0x1D350000  	7477
0x0048	0x1D350000  	7477
0x004C	0x18750000  	6261
0x0050	0x1D350000  	7477
0x0054	0x1D350000  	7477
0x0058	0x1D350000  	7477
0x005C	0x1D350000  	7477
0x0060	0x1D350000  	7477
0x0064	0x1D350000  	7477
0x0068	0x1D350000  	7477
0x006C	0x1D350000  	7477
0x0070	0x1D350000  	7477
0x0074	0x1D350000  	7477
0x0078	0x1D350000  	7477
0x007C	0x1D350000  	7477
0x0080	0x1D350000  	7477
0x0084	0x1D350000  	7477
0x0088	0x1D350000  	7477
0x008C	0x1D350000  	7477
0x0090	0x1D350000  	7477
0x0094	0x1D350000  	7477
0x0098	0x1D350000  	7477
0x009C	0x1D350000  	7477
0x00A0	0x1D350000  	7477
0x00A4	0x1D350000  	7477
0x00A8	0x1D350000  	7477
0x00AC	0x1D350000  	7477
0x00B0	0x1D350000  	7477
0x00B4	0x1D350000  	7477
0x00B8	0x1D350000  	7477
0x00BC	0x1D350000  	7477
0x00C0	0x1D350000  	7477
0x00C4	0x1D350000  	7477
0x00C8	0x1D350000  	7477
0x00CC	0x1D350000  	7477
0x00D0	0x1D350000  	7477
0x00D4	0x1D350000  	7477
0x00D8	0x1D350000  	7477
0x00DC	0x1D350000  	7477
0x00E0	0x1D350000  	7477
0x00E4	0x1D350000  	7477
0x00E8	0x1D350000  	7477
0x00EC	0x1D350000  	7477
0x00F0	0x1D350000  	7477
0x00F4	0x1D350000  	7477
0x00F8	0x1D350000  	7477
0x00FC	0x1D350000  	7477
0x0100	0x1D350000  	7477
0x0104	0x1D350000  	7477
0x0108	0x1D350000  	7477
0x010C	0x1D350000  	7477
0x0110	0x1D350000  	7477
0x0114	0x1D350000  	7477
0x0118	0x1D350000  	7477
0x011C	0x1D350000  	7477
0x0120	0x1D350000  	7477
0x0124	0x1D350000  	7477
0x0128	0x1D350000  	7477
0x012C	0x1D350000  	7477
0x0130	0x1D350000  	7477
; end of ____SysVT
_main:
;F100RTCTest.c, 240 :: 		void main() {
0x1AD0	0xB082    SUB	SP, SP, #8
0x1AD2	0xF000F8CD  BL	7280
0x1AD6	0xF000FA21  BL	7964
0x1ADA	0xF000F921  BL	7456
0x1ADE	0xF000F9DD  BL	7836
;F100RTCTest.c, 242 :: 		uart1_init(115200);
0x1AE2	0xF44F30E1  MOV	R0, #115200
0x1AE6	0xF7FFFD89  BL	_UART1_Init+0
;F100RTCTest.c, 243 :: 		uart1_write_text("Rdy");
0x1AEA	0x484F    LDR	R0, [PC, #316]
0x1AEC	0xF7FFFC7C  BL	_UART1_Write_Text+0
;F100RTCTest.c, 244 :: 		uart1_write(10);
0x1AF0	0x200A    MOVS	R0, #10
0x1AF2	0xF7FFFC6B  BL	_UART1_Write+0
;F100RTCTest.c, 245 :: 		uart1_write(13);
0x1AF6	0x200D    MOVS	R0, #13
0x1AF8	0xF7FFFC68  BL	_UART1_Write+0
;F100RTCTest.c, 246 :: 		uart1_write_text("SerialNo ");
0x1AFC	0x484B    LDR	R0, [PC, #300]
0x1AFE	0xF7FFFC73  BL	_UART1_Write_Text+0
;F100RTCTest.c, 247 :: 		LongWordToStr(Unique_ID[0],txt);
0x1B02	0xA900    ADD	R1, SP, #0
0x1B04	0x484A    LDR	R0, [PC, #296]
0x1B06	0x6800    LDR	R0, [R0, #0]
0x1B08	0x6800    LDR	R0, [R0, #0]
0x1B0A	0xF7FFFD0B  BL	_LongWordToStr+0
;F100RTCTest.c, 248 :: 		uart1_write_text(" ");
0x1B0E	0x4849    LDR	R0, [PC, #292]
0x1B10	0xF7FFFC6A  BL	_UART1_Write_Text+0
;F100RTCTest.c, 249 :: 		uart1_write_text(txt);
0x1B14	0xA800    ADD	R0, SP, #0
0x1B16	0xF7FFFC67  BL	_UART1_Write_Text+0
;F100RTCTest.c, 250 :: 		LongWordToStr(Unique_ID[1],txt);
0x1B1A	0xA900    ADD	R1, SP, #0
0x1B1C	0x4844    LDR	R0, [PC, #272]
0x1B1E	0x6800    LDR	R0, [R0, #0]
0x1B20	0x1D00    ADDS	R0, R0, #4
0x1B22	0x6800    LDR	R0, [R0, #0]
0x1B24	0xF7FFFCFE  BL	_LongWordToStr+0
;F100RTCTest.c, 251 :: 		uart1_write_text(" ");
0x1B28	0x4843    LDR	R0, [PC, #268]
0x1B2A	0xF7FFFC5D  BL	_UART1_Write_Text+0
;F100RTCTest.c, 252 :: 		uart1_write_text(txt);
0x1B2E	0xA800    ADD	R0, SP, #0
0x1B30	0xF7FFFC5A  BL	_UART1_Write_Text+0
;F100RTCTest.c, 253 :: 		LongWordToStr(Unique_ID[2],txt);
0x1B34	0xA900    ADD	R1, SP, #0
0x1B36	0x483E    LDR	R0, [PC, #248]
0x1B38	0x6800    LDR	R0, [R0, #0]
0x1B3A	0x3008    ADDS	R0, #8
0x1B3C	0x6800    LDR	R0, [R0, #0]
0x1B3E	0xF7FFFCF1  BL	_LongWordToStr+0
;F100RTCTest.c, 254 :: 		uart1_write_text(" ");
0x1B42	0x483E    LDR	R0, [PC, #248]
0x1B44	0xF7FFFC50  BL	_UART1_Write_Text+0
;F100RTCTest.c, 255 :: 		uart1_write_text(txt);
0x1B48	0xA800    ADD	R0, SP, #0
0x1B4A	0xF7FFFC4D  BL	_UART1_Write_Text+0
;F100RTCTest.c, 257 :: 		uart1_write(10);
0x1B4E	0x200A    MOVS	R0, #10
0x1B50	0xF7FFFC3C  BL	_UART1_Write+0
;F100RTCTest.c, 258 :: 		uart1_write(13);
0x1B54	0x200D    MOVS	R0, #13
0x1B56	0xF7FFFC39  BL	_UART1_Write+0
;F100RTCTest.c, 259 :: 		ADC_Set_Input_Channel(_ADC_CHANNEL_0 | _ADC_CHANNEL_1);      //иниц ацп
0x1B5A	0x2003    MOVS	R0, #3
0x1B5C	0xF7FFFC52  BL	_ADC_Set_Input_Channel+0
;F100RTCTest.c, 260 :: 		adc1_init();
0x1B60	0xF7FFFD84  BL	_ADC1_Init+0
;F100RTCTest.c, 261 :: 		ADC1_SMPR1=0xffff;//максимальное время преобразования
0x1B64	0xF64F71FF  MOVW	R1, #65535
0x1B68	0x4835    LDR	R0, [PC, #212]
0x1B6A	0x6001    STR	R1, [R0, #0]
;F100RTCTest.c, 262 :: 		ADC1_SMPR2=0xffff;
0x1B6C	0xF64F71FF  MOVW	R1, #65535
0x1B70	0x4834    LDR	R0, [PC, #208]
0x1B72	0x6001    STR	R1, [R0, #0]
;F100RTCTest.c, 263 :: 		ADC1_Get_Sample(16);//два преобразования для калибровки
0x1B74	0x2010    MOVS	R0, #16
0x1B76	0xF7FFFDCF  BL	_ADC1_Get_Sample+0
;F100RTCTest.c, 264 :: 		ADC1_Get_Sample(17);
0x1B7A	0x2011    MOVS	R0, #17
0x1B7C	0xF7FFFDCC  BL	_ADC1_Get_Sample+0
;F100RTCTest.c, 265 :: 		while(ADC1_SRbits.EOC){delay_us(1);};//ждем флага окончания преобразования
L_main46:
0x1B80	0x4931    LDR	R1, [PC, #196]
0x1B82	0x6808    LDR	R0, [R1, #0]
0x1B84	0xB150    CBZ	R0, L_main47
0x1B86	0xF2400701  MOVW	R7, #1
0x1B8A	0xF2C00700  MOVT	R7, #0
0x1B8E	0xBF00    NOP
0x1B90	0xBF00    NOP
L_main48:
0x1B92	0x1E7F    SUBS	R7, R7, #1
0x1B94	0xD1FD    BNE	L_main48
0x1B96	0xBF00    NOP
0x1B98	0xBF00    NOP
0x1B9A	0xE7F1    B	L_main46
L_main47:
;F100RTCTest.c, 266 :: 		ADC1_CR2bits.CAL=1;//калибровка
0x1B9C	0x2101    MOVS	R1, #1
0x1B9E	0xB249    SXTB	R1, R1
0x1BA0	0x482A    LDR	R0, [PC, #168]
0x1BA2	0x6001    STR	R1, [R0, #0]
;F100RTCTest.c, 267 :: 		while(ADC1_SRbits.EOC){delay_us(1);};//ждем флага окончания преобразования - готово!
L_main50:
0x1BA4	0x4928    LDR	R1, [PC, #160]
0x1BA6	0x6808    LDR	R0, [R1, #0]
0x1BA8	0xB150    CBZ	R0, L_main51
0x1BAA	0xF2400701  MOVW	R7, #1
0x1BAE	0xF2C00700  MOVT	R7, #0
0x1BB2	0xBF00    NOP
0x1BB4	0xBF00    NOP
L_main52:
0x1BB6	0x1E7F    SUBS	R7, R7, #1
0x1BB8	0xD1FD    BNE	L_main52
0x1BBA	0xBF00    NOP
0x1BBC	0xBF00    NOP
0x1BBE	0xE7F1    B	L_main50
L_main51:
;F100RTCTest.c, 271 :: 		TSVREFE_bit=1;//включение измерения температуры и опорного напряжения
0x1BC0	0x2201    MOVS	R2, #1
0x1BC2	0xB252    SXTB	R2, R2
0x1BC4	0x4822    LDR	R0, [PC, #136]
0x1BC6	0x6002    STR	R2, [R0, #0]
;F100RTCTest.c, 276 :: 		STK_CTRLbits.CLKSOURCE=1;
0x1BC8	0x4922    LDR	R1, [PC, #136]
0x1BCA	0x6808    LDR	R0, [R1, #0]
0x1BCC	0xF3620082  BFI	R0, R2, #2, #1
0x1BD0	0x6008    STR	R0, [R1, #0]
;F100RTCTest.c, 278 :: 		STK_CTRLbits.ENABLE_=1;
0x1BD2	0x4920    LDR	R1, [PC, #128]
0x1BD4	0x6808    LDR	R0, [R1, #0]
0x1BD6	0xF3620000  BFI	R0, R2, #0, #1
0x1BDA	0x6008    STR	R0, [R1, #0]
;F100RTCTest.c, 282 :: 		RTC_INIT();
0x1BDC	0xF7FFFDAA  BL	_RTC_INIT+0
;F100RTCTest.c, 284 :: 		NVIC_IntEnable(IVT_INT_RTC_WKUP);//прерывание для часов
0x1BE0	0xF2400013  MOVW	R0, #19
0x1BE4	0xF7FFFCCE  BL	_NVIC_IntEnable+0
;F100RTCTest.c, 286 :: 		SLEEPDEEP_bit=0;//устанавливаем бит засыпания в sleep
0x1BE8	0x2300    MOVS	R3, #0
0x1BEA	0xB25B    SXTB	R3, R3
0x1BEC	0x491A    LDR	R1, [PC, #104]
0x1BEE	0x6808    LDR	R0, [R1, #0]
0x1BF0	0xF3630082  BFI	R0, R3, BitPos(SLEEPDEEP_bit+0), #1
0x1BF4	0x6008    STR	R0, [R1, #0]
;F100RTCTest.c, 288 :: 		SLEEPONEXIT_bit=1;//засыпаем после выхода из прерывания
0x1BF6	0x2201    MOVS	R2, #1
0x1BF8	0xB252    SXTB	R2, R2
0x1BFA	0x4918    LDR	R1, [PC, #96]
0x1BFC	0x6808    LDR	R0, [R1, #0]
0x1BFE	0xF3620041  BFI	R0, R2, BitPos(SLEEPONEXIT_bit+0), #1
0x1C02	0x6008    STR	R0, [R1, #0]
;F100RTCTest.c, 289 :: 		PWR_CRbits.PDDS=0;//сбрасываем
0x1C04	0x4816    LDR	R0, [PC, #88]
0x1C06	0x6003    STR	R3, [R0, #0]
;F100RTCTest.c, 290 :: 		PWR_CRbits.LPDS=0;//стабилизатор
0x1C08	0x4816    LDR	R0, [PC, #88]
0x1C0A	0x6003    STR	R3, [R0, #0]
;F100RTCTest.c, 292 :: 		ADC1_CR2bits.ADON=0;//засыпаем АЦП
0x1C0C	0x4816    LDR	R0, [PC, #88]
0x1C0E	0x6003    STR	R3, [R0, #0]
;F100RTCTest.c, 295 :: 		WFI
0x1C10	0xBF30    WFI
;F100RTCTest.c, 298 :: 		while(1)
L_main54:
;F100RTCTest.c, 299 :: 		{uart1_write_text("No sleep!");   //сигнал о том, что контроллер не спит
0x1C12	0x4816    LDR	R0, [PC, #88]
0x1C14	0xF7FFFBE8  BL	_UART1_Write_Text+0
;F100RTCTest.c, 300 :: 		uart1_write(10);
0x1C18	0x200A    MOVS	R0, #10
0x1C1A	0xF7FFFBD7  BL	_UART1_Write+0
;F100RTCTest.c, 301 :: 		uart1_write(13); };
0x1C1E	0x200D    MOVS	R0, #13
0x1C20	0xF7FFFBD4  BL	_UART1_Write+0
0x1C24	0xE7F5    B	L_main54
;F100RTCTest.c, 303 :: 		}
L_end_main:
L__main_end_loop:
0x1C26	0xE7FE    B	L__main_end_loop
0x1C28	0x00002000  	?lstr10_F100RTCTest+0
0x1C2C	0x00042000  	?lstr11_F100RTCTest+0
0x1C30	0x00102000  	F100RTCTest_Unique_ID+0
0x1C34	0x000E2000  	?lstr12_F100RTCTest+0
0x1C38	0x00142000  	?lstr13_F100RTCTest+0
0x1C3C	0x00162000  	?lstr14_F100RTCTest+0
0x1C40	0x240C4001  	ADC1_SMPR1+0
0x1C44	0x24104001  	ADC1_SMPR2+0
0x1C48	0x80044224  	ADC1_SRbits+0
0x1C4C	0x81084224  	ADC1_CR2bits+0
0x1C50	0x815C4224  	TSVREFE_bit+0
0x1C54	0xE010E000  	STK_CTRLbits+0
0x1C58	0xED10E000  	SLEEPDEEP_bit+0
0x1C5C	0xED10E000  	SLEEPONEXIT_bit+0
0x1C60	0x0004420E  	PWR_CRbits+0
0x1C64	0x0000420E  	PWR_CRbits+0
0x1C68	0x81004224  	ADC1_CR2bits+0
0x1C6C	0x00182000  	?lstr15_F100RTCTest+0
; end of _main
_NVIC_IntEnable:
;__Lib_System_100.c, 185 :: 		
; ivt start address is: 0 (R0)
0x1584	0xB081    SUB	SP, SP, #4
; ivt end address is: 0 (R0)
; ivt start address is: 0 (R0)
;__Lib_System_100.c, 197 :: 		
0x1586	0x2804    CMP	R0, #4
0x1588	0xD106    BNE	L_NVIC_IntEnable9
; ivt end address is: 0 (R0)
;__Lib_System_100.c, 202 :: 		
0x158A	0x4919    LDR	R1, [PC, #100]
0x158C	0x6809    LDR	R1, [R1, #0]
0x158E	0xF4413280  ORR	R2, R1, #65536
0x1592	0x4917    LDR	R1, [PC, #92]
0x1594	0x600A    STR	R2, [R1, #0]
;__Lib_System_100.c, 203 :: 		
0x1596	0xE028    B	L_NVIC_IntEnable10
L_NVIC_IntEnable9:
;__Lib_System_100.c, 204 :: 		
; ivt start address is: 0 (R0)
0x1598	0x2805    CMP	R0, #5
0x159A	0xD106    BNE	L_NVIC_IntEnable11
; ivt end address is: 0 (R0)
;__Lib_System_100.c, 209 :: 		
0x159C	0x4914    LDR	R1, [PC, #80]
0x159E	0x6809    LDR	R1, [R1, #0]
0x15A0	0xF4413200  ORR	R2, R1, #131072
0x15A4	0x4912    LDR	R1, [PC, #72]
0x15A6	0x600A    STR	R2, [R1, #0]
;__Lib_System_100.c, 210 :: 		
0x15A8	0xE01F    B	L_NVIC_IntEnable12
L_NVIC_IntEnable11:
;__Lib_System_100.c, 211 :: 		
; ivt start address is: 0 (R0)
0x15AA	0x2806    CMP	R0, #6
0x15AC	0xD106    BNE	L_NVIC_IntEnable13
; ivt end address is: 0 (R0)
;__Lib_System_100.c, 216 :: 		
0x15AE	0x4910    LDR	R1, [PC, #64]
0x15B0	0x6809    LDR	R1, [R1, #0]
0x15B2	0xF4412280  ORR	R2, R1, #262144
0x15B6	0x490E    LDR	R1, [PC, #56]
0x15B8	0x600A    STR	R2, [R1, #0]
;__Lib_System_100.c, 217 :: 		
0x15BA	0xE016    B	L_NVIC_IntEnable14
L_NVIC_IntEnable13:
;__Lib_System_100.c, 218 :: 		
; ivt start address is: 0 (R0)
0x15BC	0x280F    CMP	R0, #15
0x15BE	0xD106    BNE	L_NVIC_IntEnable15
; ivt end address is: 0 (R0)
;__Lib_System_100.c, 223 :: 		
0x15C0	0x490C    LDR	R1, [PC, #48]
0x15C2	0x6809    LDR	R1, [R1, #0]
0x15C4	0xF0410202  ORR	R2, R1, #2
0x15C8	0x490A    LDR	R1, [PC, #40]
0x15CA	0x600A    STR	R2, [R1, #0]
;__Lib_System_100.c, 224 :: 		
0x15CC	0xE00D    B	L_NVIC_IntEnable16
L_NVIC_IntEnable15:
;__Lib_System_100.c, 225 :: 		
; ivt start address is: 0 (R0)
0x15CE	0x2810    CMP	R0, #16
0x15D0	0xD30B    BCC	L_NVIC_IntEnable17
;__Lib_System_100.c, 230 :: 		
0x15D2	0xF2A00410  SUBW	R4, R0, #16
; ivt end address is: 0 (R0)
0x15D6	0x0961    LSRS	R1, R4, #5
0x15D8	0x008A    LSLS	R2, R1, #2
0x15DA	0x4907    LDR	R1, [PC, #28]
0x15DC	0x188B    ADDS	R3, R1, R2
;__Lib_System_100.c, 231 :: 		
0x15DE	0xF004021F  AND	R2, R4, #31
0x15E2	0xF04F0101  MOV	R1, #1
0x15E6	0x4091    LSLS	R1, R2
0x15E8	0x6019    STR	R1, [R3, #0]
;__Lib_System_100.c, 232 :: 		
L_NVIC_IntEnable17:
L_NVIC_IntEnable16:
L_NVIC_IntEnable14:
L_NVIC_IntEnable12:
L_NVIC_IntEnable10:
;__Lib_System_100.c, 233 :: 		
L_end_NVIC_IntEnable:
0x15EA	0xB001    ADD	SP, SP, #4
0x15EC	0x4770    BX	LR
0x15EE	0xBF00    NOP
0x15F0	0xED24E000  	SCB_SHCRS+0
0x15F4	0xE010E000  	STK_CTRL+0
0x15F8	0xE100E000  	NVIC_ISER0+0
; end of _NVIC_IntEnable
___CC2DW:
;__Lib_System_100.c, 27 :: 		
0x1570	0xB081    SUB	SP, SP, #4
;__Lib_System_100.c, 29 :: 		
L_loopDW:
;__Lib_System_100.c, 30 :: 		
0x1572	0xF81C9B01  LDRB	R9, [R12], #1
;__Lib_System_100.c, 31 :: 		
0x1576	0xF80B9B01  STRB	R9, [R11], #1
;__Lib_System_100.c, 32 :: 		
0x157A	0xEBBB0F0A  CMP	R11, R10, LSL #0
;__Lib_System_100.c, 33 :: 		
0x157E	0xD1F8    BNE	L_loopDW
;__Lib_System_100.c, 35 :: 		
L_end___CC2DW:
0x1580	0xB001    ADD	SP, SP, #4
0x1582	0x4770    BX	LR
; end of ___CC2DW
___FillZeros:
;__Lib_System_100.c, 69 :: 		
0x1630	0xB081    SUB	SP, SP, #4
;__Lib_System_100.c, 71 :: 		
0x1632	0xF04F0900  MOV	R9, #0
;__Lib_System_100.c, 72 :: 		
0x1636	0xF04F0C00  MOV	R12, #0
;__Lib_System_100.c, 73 :: 		
0x163A	0xEBBD0F0A  CMP	SP, R10, LSL #0
;__Lib_System_100.c, 74 :: 		
0x163E	0xDC04    BGT	L_loopFZs
;__Lib_System_100.c, 75 :: 		
0x1640	0xEBBD0F0B  CMP	SP, R11, LSL #0
;__Lib_System_100.c, 76 :: 		
0x1644	0xDB01    BLT	L_loopFZs
;__Lib_System_100.c, 77 :: 		
0x1646	0x46D4    MOV	R12, R10
;__Lib_System_100.c, 78 :: 		
0x1648	0x46EA    MOV	R10, SP
;__Lib_System_100.c, 79 :: 		
L_loopFZs:
;__Lib_System_100.c, 80 :: 		
0x164A	0xF84B9B04  STR	R9, [R11], #4
;__Lib_System_100.c, 81 :: 		
0x164E	0xEBBB0F0A  CMP	R11, R10, LSL #0
;__Lib_System_100.c, 82 :: 		
0x1652	0xD1FA    BNE	L_loopFZs
;__Lib_System_100.c, 83 :: 		
0x1654	0xEBBC0F0A  CMP	R12, R10, LSL #0
;__Lib_System_100.c, 84 :: 		
0x1658	0xDD05    BLE	L_norep
;__Lib_System_100.c, 85 :: 		
0x165A	0x46E2    MOV	R10, R12
;__Lib_System_100.c, 86 :: 		
0x165C	0xF8D9B000  LDR	R11, [R9, #0]
;__Lib_System_100.c, 87 :: 		
0x1660	0xF10B0B04  ADD	R11, R11, #4
;__Lib_System_100.c, 88 :: 		
0x1664	0xE7F1    B	L_loopFZs
;__Lib_System_100.c, 89 :: 		
L_norep:
;__Lib_System_100.c, 91 :: 		
L_end___FillZeros:
0x1666	0xB001    ADD	SP, SP, #4
0x1668	0x4770    BX	LR
; end of ___FillZeros
_UART1_Init:
;__Lib_UART_123.c, 304 :: 		
; baud_rate start address is: 0 (R0)
0x15FC	0xB081    SUB	SP, SP, #4
0x15FE	0xF8CDE000  STR	LR, [SP, #0]
; baud_rate end address is: 0 (R0)
; baud_rate start address is: 0 (R0)
;__Lib_UART_123.c, 305 :: 		
0x1602	0x4A09    LDR	R2, [PC, #36]
0x1604	0xF2400100  MOVW	R1, #0
0x1608	0xB404    PUSH	(R2)
0x160A	0xB402    PUSH	(R1)
0x160C	0xF2400300  MOVW	R3, #0
0x1610	0xF2400200  MOVW	R2, #0
0x1614	0x4601    MOV	R1, R0
; baud_rate end address is: 0 (R0)
0x1616	0x4805    LDR	R0, [PC, #20]
0x1618	0xF7FFFA20  BL	__Lib_UART_123_UARTx_Init_Advanced+0
0x161C	0xB002    ADD	SP, SP, #8
;__Lib_UART_123.c, 306 :: 		
L_end_UART1_Init:
0x161E	0xF8DDE000  LDR	LR, [SP, #0]
0x1622	0xB001    ADD	SP, SP, #4
0x1624	0x4770    BX	LR
0x1626	0xBF00    NOP
0x1628	0x1DD00000  	__GPIO_MODULE_USART1_PA9_10+0
0x162C	0x38004001  	USART1_SR+0
; end of _UART1_Init
__Lib_UART_123_UARTx_Init_Advanced:
;__Lib_UART_123.c, 226 :: 		
; UART_Base start address is: 0 (R0)
0x0A5C	0xB08A    SUB	SP, SP, #40
0x0A5E	0xF8CDE000  STR	LR, [SP, #0]
0x0A62	0x9108    STR	R1, [SP, #32]
0x0A64	0xF8AD3024  STRH	R3, [SP, #36]
; UART_Base end address is: 0 (R0)
; UART_Base start address is: 0 (R0)
0x0A68	0xF8BD4028  LDRH	R4, [SP, #40]
0x0A6C	0xF8AD4028  STRH	R4, [SP, #40]
; module start address is: 24 (R6)
0x0A70	0x9E0B    LDR	R6, [SP, #44]
;__Lib_UART_123.c, 230 :: 		
0x0A72	0xAC03    ADD	R4, SP, #12
0x0A74	0x9001    STR	R0, [SP, #4]
0x0A76	0x4620    MOV	R0, R4
0x0A78	0xF7FFFF1C  BL	_RCC_GetClocksFrequency+0
0x0A7C	0x9801    LDR	R0, [SP, #4]
;__Lib_UART_123.c, 232 :: 		
0x0A7E	0x4C50    LDR	R4, [PC, #320]
0x0A80	0x42A0    CMP	R0, R4
0x0A82	0xD112    BNE	L___Lib_UART_123_UARTx_Init_Advanced15
;__Lib_UART_123.c, 233 :: 		
0x0A84	0x2501    MOVS	R5, #1
0x0A86	0xB26D    SXTB	R5, R5
0x0A88	0x4C4E    LDR	R4, [PC, #312]
0x0A8A	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123.c, 234 :: 		
0x0A8C	0x4D4E    LDR	R5, [PC, #312]
0x0A8E	0x4C4F    LDR	R4, [PC, #316]
0x0A90	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123.c, 235 :: 		
0x0A92	0x4D4F    LDR	R5, [PC, #316]
0x0A94	0x4C4F    LDR	R4, [PC, #316]
0x0A96	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123.c, 236 :: 		
0x0A98	0x4D4F    LDR	R5, [PC, #316]
0x0A9A	0x4C50    LDR	R4, [PC, #320]
0x0A9C	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123.c, 237 :: 		
0x0A9E	0x4D50    LDR	R5, [PC, #320]
0x0AA0	0x4C50    LDR	R4, [PC, #320]
0x0AA2	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123.c, 238 :: 		
0x0AA4	0x9C06    LDR	R4, [SP, #24]
0x0AA6	0x9402    STR	R4, [SP, #8]
;__Lib_UART_123.c, 239 :: 		
0x0AA8	0xE02A    B	L___Lib_UART_123_UARTx_Init_Advanced16
L___Lib_UART_123_UARTx_Init_Advanced15:
;__Lib_UART_123.c, 240 :: 		
0x0AAA	0x4C4F    LDR	R4, [PC, #316]
0x0AAC	0x42A0    CMP	R0, R4
0x0AAE	0xD112    BNE	L___Lib_UART_123_UARTx_Init_Advanced17
;__Lib_UART_123.c, 241 :: 		
0x0AB0	0x2501    MOVS	R5, #1
0x0AB2	0xB26D    SXTB	R5, R5
0x0AB4	0x4C4D    LDR	R4, [PC, #308]
0x0AB6	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123.c, 242 :: 		
0x0AB8	0x4D4D    LDR	R5, [PC, #308]
0x0ABA	0x4C44    LDR	R4, [PC, #272]
0x0ABC	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123.c, 243 :: 		
0x0ABE	0x4D4D    LDR	R5, [PC, #308]
0x0AC0	0x4C44    LDR	R4, [PC, #272]
0x0AC2	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123.c, 244 :: 		
0x0AC4	0x4D4C    LDR	R5, [PC, #304]
0x0AC6	0x4C45    LDR	R4, [PC, #276]
0x0AC8	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123.c, 245 :: 		
0x0ACA	0x4D4C    LDR	R5, [PC, #304]
0x0ACC	0x4C45    LDR	R4, [PC, #276]
0x0ACE	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123.c, 246 :: 		
0x0AD0	0x9C05    LDR	R4, [SP, #20]
0x0AD2	0x9402    STR	R4, [SP, #8]
;__Lib_UART_123.c, 247 :: 		
0x0AD4	0xE014    B	L___Lib_UART_123_UARTx_Init_Advanced18
L___Lib_UART_123_UARTx_Init_Advanced17:
;__Lib_UART_123.c, 248 :: 		
0x0AD6	0x4C4A    LDR	R4, [PC, #296]
0x0AD8	0x42A0    CMP	R0, R4
0x0ADA	0xD111    BNE	L___Lib_UART_123_UARTx_Init_Advanced19
;__Lib_UART_123.c, 249 :: 		
0x0ADC	0x2501    MOVS	R5, #1
0x0ADE	0xB26D    SXTB	R5, R5
0x0AE0	0x4C48    LDR	R4, [PC, #288]
0x0AE2	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123.c, 250 :: 		
0x0AE4	0x4D48    LDR	R5, [PC, #288]
0x0AE6	0x4C39    LDR	R4, [PC, #228]
0x0AE8	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123.c, 251 :: 		
0x0AEA	0x4D48    LDR	R5, [PC, #288]
0x0AEC	0x4C39    LDR	R4, [PC, #228]
0x0AEE	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123.c, 252 :: 		
0x0AF0	0x4D47    LDR	R5, [PC, #284]
0x0AF2	0x4C3A    LDR	R4, [PC, #232]
0x0AF4	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123.c, 253 :: 		
0x0AF6	0x4D47    LDR	R5, [PC, #284]
0x0AF8	0x4C3A    LDR	R4, [PC, #232]
0x0AFA	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123.c, 254 :: 		
0x0AFC	0x9C05    LDR	R4, [SP, #20]
0x0AFE	0x9402    STR	R4, [SP, #8]
;__Lib_UART_123.c, 255 :: 		
L___Lib_UART_123_UARTx_Init_Advanced19:
L___Lib_UART_123_UARTx_Init_Advanced18:
L___Lib_UART_123_UARTx_Init_Advanced16:
;__Lib_UART_123.c, 257 :: 		
0x0B00	0x9001    STR	R0, [SP, #4]
; module end address is: 24 (R6)
0x0B02	0x4630    MOV	R0, R6
0x0B04	0xF7FFFE4E  BL	_GPIO_Alternate_Function_Enable+0
0x0B08	0x9801    LDR	R0, [SP, #4]
;__Lib_UART_123.c, 259 :: 		
0x0B0A	0xF2000510  ADDW	R5, R0, #16
0x0B0E	0x2400    MOVS	R4, #0
0x0B10	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123.c, 260 :: 		
0x0B12	0xF2000610  ADDW	R6, R0, #16
0x0B16	0x6835    LDR	R5, [R6, #0]
0x0B18	0xF8BD4028  LDRH	R4, [SP, #40]
0x0B1C	0xEA450404  ORR	R4, R5, R4, LSL #0
0x0B20	0x6034    STR	R4, [R6, #0]
;__Lib_UART_123.c, 261 :: 		
0x0B22	0xF200050C  ADDW	R5, R0, #12
0x0B26	0x2400    MOVS	R4, #0
0x0B28	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123.c, 263 :: 		
0x0B2A	0xF8BD4024  LDRH	R4, [SP, #36]
0x0B2E	0xB12C    CBZ	R4, L___Lib_UART_123_UARTx_Init_Advanced20
;__Lib_UART_123.c, 264 :: 		
0x0B30	0xF8BD4024  LDRH	R4, [SP, #36]
0x0B34	0xF4446480  ORR	R4, R4, #1024
0x0B38	0xF8AD4024  STRH	R4, [SP, #36]
;__Lib_UART_123.c, 265 :: 		
L___Lib_UART_123_UARTx_Init_Advanced20:
;__Lib_UART_123.c, 267 :: 		
0x0B3C	0xF200060C  ADDW	R6, R0, #12
0x0B40	0x6835    LDR	R5, [R6, #0]
0x0B42	0xF8BD4024  LDRH	R4, [SP, #36]
0x0B46	0xEA450404  ORR	R4, R5, R4, LSL #0
0x0B4A	0x6034    STR	R4, [R6, #0]
;__Lib_UART_123.c, 269 :: 		
0x0B4C	0xF200060C  ADDW	R6, R0, #12
0x0B50	0x2501    MOVS	R5, #1
0x0B52	0x6834    LDR	R4, [R6, #0]
0x0B54	0xF365344D  BFI	R4, R5, #13, #1
0x0B58	0x6034    STR	R4, [R6, #0]
;__Lib_UART_123.c, 270 :: 		
0x0B5A	0xF200060C  ADDW	R6, R0, #12
0x0B5E	0x2501    MOVS	R5, #1
0x0B60	0x6834    LDR	R4, [R6, #0]
0x0B62	0xF36504C3  BFI	R4, R5, #3, #1
0x0B66	0x6034    STR	R4, [R6, #0]
;__Lib_UART_123.c, 271 :: 		
0x0B68	0xF200060C  ADDW	R6, R0, #12
0x0B6C	0x2501    MOVS	R5, #1
0x0B6E	0x6834    LDR	R4, [R6, #0]
0x0B70	0xF3650482  BFI	R4, R5, #2, #1
0x0B74	0x6034    STR	R4, [R6, #0]
;__Lib_UART_123.c, 272 :: 		
0x0B76	0xF2000514  ADDW	R5, R0, #20
0x0B7A	0x2400    MOVS	R4, #0
0x0B7C	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123.c, 277 :: 		
0x0B7E	0x9D02    LDR	R5, [SP, #8]
0x0B80	0x2419    MOVS	R4, #25
0x0B82	0x4365    MULS	R5, R4, R5
0x0B84	0x9C08    LDR	R4, [SP, #32]
0x0B86	0x00A4    LSLS	R4, R4, #2
0x0B88	0xFBB5F7F4  UDIV	R7, R5, R4
;__Lib_UART_123.c, 278 :: 		
0x0B8C	0x2464    MOVS	R4, #100
0x0B8E	0xFBB7F4F4  UDIV	R4, R7, R4
0x0B92	0x0126    LSLS	R6, R4, #4
;__Lib_UART_123.c, 280 :: 		
0x0B94	0x0935    LSRS	R5, R6, #4
0x0B96	0x2464    MOVS	R4, #100
0x0B98	0x436C    MULS	R4, R5, R4
0x0B9A	0x1B3C    SUB	R4, R7, R4
;__Lib_UART_123.c, 281 :: 		
0x0B9C	0x0124    LSLS	R4, R4, #4
0x0B9E	0xF2040532  ADDW	R5, R4, #50
0x0BA2	0x2464    MOVS	R4, #100
0x0BA4	0xFBB5F4F4  UDIV	R4, R5, R4
0x0BA8	0xF004040F  AND	R4, R4, #15
0x0BAC	0xEA460404  ORR	R4, R6, R4, LSL #0
;__Lib_UART_123.c, 283 :: 		
0x0BB0	0xF2000508  ADDW	R5, R0, #8
; UART_Base end address is: 0 (R0)
0x0BB4	0xB2A4    UXTH	R4, R4
0x0BB6	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123.c, 284 :: 		
L_end_UARTx_Init_Advanced:
0x0BB8	0xF8DDE000  LDR	LR, [SP, #0]
0x0BBC	0xB00A    ADD	SP, SP, #40
0x0BBE	0x4770    BX	LR
0x0BC0	0x38004001  	USART1_SR+0
0x0BC4	0x03384242  	RCC_APB2ENR+0
0x0BC8	0x13CD0000  	_UART1_Write+0
0x0BCC	0x009C2000  	_UART_Wr_Ptr+0
0x0BD0	0xFFFFFFFF  	_UART1_Read+0
0x0BD4	0x00A02000  	_UART_Rd_Ptr+0
0x0BD8	0xFFFFFFFF  	_UART1_Data_Ready+0
0x0BDC	0x00A42000  	_UART_Rdy_Ptr+0
0x0BE0	0xFFFFFFFF  	_UART1_Tx_Idle+0
0x0BE4	0x00A82000  	_UART_Tx_Idle_Ptr+0
0x0BE8	0x44004000  	USART2_SR+0
0x0BEC	0x03C44242  	RCC_APB1ENR+0
0x0BF0	0xFFFFFFFF  	_UART2_Write+0
0x0BF4	0xFFFFFFFF  	_UART2_Read+0
0x0BF8	0xFFFFFFFF  	_UART2_Data_Ready+0
0x0BFC	0xFFFFFFFF  	_UART2_Tx_Idle+0
0x0C00	0x48004000  	USART3_SR+0
0x0C04	0x03C84242  	RCC_APB1ENR+0
0x0C08	0xFFFFFFFF  	_UART3_Write+0
0x0C0C	0xFFFFFFFF  	_UART3_Read+0
0x0C10	0xFFFFFFFF  	_UART3_Data_Ready+0
0x0C14	0xFFFFFFFF  	_UART3_Tx_Idle+0
; end of __Lib_UART_123_UARTx_Init_Advanced
_RCC_GetClocksFrequency:
;__Lib_System_100.c, 414 :: 		
; RCC_Clocks start address is: 0 (R0)
0x08B4	0xB082    SUB	SP, SP, #8
0x08B6	0xF8CDE000  STR	LR, [SP, #0]
0x08BA	0x4603    MOV	R3, R0
; RCC_Clocks end address is: 0 (R0)
; RCC_Clocks start address is: 12 (R3)
;__Lib_System_100.c, 417 :: 		
0x08BC	0x4619    MOV	R1, R3
0x08BE	0x9101    STR	R1, [SP, #4]
0x08C0	0xF7FFFD18  BL	_Get_Fosc_kHz+0
0x08C4	0xF24031E8  MOVW	R1, #1000
0x08C8	0xFB00F201  MUL	R2, R0, R1
0x08CC	0x9901    LDR	R1, [SP, #4]
0x08CE	0x600A    STR	R2, [R1, #0]
;__Lib_System_100.c, 420 :: 		
0x08D0	0x491F    LDR	R1, [PC, #124]
0x08D2	0x7809    LDRB	R1, [R1, #0]
0x08D4	0xF3C11103  UBFX	R1, R1, #4, #4
; tmp start address is: 0 (R0)
0x08D8	0xB2C8    UXTB	R0, R1
;__Lib_System_100.c, 421 :: 		
0x08DA	0x491E    LDR	R1, [PC, #120]
0x08DC	0x1809    ADDS	R1, R1, R0
; tmp end address is: 0 (R0)
0x08DE	0x7808    LDRB	R0, [R1, #0]
; presc start address is: 0 (R0)
0x08E0	0xB2C0    UXTB	R0, R0
;__Lib_System_100.c, 423 :: 		
0x08E2	0x1D1A    ADDS	R2, R3, #4
0x08E4	0x6819    LDR	R1, [R3, #0]
0x08E6	0x40C1    LSRS	R1, R0
; presc end address is: 0 (R0)
0x08E8	0x6011    STR	R1, [R2, #0]
;__Lib_System_100.c, 425 :: 		
0x08EA	0x4919    LDR	R1, [PC, #100]
0x08EC	0x8809    LDRH	R1, [R1, #0]
0x08EE	0xF3C12102  UBFX	R1, R1, #8, #3
; tmp start address is: 0 (R0)
0x08F2	0xB288    UXTH	R0, R1
;__Lib_System_100.c, 426 :: 		
0x08F4	0x4917    LDR	R1, [PC, #92]
0x08F6	0x1809    ADDS	R1, R1, R0
; tmp end address is: 0 (R0)
0x08F8	0x7808    LDRB	R0, [R1, #0]
; presc start address is: 0 (R0)
0x08FA	0xB2C0    UXTB	R0, R0
;__Lib_System_100.c, 428 :: 		
0x08FC	0xF2030208  ADDW	R2, R3, #8
0x0900	0x1D19    ADDS	R1, R3, #4
0x0902	0x6809    LDR	R1, [R1, #0]
0x0904	0x40C1    LSRS	R1, R0
; presc end address is: 0 (R0)
0x0906	0x6011    STR	R1, [R2, #0]
;__Lib_System_100.c, 430 :: 		
0x0908	0x4911    LDR	R1, [PC, #68]
0x090A	0x8809    LDRH	R1, [R1, #0]
0x090C	0xF3C121C2  UBFX	R1, R1, #11, #3
; tmp start address is: 0 (R0)
0x0910	0xB288    UXTH	R0, R1
;__Lib_System_100.c, 431 :: 		
0x0912	0x4910    LDR	R1, [PC, #64]
0x0914	0x1809    ADDS	R1, R1, R0
; tmp end address is: 0 (R0)
0x0916	0x7808    LDRB	R0, [R1, #0]
; presc start address is: 0 (R0)
0x0918	0xB2C0    UXTB	R0, R0
;__Lib_System_100.c, 433 :: 		
0x091A	0xF203020C  ADDW	R2, R3, #12
0x091E	0x1D19    ADDS	R1, R3, #4
0x0920	0x6809    LDR	R1, [R1, #0]
0x0922	0x40C1    LSRS	R1, R0
; presc end address is: 0 (R0)
0x0924	0x6011    STR	R1, [R2, #0]
;__Lib_System_100.c, 435 :: 		
0x0926	0x490A    LDR	R1, [PC, #40]
0x0928	0x8809    LDRH	R1, [R1, #0]
0x092A	0xF3C13181  UBFX	R1, R1, #14, #2
; tmp start address is: 0 (R0)
0x092E	0xB288    UXTH	R0, R1
;__Lib_System_100.c, 436 :: 		
0x0930	0x4909    LDR	R1, [PC, #36]
0x0932	0x1809    ADDS	R1, R1, R0
; tmp end address is: 0 (R0)
0x0934	0x7809    LDRB	R1, [R1, #0]
; presc start address is: 0 (R0)
0x0936	0xB2C8    UXTB	R0, R1
;__Lib_System_100.c, 438 :: 		
0x0938	0xF2030210  ADDW	R2, R3, #16
0x093C	0xF203010C  ADDW	R1, R3, #12
; RCC_Clocks end address is: 12 (R3)
0x0940	0x6809    LDR	R1, [R1, #0]
0x0942	0xFBB1F1F0  UDIV	R1, R1, R0
; presc end address is: 0 (R0)
0x0946	0x6011    STR	R1, [R2, #0]
;__Lib_System_100.c, 439 :: 		
L_end_RCC_GetClocksFrequency:
0x0948	0xF8DDE000  LDR	LR, [SP, #0]
0x094C	0xB002    ADD	SP, SP, #8
0x094E	0x4770    BX	LR
0x0950	0x10044002  	RCC_CFGRbits+0
0x0954	0x1E880000  	__Lib_System_100_APBAHBPrescTable+0
0x0958	0x1E980000  	__Lib_System_100_ADCPrescTable+0
; end of _RCC_GetClocksFrequency
_Get_Fosc_kHz:
;__Lib_Delays.c, 9 :: 		unsigned long Get_Fosc_kHz(){
;__Lib_Delays.c, 10 :: 		return __System_CLOCK_IN_KHZ;
0x02F4	0x4801    LDR	R0, [PC, #4]
0x02F6	0x6800    LDR	R0, [R0, #0]
;__Lib_Delays.c, 11 :: 		}
L_end_Get_Fosc_kHz:
0x02F8	0x4770    BX	LR
0x02FA	0xBF00    NOP
0x02FC	0x00982000  	___System_CLOCK_IN_KHZ+0
; end of _Get_Fosc_kHz
_GPIO_Alternate_Function_Enable:
;__Lib_GPIO_32F10x.c, 303 :: 		
; module start address is: 0 (R0)
0x07A4	0xB081    SUB	SP, SP, #4
0x07A6	0xF8CDE000  STR	LR, [SP, #0]
; module end address is: 0 (R0)
; module start address is: 0 (R0)
;__Lib_GPIO_32F10x.c, 304 :: 		
;__Lib_GPIO_32F10x.c, 305 :: 		
;__Lib_GPIO_32F10x.c, 307 :: 		
0x07AA	0x2201    MOVS	R2, #1
0x07AC	0xB252    SXTB	R2, R2
0x07AE	0x493E    LDR	R1, [PC, #248]
0x07B0	0x600A    STR	R2, [R1, #0]
;__Lib_GPIO_32F10x.c, 309 :: 		
0x07B2	0xF2000168  ADDW	R1, R0, #104
0x07B6	0x680B    LDR	R3, [R1, #0]
0x07B8	0xF06F6100  MVN	R1, #134217728
0x07BC	0xEA030201  AND	R2, R3, R1, LSL #0
; gpio_remap start address is: 16 (R4)
0x07C0	0x4614    MOV	R4, R2
;__Lib_GPIO_32F10x.c, 310 :: 		
0x07C2	0xF0036100  AND	R1, R3, #134217728
0x07C6	0x0EC9    LSRS	R1, R1, #27
; newstate start address is: 12 (R3)
0x07C8	0x460B    MOV	R3, R1
;__Lib_GPIO_32F10x.c, 312 :: 		
0x07CA	0xF0024100  AND	R1, R2, #-2147483648
0x07CE	0xF1B14F00  CMP	R1, #-2147483648
0x07D2	0xD102    BNE	L_GPIO_Alternate_Function_Enable66
;__Lib_GPIO_32F10x.c, 314 :: 		
0x07D4	0x4935    LDR	R1, [PC, #212]
; tmpreg start address is: 8 (R2)
0x07D6	0x680A    LDR	R2, [R1, #0]
;__Lib_GPIO_32F10x.c, 315 :: 		
; tmpreg end address is: 8 (R2)
0x07D8	0xE001    B	L_GPIO_Alternate_Function_Enable67
L_GPIO_Alternate_Function_Enable66:
;__Lib_GPIO_32F10x.c, 318 :: 		
0x07DA	0x4935    LDR	R1, [PC, #212]
; tmpreg start address is: 8 (R2)
0x07DC	0x680A    LDR	R2, [R1, #0]
; tmpreg end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 319 :: 		
L_GPIO_Alternate_Function_Enable67:
;__Lib_GPIO_32F10x.c, 321 :: 		
; tmpreg start address is: 8 (R2)
0x07DE	0xF4042170  AND	R1, R4, #983040
0x07E2	0x0C09    LSRS	R1, R1, #16
; tmpmask start address is: 24 (R6)
0x07E4	0x460E    MOV	R6, R1
;__Lib_GPIO_32F10x.c, 322 :: 		
0x07E6	0xF64F71FF  MOVW	R1, #65535
0x07EA	0xEA040101  AND	R1, R4, R1, LSL #0
; tmp start address is: 20 (R5)
0x07EE	0x460D    MOV	R5, R1
;__Lib_GPIO_32F10x.c, 324 :: 		
0x07F0	0xF4041140  AND	R1, R4, #3145728
0x07F4	0xF5B11F40  CMP	R1, #3145728
0x07F8	0xD10D    BNE	L_GPIO_Alternate_Function_Enable68
; tmpmask end address is: 24 (R6)
;__Lib_GPIO_32F10x.c, 326 :: 		
0x07FA	0xF06F6170  MVN	R1, #251658240
0x07FE	0xEA020101  AND	R1, R2, R1, LSL #0
; tmpreg end address is: 8 (R2)
; tmpreg start address is: 24 (R6)
0x0802	0x460E    MOV	R6, R1
;__Lib_GPIO_32F10x.c, 327 :: 		
0x0804	0x492A    LDR	R1, [PC, #168]
0x0806	0x680A    LDR	R2, [R1, #0]
0x0808	0xF06F6170  MVN	R1, #251658240
0x080C	0x400A    ANDS	R2, R1
0x080E	0x4928    LDR	R1, [PC, #160]
0x0810	0x600A    STR	R2, [R1, #0]
;__Lib_GPIO_32F10x.c, 328 :: 		
0x0812	0x4632    MOV	R2, R6
; tmpreg end address is: 24 (R6)
0x0814	0xE016    B	L_GPIO_Alternate_Function_Enable69
L_GPIO_Alternate_Function_Enable68:
;__Lib_GPIO_32F10x.c, 329 :: 		
; tmpreg start address is: 8 (R2)
; tmpmask start address is: 24 (R6)
0x0816	0xF4041180  AND	R1, R4, #1048576
0x081A	0xF5B11F80  CMP	R1, #1048576
0x081E	0xD109    BNE	L_GPIO_Alternate_Function_Enable70
;__Lib_GPIO_32F10x.c, 331 :: 		
0x0820	0xF04F0103  MOV	R1, #3
0x0824	0x40B1    LSLS	R1, R6
; tmpmask end address is: 24 (R6)
;__Lib_GPIO_32F10x.c, 332 :: 		
0x0826	0x43C9    MVN	R1, R1
0x0828	0xEA020101  AND	R1, R2, R1, LSL #0
; tmpreg end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 333 :: 		
0x082C	0xF0416170  ORR	R1, R1, #251658240
; tmpreg start address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 334 :: 		
0x0830	0x460A    MOV	R2, R1
; tmpreg end address is: 4 (R1)
0x0832	0xE007    B	L_GPIO_Alternate_Function_Enable71
L_GPIO_Alternate_Function_Enable70:
;__Lib_GPIO_32F10x.c, 337 :: 		
; tmpreg start address is: 8 (R2)
0x0834	0x0D61    LSRS	R1, R4, #21
0x0836	0x0109    LSLS	R1, R1, #4
0x0838	0xFA05F101  LSL	R1, R5, R1
0x083C	0x43C9    MVN	R1, R1
0x083E	0x400A    ANDS	R2, R1
; tmpreg end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 338 :: 		
0x0840	0xF0426270  ORR	R2, R2, #251658240
; tmpreg start address is: 8 (R2)
; tmpreg end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 339 :: 		
L_GPIO_Alternate_Function_Enable71:
; tmpreg start address is: 8 (R2)
; tmpreg end address is: 8 (R2)
L_GPIO_Alternate_Function_Enable69:
;__Lib_GPIO_32F10x.c, 341 :: 		
; tmpreg start address is: 8 (R2)
0x0844	0xB12B    CBZ	R3, L__GPIO_Alternate_Function_Enable106
; newstate end address is: 12 (R3)
;__Lib_GPIO_32F10x.c, 343 :: 		
0x0846	0x0D61    LSRS	R1, R4, #21
0x0848	0x0109    LSLS	R1, R1, #4
0x084A	0xFA05F101  LSL	R1, R5, R1
; tmp end address is: 20 (R5)
0x084E	0x430A    ORRS	R2, R1
; tmpreg end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 344 :: 		
0x0850	0xE7FF    B	L_GPIO_Alternate_Function_Enable72
L__GPIO_Alternate_Function_Enable106:
;__Lib_GPIO_32F10x.c, 341 :: 		
;__Lib_GPIO_32F10x.c, 344 :: 		
L_GPIO_Alternate_Function_Enable72:
;__Lib_GPIO_32F10x.c, 346 :: 		
; tmpreg start address is: 8 (R2)
0x0852	0xF0044100  AND	R1, R4, #-2147483648
; gpio_remap end address is: 16 (R4)
0x0856	0xF1B14F00  CMP	R1, #-2147483648
0x085A	0xD102    BNE	L_GPIO_Alternate_Function_Enable73
;__Lib_GPIO_32F10x.c, 348 :: 		
0x085C	0x4913    LDR	R1, [PC, #76]
0x085E	0x600A    STR	R2, [R1, #0]
; tmpreg end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 349 :: 		
0x0860	0xE001    B	L_GPIO_Alternate_Function_Enable74
L_GPIO_Alternate_Function_Enable73:
;__Lib_GPIO_32F10x.c, 352 :: 		
; tmpreg start address is: 8 (R2)
0x0862	0x4913    LDR	R1, [PC, #76]
0x0864	0x600A    STR	R2, [R1, #0]
; tmpreg end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 353 :: 		
L_GPIO_Alternate_Function_Enable74:
;__Lib_GPIO_32F10x.c, 356 :: 		
; i start address is: 40 (R10)
0x0866	0xF2400A00  MOVW	R10, #0
; module end address is: 0 (R0)
; i end address is: 40 (R10)
0x086A	0x4681    MOV	R9, R0
;__Lib_GPIO_32F10x.c, 357 :: 		
L_GPIO_Alternate_Function_Enable75:
; i start address is: 40 (R10)
; module start address is: 36 (R9)
0x086C	0xEA4F018A  LSL	R1, R10, #2
0x0870	0xEB090101  ADD	R1, R9, R1, LSL #0
0x0874	0x6809    LDR	R1, [R1, #0]
0x0876	0xF1B13FFF  CMP	R1, #-1
0x087A	0xD010    BEQ	L_GPIO_Alternate_Function_Enable76
;__Lib_GPIO_32F10x.c, 358 :: 		
0x087C	0xF1090134  ADD	R1, R9, #52
0x0880	0xEA4F038A  LSL	R3, R10, #2
0x0884	0x18C9    ADDS	R1, R1, R3
0x0886	0x6809    LDR	R1, [R1, #0]
0x0888	0x460A    MOV	R2, R1
0x088A	0xEB090103  ADD	R1, R9, R3, LSL #0
0x088E	0x6809    LDR	R1, [R1, #0]
0x0890	0x4608    MOV	R0, R1
0x0892	0x4611    MOV	R1, R2
0x0894	0xF7FFFCCE  BL	__Lib_GPIO_32F10x_GPIO_Configure_Pin+0
;__Lib_GPIO_32F10x.c, 359 :: 		
0x0898	0xF10A0A01  ADD	R10, R10, #1
;__Lib_GPIO_32F10x.c, 360 :: 		
; module end address is: 36 (R9)
; i end address is: 40 (R10)
0x089C	0xE7E6    B	L_GPIO_Alternate_Function_Enable75
L_GPIO_Alternate_Function_Enable76:
;__Lib_GPIO_32F10x.c, 363 :: 		
L_end_GPIO_Alternate_Function_Enable:
0x089E	0xF8DDE000  LDR	LR, [SP, #0]
0x08A2	0xB001    ADD	SP, SP, #4
0x08A4	0x4770    BX	LR
0x08A6	0xBF00    NOP
0x08A8	0x03004242  	RCC_APB2ENRbits+0
0x08AC	0x001C4001  	AFIO_MAPR2+0
0x08B0	0x00044001  	AFIO_MAPR+0
; end of _GPIO_Alternate_Function_Enable
__Lib_GPIO_32F10x_GPIO_Configure_Pin:
;__Lib_GPIO_32F10x.c, 282 :: 		
; config start address is: 4 (R1)
; af_pin start address is: 0 (R0)
0x0234	0xB083    SUB	SP, SP, #12
0x0236	0xF8CDE000  STR	LR, [SP, #0]
; config end address is: 4 (R1)
; af_pin end address is: 0 (R0)
; af_pin start address is: 0 (R0)
; config start address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 286 :: 		
0x023A	0xF00003FF  AND	R3, R0, #255
; af_pin end address is: 0 (R0)
0x023E	0x091A    LSRS	R2, R3, #4
; port start address is: 0 (R0)
0x0240	0x4610    MOV	R0, R2
;__Lib_GPIO_32F10x.c, 287 :: 		
0x0242	0xF003020F  AND	R2, R3, #15
; pin start address is: 12 (R3)
0x0246	0x4613    MOV	R3, R2
;__Lib_GPIO_32F10x.c, 290 :: 		
0x0248	0xE014    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin57
; port end address is: 0 (R0)
;__Lib_GPIO_32F10x.c, 291 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin59:
0x024A	0x4A19    LDR	R2, [PC, #100]
0x024C	0x9202    STR	R2, [SP, #8]
0x024E	0xE01F    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin58
;__Lib_GPIO_32F10x.c, 292 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin60:
0x0250	0x4A18    LDR	R2, [PC, #96]
0x0252	0x9202    STR	R2, [SP, #8]
0x0254	0xE01C    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin58
;__Lib_GPIO_32F10x.c, 293 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin61:
0x0256	0x4A18    LDR	R2, [PC, #96]
0x0258	0x9202    STR	R2, [SP, #8]
0x025A	0xE019    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin58
;__Lib_GPIO_32F10x.c, 294 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin62:
0x025C	0x4A17    LDR	R2, [PC, #92]
0x025E	0x9202    STR	R2, [SP, #8]
0x0260	0xE016    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin58
;__Lib_GPIO_32F10x.c, 295 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin63:
0x0262	0x4A17    LDR	R2, [PC, #92]
0x0264	0x9202    STR	R2, [SP, #8]
0x0266	0xE013    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin58
;__Lib_GPIO_32F10x.c, 296 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin64:
0x0268	0x4A16    LDR	R2, [PC, #88]
0x026A	0x9202    STR	R2, [SP, #8]
0x026C	0xE010    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin58
;__Lib_GPIO_32F10x.c, 297 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin65:
0x026E	0x4A16    LDR	R2, [PC, #88]
0x0270	0x9202    STR	R2, [SP, #8]
0x0272	0xE00D    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin58
;__Lib_GPIO_32F10x.c, 298 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin57:
; port start address is: 0 (R0)
0x0274	0x2800    CMP	R0, #0
0x0276	0xD0E8    BEQ	L___Lib_GPIO_32F10x_GPIO_Configure_Pin59
0x0278	0x2801    CMP	R0, #1
0x027A	0xD0E9    BEQ	L___Lib_GPIO_32F10x_GPIO_Configure_Pin60
0x027C	0x2802    CMP	R0, #2
0x027E	0xD0EA    BEQ	L___Lib_GPIO_32F10x_GPIO_Configure_Pin61
0x0280	0x2803    CMP	R0, #3
0x0282	0xD0EB    BEQ	L___Lib_GPIO_32F10x_GPIO_Configure_Pin62
0x0284	0x2804    CMP	R0, #4
0x0286	0xD0EC    BEQ	L___Lib_GPIO_32F10x_GPIO_Configure_Pin63
0x0288	0x2805    CMP	R0, #5
0x028A	0xD0ED    BEQ	L___Lib_GPIO_32F10x_GPIO_Configure_Pin64
0x028C	0x2806    CMP	R0, #6
0x028E	0xD0EE    BEQ	L___Lib_GPIO_32F10x_GPIO_Configure_Pin65
; port end address is: 0 (R0)
L___Lib_GPIO_32F10x_GPIO_Configure_Pin58:
;__Lib_GPIO_32F10x.c, 300 :: 		
0x0290	0x2201    MOVS	R2, #1
0x0292	0xB212    SXTH	R2, R2
0x0294	0x409A    LSLS	R2, R3
; pin end address is: 12 (R3)
0x0296	0xF8AD2004  STRH	R2, [SP, #4]
; config end address is: 4 (R1)
0x029A	0x9802    LDR	R0, [SP, #8]
0x029C	0x460A    MOV	R2, R1
0x029E	0xF8BD1004  LDRH	R1, [SP, #4]
0x02A2	0xF000FD95  BL	_GPIO_Config+0
;__Lib_GPIO_32F10x.c, 301 :: 		
L_end_GPIO_Configure_Pin:
0x02A6	0xF8DDE000  LDR	LR, [SP, #0]
0x02AA	0xB003    ADD	SP, SP, #12
0x02AC	0x4770    BX	LR
0x02AE	0xBF00    NOP
0x02B0	0x08004001  	#1073809408
0x02B4	0x0C004001  	#1073810432
0x02B8	0x10004001  	#1073811456
0x02BC	0x14004001  	#1073812480
0x02C0	0x18004001  	#1073813504
0x02C4	0x1C004001  	#1073814528
0x02C8	0x20004001  	#1073815552
; end of __Lib_GPIO_32F10x_GPIO_Configure_Pin
_GPIO_Config:
;__Lib_GPIO_32F10x.c, 124 :: 		
; config start address is: 8 (R2)
; pin_mask start address is: 4 (R1)
; port start address is: 0 (R0)
0x0DD0	0xB081    SUB	SP, SP, #4
0x0DD2	0xF8CDE000  STR	LR, [SP, #0]
0x0DD6	0xB28C    UXTH	R4, R1
0x0DD8	0x4615    MOV	R5, R2
; config end address is: 8 (R2)
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
; port start address is: 0 (R0)
; pin_mask start address is: 16 (R4)
; config start address is: 20 (R5)
;__Lib_GPIO_32F10x.c, 129 :: 		
0x0DDA	0x4B77    LDR	R3, [PC, #476]
0x0DDC	0xEA000303  AND	R3, R0, R3, LSL #0
; port end address is: 0 (R0)
; port start address is: 24 (R6)
0x0DE0	0x461E    MOV	R6, R3
;__Lib_GPIO_32F10x.c, 131 :: 		
0x0DE2	0x4618    MOV	R0, R3
0x0DE4	0xF7FFFC98  BL	_GPIO_Clk_Enable+0
;__Lib_GPIO_32F10x.c, 134 :: 		
0x0DE8	0xF1B40FFF  CMP	R4, #255
0x0DEC	0xD10C    BNE	L_GPIO_Config18
;__Lib_GPIO_32F10x.c, 135 :: 		
0x0DEE	0x4B73    LDR	R3, [PC, #460]
0x0DF0	0x429D    CMP	R5, R3
0x0DF2	0xD103    BNE	L_GPIO_Config19
; pin_mask end address is: 16 (R4)
; config end address is: 20 (R5)
;__Lib_GPIO_32F10x.c, 136 :: 		
0x0DF4	0xF04F3333  MOV	R3, #858993459
0x0DF8	0x6033    STR	R3, [R6, #0]
; port end address is: 24 (R6)
;__Lib_GPIO_32F10x.c, 137 :: 		
0x0DFA	0xE0D9    B	L_end_GPIO_Config
;__Lib_GPIO_32F10x.c, 138 :: 		
L_GPIO_Config19:
;__Lib_GPIO_32F10x.c, 139 :: 		
; port start address is: 24 (R6)
; config start address is: 20 (R5)
; pin_mask start address is: 16 (R4)
0x0DFC	0x2D42    CMP	R5, #66
0x0DFE	0xD103    BNE	L_GPIO_Config20
; pin_mask end address is: 16 (R4)
; config end address is: 20 (R5)
;__Lib_GPIO_32F10x.c, 140 :: 		
0x0E00	0xF04F3344  MOV	R3, #1145324612
0x0E04	0x6033    STR	R3, [R6, #0]
; port end address is: 24 (R6)
;__Lib_GPIO_32F10x.c, 141 :: 		
0x0E06	0xE0D3    B	L_end_GPIO_Config
;__Lib_GPIO_32F10x.c, 142 :: 		
L_GPIO_Config20:
;__Lib_GPIO_32F10x.c, 143 :: 		
; port start address is: 24 (R6)
; config start address is: 20 (R5)
; pin_mask start address is: 16 (R4)
L_GPIO_Config18:
;__Lib_GPIO_32F10x.c, 145 :: 		
0x0E08	0xF64F73FF  MOVW	R3, #65535
0x0E0C	0x429C    CMP	R4, R3
0x0E0E	0xD114    BNE	L_GPIO_Config21
;__Lib_GPIO_32F10x.c, 146 :: 		
0x0E10	0x4B6A    LDR	R3, [PC, #424]
0x0E12	0x429D    CMP	R5, R3
0x0E14	0xD107    BNE	L_GPIO_Config22
; pin_mask end address is: 16 (R4)
; config end address is: 20 (R5)
;__Lib_GPIO_32F10x.c, 147 :: 		
0x0E16	0xF04F3333  MOV	R3, #858993459
0x0E1A	0x6033    STR	R3, [R6, #0]
;__Lib_GPIO_32F10x.c, 148 :: 		
0x0E1C	0x1D34    ADDS	R4, R6, #4
; port end address is: 24 (R6)
0x0E1E	0xF04F3333  MOV	R3, #858993459
0x0E22	0x6023    STR	R3, [R4, #0]
;__Lib_GPIO_32F10x.c, 149 :: 		
0x0E24	0xE0C4    B	L_end_GPIO_Config
;__Lib_GPIO_32F10x.c, 150 :: 		
L_GPIO_Config22:
;__Lib_GPIO_32F10x.c, 151 :: 		
; port start address is: 24 (R6)
; config start address is: 20 (R5)
; pin_mask start address is: 16 (R4)
0x0E26	0x2D42    CMP	R5, #66
0x0E28	0xD107    BNE	L_GPIO_Config23
; pin_mask end address is: 16 (R4)
; config end address is: 20 (R5)
;__Lib_GPIO_32F10x.c, 152 :: 		
0x0E2A	0xF04F3344  MOV	R3, #1145324612
0x0E2E	0x6033    STR	R3, [R6, #0]
;__Lib_GPIO_32F10x.c, 153 :: 		
0x0E30	0x1D34    ADDS	R4, R6, #4
; port end address is: 24 (R6)
0x0E32	0xF04F3344  MOV	R3, #1145324612
0x0E36	0x6023    STR	R3, [R4, #0]
;__Lib_GPIO_32F10x.c, 154 :: 		
0x0E38	0xE0BA    B	L_end_GPIO_Config
;__Lib_GPIO_32F10x.c, 155 :: 		
L_GPIO_Config23:
;__Lib_GPIO_32F10x.c, 156 :: 		
; port start address is: 24 (R6)
; config start address is: 20 (R5)
; pin_mask start address is: 16 (R4)
L_GPIO_Config21:
;__Lib_GPIO_32F10x.c, 158 :: 		
; currentmode start address is: 4 (R1)
0x0E3A	0x2100    MOVS	R1, #0
;__Lib_GPIO_32F10x.c, 159 :: 		
; speed start address is: 0 (R0)
0x0E3C	0x2000    MOVS	R0, #0
;__Lib_GPIO_32F10x.c, 161 :: 		
0x0E3E	0xF0050301  AND	R3, R5, #1
0x0E42	0xB10B    CBZ	R3, L_GPIO_Config24
;__Lib_GPIO_32F10x.c, 162 :: 		
0x0E44	0x2100    MOVS	R1, #0
0x0E46	0xE01D    B	L_GPIO_Config25
L_GPIO_Config24:
;__Lib_GPIO_32F10x.c, 163 :: 		
0x0E48	0xF0050302  AND	R3, R5, #2
0x0E4C	0xB133    CBZ	R3, L_GPIO_Config26
; currentmode end address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 164 :: 		
0x0E4E	0xF40573C0  AND	R3, R5, #384
0x0E52	0xB10B    CBZ	R3, L_GPIO_Config27
;__Lib_GPIO_32F10x.c, 165 :: 		
; currentmode start address is: 4 (R1)
0x0E54	0x2108    MOVS	R1, #8
; currentmode end address is: 4 (R1)
0x0E56	0xE000    B	L_GPIO_Config28
L_GPIO_Config27:
;__Lib_GPIO_32F10x.c, 167 :: 		
; currentmode start address is: 4 (R1)
0x0E58	0x2104    MOVS	R1, #4
; currentmode end address is: 4 (R1)
L_GPIO_Config28:
;__Lib_GPIO_32F10x.c, 168 :: 		
; currentmode start address is: 4 (R1)
0x0E5A	0xE013    B	L_GPIO_Config29
L_GPIO_Config26:
;__Lib_GPIO_32F10x.c, 169 :: 		
0x0E5C	0xF0050304  AND	R3, R5, #4
0x0E60	0xB133    CBZ	R3, L_GPIO_Config30
; currentmode end address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 170 :: 		
0x0E62	0xF0050320  AND	R3, R5, #32
0x0E66	0xB10B    CBZ	R3, L_GPIO_Config31
;__Lib_GPIO_32F10x.c, 171 :: 		
; currentmode start address is: 4 (R1)
0x0E68	0x2104    MOVS	R1, #4
; currentmode end address is: 4 (R1)
0x0E6A	0xE000    B	L_GPIO_Config32
L_GPIO_Config31:
;__Lib_GPIO_32F10x.c, 173 :: 		
; currentmode start address is: 4 (R1)
0x0E6C	0x2100    MOVS	R1, #0
; currentmode end address is: 4 (R1)
L_GPIO_Config32:
;__Lib_GPIO_32F10x.c, 174 :: 		
; currentmode start address is: 4 (R1)
0x0E6E	0xE009    B	L_GPIO_Config33
L_GPIO_Config30:
;__Lib_GPIO_32F10x.c, 175 :: 		
0x0E70	0xF0050308  AND	R3, R5, #8
0x0E74	0xB133    CBZ	R3, L__GPIO_Config100
; currentmode end address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 176 :: 		
0x0E76	0xF0050320  AND	R3, R5, #32
0x0E7A	0xB10B    CBZ	R3, L_GPIO_Config35
;__Lib_GPIO_32F10x.c, 177 :: 		
; currentmode start address is: 4 (R1)
0x0E7C	0x210C    MOVS	R1, #12
; currentmode end address is: 4 (R1)
0x0E7E	0xE000    B	L_GPIO_Config36
L_GPIO_Config35:
;__Lib_GPIO_32F10x.c, 179 :: 		
; currentmode start address is: 4 (R1)
0x0E80	0x2108    MOVS	R1, #8
; currentmode end address is: 4 (R1)
L_GPIO_Config36:
;__Lib_GPIO_32F10x.c, 180 :: 		
; currentmode start address is: 4 (R1)
; currentmode end address is: 4 (R1)
0x0E82	0xE7FF    B	L_GPIO_Config34
L__GPIO_Config100:
;__Lib_GPIO_32F10x.c, 175 :: 		
;__Lib_GPIO_32F10x.c, 180 :: 		
L_GPIO_Config34:
; currentmode start address is: 4 (R1)
; currentmode end address is: 4 (R1)
L_GPIO_Config33:
; currentmode start address is: 4 (R1)
; currentmode end address is: 4 (R1)
L_GPIO_Config29:
; currentmode start address is: 4 (R1)
; currentmode end address is: 4 (R1)
L_GPIO_Config25:
;__Lib_GPIO_32F10x.c, 182 :: 		
; currentmode start address is: 4 (R1)
0x0E84	0x4B4E    LDR	R3, [PC, #312]
0x0E86	0xEA050303  AND	R3, R5, R3, LSL #0
0x0E8A	0xB10B    CBZ	R3, L_GPIO_Config37
;__Lib_GPIO_32F10x.c, 183 :: 		
0x0E8C	0x2003    MOVS	R0, #3
0x0E8E	0xE009    B	L_GPIO_Config38
L_GPIO_Config37:
;__Lib_GPIO_32F10x.c, 184 :: 		
0x0E90	0xF4057300  AND	R3, R5, #512
0x0E94	0xB10B    CBZ	R3, L_GPIO_Config39
;__Lib_GPIO_32F10x.c, 185 :: 		
0x0E96	0x2002    MOVS	R0, #2
0x0E98	0xE004    B	L_GPIO_Config40
L_GPIO_Config39:
;__Lib_GPIO_32F10x.c, 186 :: 		
0x0E9A	0xF4056380  AND	R3, R5, #1024
0x0E9E	0xB10B    CBZ	R3, L__GPIO_Config101
;__Lib_GPIO_32F10x.c, 187 :: 		
0x0EA0	0x2001    MOVS	R0, #1
; speed end address is: 0 (R0)
0x0EA2	0xE7FF    B	L_GPIO_Config41
L__GPIO_Config101:
;__Lib_GPIO_32F10x.c, 186 :: 		
;__Lib_GPIO_32F10x.c, 187 :: 		
L_GPIO_Config41:
; speed start address is: 0 (R0)
; speed end address is: 0 (R0)
L_GPIO_Config40:
; speed start address is: 0 (R0)
; speed end address is: 0 (R0)
L_GPIO_Config38:
;__Lib_GPIO_32F10x.c, 189 :: 		
; speed start address is: 0 (R0)
;__Lib_GPIO_32F10x.c, 195 :: 		
0x0EA4	0xF005030C  AND	R3, R5, #12
0x0EA8	0xB10B    CBZ	R3, L__GPIO_Config102
;__Lib_GPIO_32F10x.c, 198 :: 		
0x0EAA	0x4301    ORRS	R1, R0
; speed end address is: 0 (R0)
; currentmode end address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 199 :: 		
0x0EAC	0xE7FF    B	L_GPIO_Config42
L__GPIO_Config102:
;__Lib_GPIO_32F10x.c, 195 :: 		
;__Lib_GPIO_32F10x.c, 199 :: 		
L_GPIO_Config42:
;__Lib_GPIO_32F10x.c, 201 :: 		
; currentmode start address is: 4 (R1)
0x0EAE	0xF00403FF  AND	R3, R4, #255
0x0EB2	0xB29B    UXTH	R3, R3
0x0EB4	0x2B00    CMP	R3, #0
0x0EB6	0xD03B    BEQ	L__GPIO_Config104
;__Lib_GPIO_32F10x.c, 202 :: 		
0x0EB8	0x6837    LDR	R7, [R6, #0]
; tmpreg start address is: 28 (R7)
;__Lib_GPIO_32F10x.c, 204 :: 		
; pinpos start address is: 0 (R0)
0x0EBA	0x2000    MOVS	R0, #0
; pin_mask end address is: 16 (R4)
; config end address is: 20 (R5)
; currentmode end address is: 4 (R1)
; tmpreg end address is: 28 (R7)
; pinpos end address is: 0 (R0)
; port end address is: 24 (R6)
0x0EBC	0xFA1FF884  UXTH	R8, R4
0x0EC0	0x4632    MOV	R2, R6
0x0EC2	0x462E    MOV	R6, R5
L_GPIO_Config44:
; pinpos start address is: 0 (R0)
; tmpreg start address is: 28 (R7)
; currentmode start address is: 4 (R1)
; port start address is: 8 (R2)
; config start address is: 24 (R6)
; pin_mask start address is: 32 (R8)
0x0EC4	0x2808    CMP	R0, #8
0x0EC6	0xD22C    BCS	L_GPIO_Config45
;__Lib_GPIO_32F10x.c, 206 :: 		
0x0EC8	0xF04F0301  MOV	R3, #1
0x0ECC	0xFA03F400  LSL	R4, R3, R0
;__Lib_GPIO_32F10x.c, 208 :: 		
0x0ED0	0xEA080304  AND	R3, R8, R4, LSL #0
;__Lib_GPIO_32F10x.c, 210 :: 		
0x0ED4	0x42A3    CMP	R3, R4
0x0ED6	0xD122    BNE	L__GPIO_Config103
;__Lib_GPIO_32F10x.c, 212 :: 		
0x0ED8	0x0085    LSLS	R5, R0, #2
;__Lib_GPIO_32F10x.c, 214 :: 		
0x0EDA	0xF04F030F  MOV	R3, #15
0x0EDE	0x40AB    LSLS	R3, R5
;__Lib_GPIO_32F10x.c, 215 :: 		
0x0EE0	0x43DB    MVN	R3, R3
0x0EE2	0xEA070403  AND	R4, R7, R3, LSL #0
; tmpreg end address is: 28 (R7)
;__Lib_GPIO_32F10x.c, 218 :: 		
0x0EE6	0xFA01F305  LSL	R3, R1, R5
0x0EEA	0xEA440303  ORR	R3, R4, R3, LSL #0
; tmpreg start address is: 20 (R5)
0x0EEE	0x461D    MOV	R5, R3
;__Lib_GPIO_32F10x.c, 221 :: 		
0x0EF0	0xF4067381  AND	R3, R6, #258
0x0EF4	0xF5B37F81  CMP	R3, #258
0x0EF8	0xD105    BNE	L_GPIO_Config48
;__Lib_GPIO_32F10x.c, 223 :: 		
0x0EFA	0xF2020414  ADDW	R4, R2, #20
0x0EFE	0xF04F0301  MOV	R3, #1
0x0F02	0x4083    LSLS	R3, R0
0x0F04	0x6023    STR	R3, [R4, #0]
;__Lib_GPIO_32F10x.c, 224 :: 		
L_GPIO_Config48:
;__Lib_GPIO_32F10x.c, 226 :: 		
0x0F06	0xF0060382  AND	R3, R6, #130
0x0F0A	0x2B82    CMP	R3, #130
0x0F0C	0xD105    BNE	L_GPIO_Config49
;__Lib_GPIO_32F10x.c, 228 :: 		
0x0F0E	0xF2020410  ADDW	R4, R2, #16
0x0F12	0xF04F0301  MOV	R3, #1
0x0F16	0x4083    LSLS	R3, R0
0x0F18	0x6023    STR	R3, [R4, #0]
;__Lib_GPIO_32F10x.c, 229 :: 		
L_GPIO_Config49:
;__Lib_GPIO_32F10x.c, 230 :: 		
0x0F1A	0x462F    MOV	R7, R5
0x0F1C	0xE7FF    B	L_GPIO_Config47
; tmpreg end address is: 20 (R5)
L__GPIO_Config103:
;__Lib_GPIO_32F10x.c, 210 :: 		
;__Lib_GPIO_32F10x.c, 230 :: 		
L_GPIO_Config47:
;__Lib_GPIO_32F10x.c, 204 :: 		
; tmpreg start address is: 28 (R7)
0x0F1E	0x1C40    ADDS	R0, R0, #1
;__Lib_GPIO_32F10x.c, 231 :: 		
; pinpos end address is: 0 (R0)
0x0F20	0xE7D0    B	L_GPIO_Config44
L_GPIO_Config45:
;__Lib_GPIO_32F10x.c, 232 :: 		
0x0F22	0x6017    STR	R7, [R2, #0]
; currentmode end address is: 4 (R1)
; port end address is: 8 (R2)
; config end address is: 24 (R6)
; pin_mask end address is: 32 (R8)
; tmpreg end address is: 28 (R7)
0x0F24	0xFA1FF088  UXTH	R0, R8
0x0F28	0x460F    MOV	R7, R1
0x0F2A	0x4631    MOV	R1, R6
0x0F2C	0x4616    MOV	R6, R2
;__Lib_GPIO_32F10x.c, 234 :: 		
0x0F2E	0xE002    B	L_GPIO_Config43
L__GPIO_Config104:
;__Lib_GPIO_32F10x.c, 201 :: 		
0x0F30	0x460F    MOV	R7, R1
0x0F32	0x4629    MOV	R1, R5
0x0F34	0xB2A0    UXTH	R0, R4
;__Lib_GPIO_32F10x.c, 234 :: 		
L_GPIO_Config43:
;__Lib_GPIO_32F10x.c, 238 :: 		
; currentmode start address is: 28 (R7)
; port start address is: 24 (R6)
; config start address is: 4 (R1)
; pin_mask start address is: 0 (R0)
0x0F36	0xF1B00FFF  CMP	R0, #255
0x0F3A	0xD939    BLS	L_GPIO_Config50
;__Lib_GPIO_32F10x.c, 240 :: 		
0x0F3C	0x1D33    ADDS	R3, R6, #4
0x0F3E	0xF8D38000  LDR	R8, [R3, #0]
; tmpreg start address is: 32 (R8)
;__Lib_GPIO_32F10x.c, 241 :: 		
; pinpos start address is: 8 (R2)
0x0F42	0x2200    MOVS	R2, #0
; port end address is: 24 (R6)
; tmpreg end address is: 32 (R8)
; pinpos end address is: 8 (R2)
L_GPIO_Config51:
; pinpos start address is: 8 (R2)
; tmpreg start address is: 32 (R8)
; pin_mask start address is: 0 (R0)
; pin_mask end address is: 0 (R0)
; config start address is: 4 (R1)
; config end address is: 4 (R1)
; port start address is: 24 (R6)
; currentmode start address is: 28 (R7)
; currentmode end address is: 28 (R7)
0x0F44	0x2A08    CMP	R2, #8
0x0F46	0xD230    BCS	L_GPIO_Config52
; pin_mask end address is: 0 (R0)
; config end address is: 4 (R1)
; currentmode end address is: 28 (R7)
;__Lib_GPIO_32F10x.c, 243 :: 		
; currentmode start address is: 28 (R7)
; config start address is: 4 (R1)
; pin_mask start address is: 0 (R0)
0x0F48	0xF2020408  ADDW	R4, R2, #8
0x0F4C	0xF04F0301  MOV	R3, #1
0x0F50	0xFA03F404  LSL	R4, R3, R4
;__Lib_GPIO_32F10x.c, 245 :: 		
0x0F54	0xEA000304  AND	R3, R0, R4, LSL #0
;__Lib_GPIO_32F10x.c, 246 :: 		
0x0F58	0x42A3    CMP	R3, R4
0x0F5A	0xD124    BNE	L__GPIO_Config105
;__Lib_GPIO_32F10x.c, 248 :: 		
0x0F5C	0x0095    LSLS	R5, R2, #2
;__Lib_GPIO_32F10x.c, 250 :: 		
0x0F5E	0xF04F030F  MOV	R3, #15
0x0F62	0x40AB    LSLS	R3, R5
;__Lib_GPIO_32F10x.c, 251 :: 		
0x0F64	0x43DB    MVN	R3, R3
0x0F66	0xEA080803  AND	R8, R8, R3, LSL #0
; tmpreg end address is: 32 (R8)
;__Lib_GPIO_32F10x.c, 254 :: 		
0x0F6A	0xFA07F305  LSL	R3, R7, R5
0x0F6E	0xEA480803  ORR	R8, R8, R3, LSL #0
; tmpreg start address is: 32 (R8)
;__Lib_GPIO_32F10x.c, 257 :: 		
0x0F72	0xF4017381  AND	R3, R1, #258
0x0F76	0xF5B37F81  CMP	R3, #258
0x0F7A	0xD107    BNE	L_GPIO_Config55
;__Lib_GPIO_32F10x.c, 259 :: 		
0x0F7C	0xF2060514  ADDW	R5, R6, #20
0x0F80	0xF2020408  ADDW	R4, R2, #8
0x0F84	0xF04F0301  MOV	R3, #1
0x0F88	0x40A3    LSLS	R3, R4
0x0F8A	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F10x.c, 260 :: 		
L_GPIO_Config55:
;__Lib_GPIO_32F10x.c, 262 :: 		
0x0F8C	0xF0010382  AND	R3, R1, #130
0x0F90	0x2B82    CMP	R3, #130
0x0F92	0xD107    BNE	L_GPIO_Config56
;__Lib_GPIO_32F10x.c, 264 :: 		
0x0F94	0xF2060510  ADDW	R5, R6, #16
0x0F98	0xF2020408  ADDW	R4, R2, #8
0x0F9C	0xF04F0301  MOV	R3, #1
0x0FA0	0x40A3    LSLS	R3, R4
0x0FA2	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F10x.c, 265 :: 		
L_GPIO_Config56:
;__Lib_GPIO_32F10x.c, 266 :: 		
0x0FA4	0xE7FF    B	L_GPIO_Config54
; tmpreg end address is: 32 (R8)
L__GPIO_Config105:
;__Lib_GPIO_32F10x.c, 246 :: 		
;__Lib_GPIO_32F10x.c, 266 :: 		
L_GPIO_Config54:
;__Lib_GPIO_32F10x.c, 241 :: 		
; tmpreg start address is: 32 (R8)
0x0FA6	0x1C52    ADDS	R2, R2, #1
;__Lib_GPIO_32F10x.c, 267 :: 		
; pin_mask end address is: 0 (R0)
; config end address is: 4 (R1)
; currentmode end address is: 28 (R7)
; pinpos end address is: 8 (R2)
0x0FA8	0xE7CC    B	L_GPIO_Config51
L_GPIO_Config52:
;__Lib_GPIO_32F10x.c, 268 :: 		
0x0FAA	0x1D33    ADDS	R3, R6, #4
; port end address is: 24 (R6)
0x0FAC	0xF8C38000  STR	R8, [R3, #0]
; tmpreg end address is: 32 (R8)
;__Lib_GPIO_32F10x.c, 269 :: 		
L_GPIO_Config50:
;__Lib_GPIO_32F10x.c, 270 :: 		
L_end_GPIO_Config:
0x0FB0	0xF8DDE000  LDR	LR, [SP, #0]
0x0FB4	0xB001    ADD	SP, SP, #4
0x0FB6	0x4770    BX	LR
0x0FB8	0xFC00FFFF  	#-1024
0x0FBC	0x00140008  	#524308
0x0FC0	0x08000008  	#526336
; end of _GPIO_Config
_GPIO_Clk_Enable:
;__Lib_GPIO_32F10x.c, 83 :: 		
; gpio_port start address is: 0 (R0)
0x0718	0xB081    SUB	SP, SP, #4
; gpio_port end address is: 0 (R0)
; gpio_port start address is: 0 (R0)
;__Lib_GPIO_32F10x.c, 85 :: 		
0x071A	0x4919    LDR	R1, [PC, #100]
0x071C	0xEA000101  AND	R1, R0, R1, LSL #0
; gpio_port end address is: 0 (R0)
; prt start address is: 0 (R0)
0x0720	0x4608    MOV	R0, R1
;__Lib_GPIO_32F10x.c, 86 :: 		
; pos start address is: 8 (R2)
0x0722	0x2200    MOVS	R2, #0
;__Lib_GPIO_32F10x.c, 87 :: 		
0x0724	0xE00E    B	L_GPIO_Clk_Enable0
; prt end address is: 0 (R0)
; pos end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 88 :: 		
L_GPIO_Clk_Enable2:
; pos start address is: 0 (R0)
0x0726	0x2004    MOVS	R0, #4
; pos end address is: 0 (R0)
0x0728	0xE022    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F10x.c, 89 :: 		
L_GPIO_Clk_Enable3:
; pos start address is: 0 (R0)
0x072A	0x2008    MOVS	R0, #8
; pos end address is: 0 (R0)
0x072C	0xE020    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F10x.c, 90 :: 		
L_GPIO_Clk_Enable4:
; pos start address is: 0 (R0)
0x072E	0x2010    MOVS	R0, #16
; pos end address is: 0 (R0)
0x0730	0xE01E    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F10x.c, 91 :: 		
L_GPIO_Clk_Enable5:
; pos start address is: 0 (R0)
0x0732	0x2020    MOVS	R0, #32
; pos end address is: 0 (R0)
0x0734	0xE01C    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F10x.c, 92 :: 		
L_GPIO_Clk_Enable6:
; pos start address is: 0 (R0)
0x0736	0x2040    MOVS	R0, #64
; pos end address is: 0 (R0)
0x0738	0xE01A    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F10x.c, 93 :: 		
L_GPIO_Clk_Enable7:
; pos start address is: 0 (R0)
0x073A	0x2080    MOVS	R0, #128
; pos end address is: 0 (R0)
0x073C	0xE018    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F10x.c, 94 :: 		
L_GPIO_Clk_Enable8:
; pos start address is: 0 (R0)
0x073E	0xF2401000  MOVW	R0, #256
; pos end address is: 0 (R0)
0x0742	0xE015    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F10x.c, 95 :: 		
L_GPIO_Clk_Enable0:
; pos start address is: 8 (R2)
; prt start address is: 0 (R0)
0x0744	0x490F    LDR	R1, [PC, #60]
0x0746	0x4288    CMP	R0, R1
0x0748	0xD0ED    BEQ	L_GPIO_Clk_Enable2
0x074A	0x490F    LDR	R1, [PC, #60]
0x074C	0x4288    CMP	R0, R1
0x074E	0xD0EC    BEQ	L_GPIO_Clk_Enable3
0x0750	0x490E    LDR	R1, [PC, #56]
0x0752	0x4288    CMP	R0, R1
0x0754	0xD0EB    BEQ	L_GPIO_Clk_Enable4
0x0756	0x490E    LDR	R1, [PC, #56]
0x0758	0x4288    CMP	R0, R1
0x075A	0xD0EA    BEQ	L_GPIO_Clk_Enable5
0x075C	0x490D    LDR	R1, [PC, #52]
0x075E	0x4288    CMP	R0, R1
0x0760	0xD0E9    BEQ	L_GPIO_Clk_Enable6
0x0762	0x490D    LDR	R1, [PC, #52]
0x0764	0x4288    CMP	R0, R1
0x0766	0xD0E8    BEQ	L_GPIO_Clk_Enable7
0x0768	0x490C    LDR	R1, [PC, #48]
0x076A	0x4288    CMP	R0, R1
0x076C	0xD0E7    BEQ	L_GPIO_Clk_Enable8
; prt end address is: 0 (R0)
; pos end address is: 8 (R2)
0x076E	0x4610    MOV	R0, R2
L_GPIO_Clk_Enable1:
;__Lib_GPIO_32F10x.c, 97 :: 		
; pos start address is: 0 (R0)
0x0770	0x490B    LDR	R1, [PC, #44]
0x0772	0x6809    LDR	R1, [R1, #0]
0x0774	0xEA410200  ORR	R2, R1, R0, LSL #0
; pos end address is: 0 (R0)
0x0778	0x4909    LDR	R1, [PC, #36]
0x077A	0x600A    STR	R2, [R1, #0]
;__Lib_GPIO_32F10x.c, 98 :: 		
L_end_GPIO_Clk_Enable:
0x077C	0xB001    ADD	SP, SP, #4
0x077E	0x4770    BX	LR
0x0780	0xFC00FFFF  	#-1024
0x0784	0x08004001  	#1073809408
0x0788	0x0C004001  	#1073810432
0x078C	0x10004001  	#1073811456
0x0790	0x14004001  	#1073812480
0x0794	0x18004001  	#1073813504
0x0798	0x1C004001  	#1073814528
0x079C	0x20004001  	#1073815552
0x07A0	0x10184002  	RCC_APB2ENR+0
; end of _GPIO_Clk_Enable
_UART1_Write_Text:
;__Lib_UART_123.c, 67 :: 		
; uart_text start address is: 0 (R0)
0x13E8	0xB081    SUB	SP, SP, #4
0x13EA	0xF8CDE000  STR	LR, [SP, #0]
; uart_text end address is: 0 (R0)
; uart_text start address is: 0 (R0)
;__Lib_UART_123.c, 68 :: 		
0x13EE	0x4601    MOV	R1, R0
; uart_text end address is: 0 (R0)
0x13F0	0x4803    LDR	R0, [PC, #12]
0x13F2	0xF7FFFC11  BL	__Lib_UART_123_UARTx_Write_Text+0
;__Lib_UART_123.c, 69 :: 		
L_end_UART1_Write_Text:
0x13F6	0xF8DDE000  LDR	LR, [SP, #0]
0x13FA	0xB001    ADD	SP, SP, #4
0x13FC	0x4770    BX	LR
0x13FE	0xBF00    NOP
0x1400	0x38004001  	USART1_SR+0
; end of _UART1_Write_Text
__Lib_UART_123_UARTx_Write_Text:
;__Lib_UART_123.c, 56 :: 		
; uart_text start address is: 4 (R1)
; UART_Base start address is: 0 (R0)
0x0C18	0xB081    SUB	SP, SP, #4
0x0C1A	0xF8CDE000  STR	LR, [SP, #0]
; uart_text end address is: 4 (R1)
; UART_Base end address is: 0 (R0)
; UART_Base start address is: 0 (R0)
; uart_text start address is: 4 (R1)
;__Lib_UART_123.c, 57 :: 		
; counter start address is: 24 (R6)
0x0C1E	0x2600    MOVS	R6, #0
;__Lib_UART_123.c, 59 :: 		
0x0C20	0x780A    LDRB	R2, [R1, #0]
; data_ start address is: 12 (R3)
0x0C22	0xB2D3    UXTB	R3, R2
; UART_Base end address is: 0 (R0)
; uart_text end address is: 4 (R1)
; data_ end address is: 12 (R3)
; counter end address is: 24 (R6)
0x0C24	0x4605    MOV	R5, R0
0x0C26	0xB2D8    UXTB	R0, R3
0x0C28	0x460C    MOV	R4, R1
;__Lib_UART_123.c, 60 :: 		
L___Lib_UART_123_UARTx_Write_Text2:
; data_ start address is: 0 (R0)
; UART_Base start address is: 20 (R5)
; uart_text start address is: 16 (R4)
; counter start address is: 24 (R6)
; uart_text start address is: 16 (R4)
; uart_text end address is: 16 (R4)
; UART_Base start address is: 20 (R5)
; UART_Base end address is: 20 (R5)
0x0C2A	0xB150    CBZ	R0, L___Lib_UART_123_UARTx_Write_Text3
; uart_text end address is: 16 (R4)
; UART_Base end address is: 20 (R5)
;__Lib_UART_123.c, 61 :: 		
; UART_Base start address is: 20 (R5)
; uart_text start address is: 16 (R4)
0x0C2C	0xB2C1    UXTB	R1, R0
; data_ end address is: 0 (R0)
0x0C2E	0x4628    MOV	R0, R5
0x0C30	0xF7FFFCFA  BL	__Lib_UART_123_UARTx_Write+0
;__Lib_UART_123.c, 62 :: 		
0x0C34	0x1C72    ADDS	R2, R6, #1
0x0C36	0xB2D2    UXTB	R2, R2
0x0C38	0xB2D6    UXTB	R6, R2
;__Lib_UART_123.c, 63 :: 		
0x0C3A	0x18A2    ADDS	R2, R4, R2
0x0C3C	0x7812    LDRB	R2, [R2, #0]
; data_ start address is: 0 (R0)
0x0C3E	0xB2D0    UXTB	R0, R2
;__Lib_UART_123.c, 64 :: 		
; uart_text end address is: 16 (R4)
; UART_Base end address is: 20 (R5)
; counter end address is: 24 (R6)
; data_ end address is: 0 (R0)
0x0C40	0xE7F3    B	L___Lib_UART_123_UARTx_Write_Text2
L___Lib_UART_123_UARTx_Write_Text3:
;__Lib_UART_123.c, 65 :: 		
L_end_UARTx_Write_Text:
0x0C42	0xF8DDE000  LDR	LR, [SP, #0]
0x0C46	0xB001    ADD	SP, SP, #4
0x0C48	0x4770    BX	LR
; end of __Lib_UART_123_UARTx_Write_Text
__Lib_UART_123_UARTx_Write:
;__Lib_UART_123.c, 35 :: 		
; _data start address is: 4 (R1)
; UART_Base start address is: 0 (R0)
0x0628	0xB081    SUB	SP, SP, #4
; _data end address is: 4 (R1)
; UART_Base end address is: 0 (R0)
; UART_Base start address is: 0 (R0)
; _data start address is: 4 (R1)
0x062A	0xF8AD1000  STRH	R1, [SP, #0]
; UART_Base end address is: 0 (R0)
; _data end address is: 4 (R1)
0x062E	0x4601    MOV	R1, R0
0x0630	0xF8BD0000  LDRH	R0, [SP, #0]
;__Lib_UART_123.c, 36 :: 		
L___Lib_UART_123_UARTx_Write0:
; _data start address is: 0 (R0)
; UART_Base start address is: 4 (R1)
0x0634	0x680B    LDR	R3, [R1, #0]
0x0636	0xF3C312C0  UBFX	R2, R3, #7, #1
0x063A	0xB902    CBNZ	R2, L___Lib_UART_123_UARTx_Write1
;__Lib_UART_123.c, 37 :: 		
0x063C	0xE7FA    B	L___Lib_UART_123_UARTx_Write0
L___Lib_UART_123_UARTx_Write1:
;__Lib_UART_123.c, 38 :: 		
0x063E	0x1D0A    ADDS	R2, R1, #4
; UART_Base end address is: 4 (R1)
0x0640	0x6010    STR	R0, [R2, #0]
; _data end address is: 0 (R0)
;__Lib_UART_123.c, 39 :: 		
L_end_UARTx_Write:
0x0642	0xB001    ADD	SP, SP, #4
0x0644	0x4770    BX	LR
; end of __Lib_UART_123_UARTx_Write
_UART1_Write:
;__Lib_UART_123.c, 41 :: 		
; _data start address is: 0 (R0)
0x13CC	0xB081    SUB	SP, SP, #4
0x13CE	0xF8CDE000  STR	LR, [SP, #0]
; _data end address is: 0 (R0)
; _data start address is: 0 (R0)
;__Lib_UART_123.c, 42 :: 		
0x13D2	0xB281    UXTH	R1, R0
; _data end address is: 0 (R0)
0x13D4	0x4803    LDR	R0, [PC, #12]
0x13D6	0xF7FFF927  BL	__Lib_UART_123_UARTx_Write+0
;__Lib_UART_123.c, 43 :: 		
L_end_UART1_Write:
0x13DA	0xF8DDE000  LDR	LR, [SP, #0]
0x13DE	0xB001    ADD	SP, SP, #4
0x13E0	0x4770    BX	LR
0x13E2	0xBF00    NOP
0x13E4	0x38004001  	USART1_SR+0
; end of _UART1_Write
_LongWordToStr:
;__Lib_Conversions.c, 274 :: 		
; output start address is: 4 (R1)
; input start address is: 0 (R0)
0x1524	0xB081    SUB	SP, SP, #4
0x1526	0x460A    MOV	R2, R1
0x1528	0x4601    MOV	R1, R0
; output end address is: 4 (R1)
; input end address is: 0 (R0)
; input start address is: 4 (R1)
; output start address is: 8 (R2)
;__Lib_Conversions.c, 277 :: 		
; len start address is: 0 (R0)
0x152A	0x2000    MOVS	R0, #0
; input end address is: 4 (R1)
; output end address is: 8 (R2)
; len end address is: 0 (R0)
0x152C	0x460D    MOV	R5, R1
0x152E	0x4611    MOV	R1, R2
L_LongWordToStr52:
; len start address is: 0 (R0)
; output start address is: 4 (R1)
; input start address is: 20 (R5)
0x1530	0x280A    CMP	R0, #10
0x1532	0xD205    BCS	L_LongWordToStr53
;__Lib_Conversions.c, 278 :: 		
0x1534	0x180B    ADDS	R3, R1, R0
0x1536	0x2220    MOVS	R2, #32
0x1538	0x701A    STRB	R2, [R3, #0]
;__Lib_Conversions.c, 277 :: 		
0x153A	0x1C40    ADDS	R0, R0, #1
0x153C	0xB280    UXTH	R0, R0
;__Lib_Conversions.c, 278 :: 		
0x153E	0xE7F7    B	L_LongWordToStr52
L_LongWordToStr53:
;__Lib_Conversions.c, 279 :: 		
0x1540	0x180B    ADDS	R3, R1, R0
0x1542	0x2200    MOVS	R2, #0
0x1544	0x701A    STRB	R2, [R3, #0]
0x1546	0x1E40    SUBS	R0, R0, #1
0x1548	0xB280    UXTH	R0, R0
; output end address is: 4 (R1)
; len end address is: 0 (R0)
;__Lib_Conversions.c, 281 :: 		
L_LongWordToStr55:
;__Lib_Conversions.c, 282 :: 		
; len start address is: 0 (R0)
; input start address is: 20 (R5)
; output start address is: 4 (R1)
0x154A	0x180C    ADDS	R4, R1, R0
0x154C	0x230A    MOVS	R3, #10
0x154E	0xFBB5F2F3  UDIV	R2, R5, R3
0x1552	0xFB035212  MLS	R2, R3, R2, R5
0x1556	0x3230    ADDS	R2, #48
0x1558	0x7022    STRB	R2, [R4, #0]
;__Lib_Conversions.c, 283 :: 		
0x155A	0x220A    MOVS	R2, #10
0x155C	0xFBB5F2F2  UDIV	R2, R5, R2
0x1560	0x4615    MOV	R5, R2
; input end address is: 20 (R5)
;__Lib_Conversions.c, 284 :: 		
0x1562	0xB902    CBNZ	R2, L_LongWordToStr57
; output end address is: 4 (R1)
; input end address is: 20 (R5)
; len end address is: 0 (R0)
;__Lib_Conversions.c, 285 :: 		
0x1564	0xE002    B	L_LongWordToStr56
L_LongWordToStr57:
;__Lib_Conversions.c, 286 :: 		
; len start address is: 0 (R0)
; input start address is: 20 (R5)
; output start address is: 4 (R1)
0x1566	0x1E40    SUBS	R0, R0, #1
0x1568	0xB280    UXTH	R0, R0
;__Lib_Conversions.c, 287 :: 		
; output end address is: 4 (R1)
; input end address is: 20 (R5)
; len end address is: 0 (R0)
0x156A	0xE7EE    B	L_LongWordToStr55
L_LongWordToStr56:
;__Lib_Conversions.c, 288 :: 		
L_end_LongWordToStr:
0x156C	0xB001    ADD	SP, SP, #4
0x156E	0x4770    BX	LR
; end of _LongWordToStr
_ADC_Set_Input_Channel:
;__Lib_ADC_32F100x_16ch.c, 41 :: 		
; input_mask start address is: 0 (R0)
0x1404	0xB081    SUB	SP, SP, #4
0x1406	0xF8CDE000  STR	LR, [SP, #0]
0x140A	0xFA1FF980  UXTH	R9, R0
; input_mask end address is: 0 (R0)
; input_mask start address is: 36 (R9)
;__Lib_ADC_32F100x_16ch.c, 42 :: 		
0x140E	0xF3C90100  UBFX	R1, R9, #0, #1
0x1412	0xB121    CBZ	R1, L_ADC_Set_Input_Channel0
;__Lib_ADC_32F100x_16ch.c, 43 :: 		
0x1414	0xF2400101  MOVW	R1, #1
0x1418	0x483F    LDR	R0, [PC, #252]
0x141A	0xF7FFFDD3  BL	_GPIO_Analog_Input+0
L_ADC_Set_Input_Channel0:
;__Lib_ADC_32F100x_16ch.c, 44 :: 		
0x141E	0xF3C90140  UBFX	R1, R9, #1, #1
0x1422	0xB121    CBZ	R1, L_ADC_Set_Input_Channel1
;__Lib_ADC_32F100x_16ch.c, 45 :: 		
0x1424	0xF2400102  MOVW	R1, #2
0x1428	0x483B    LDR	R0, [PC, #236]
0x142A	0xF7FFFDCB  BL	_GPIO_Analog_Input+0
L_ADC_Set_Input_Channel1:
;__Lib_ADC_32F100x_16ch.c, 46 :: 		
0x142E	0xF3C90180  UBFX	R1, R9, #2, #1
0x1432	0xB121    CBZ	R1, L_ADC_Set_Input_Channel2
;__Lib_ADC_32F100x_16ch.c, 47 :: 		
0x1434	0xF2400104  MOVW	R1, #4
0x1438	0x4837    LDR	R0, [PC, #220]
0x143A	0xF7FFFDC3  BL	_GPIO_Analog_Input+0
L_ADC_Set_Input_Channel2:
;__Lib_ADC_32F100x_16ch.c, 48 :: 		
0x143E	0xF3C901C0  UBFX	R1, R9, #3, #1
0x1442	0xB121    CBZ	R1, L_ADC_Set_Input_Channel3
;__Lib_ADC_32F100x_16ch.c, 49 :: 		
0x1444	0xF2400108  MOVW	R1, #8
0x1448	0x4833    LDR	R0, [PC, #204]
0x144A	0xF7FFFDBB  BL	_GPIO_Analog_Input+0
L_ADC_Set_Input_Channel3:
;__Lib_ADC_32F100x_16ch.c, 50 :: 		
0x144E	0xF3C91100  UBFX	R1, R9, #4, #1
0x1452	0xB121    CBZ	R1, L_ADC_Set_Input_Channel4
;__Lib_ADC_32F100x_16ch.c, 51 :: 		
0x1454	0xF2400110  MOVW	R1, #16
0x1458	0x482F    LDR	R0, [PC, #188]
0x145A	0xF7FFFDB3  BL	_GPIO_Analog_Input+0
L_ADC_Set_Input_Channel4:
;__Lib_ADC_32F100x_16ch.c, 52 :: 		
0x145E	0xF3C91140  UBFX	R1, R9, #5, #1
0x1462	0xB121    CBZ	R1, L_ADC_Set_Input_Channel5
;__Lib_ADC_32F100x_16ch.c, 53 :: 		
0x1464	0xF2400120  MOVW	R1, #32
0x1468	0x482B    LDR	R0, [PC, #172]
0x146A	0xF7FFFDAB  BL	_GPIO_Analog_Input+0
L_ADC_Set_Input_Channel5:
;__Lib_ADC_32F100x_16ch.c, 54 :: 		
0x146E	0xF3C91180  UBFX	R1, R9, #6, #1
0x1472	0xB121    CBZ	R1, L_ADC_Set_Input_Channel6
;__Lib_ADC_32F100x_16ch.c, 55 :: 		
0x1474	0xF2400140  MOVW	R1, #64
0x1478	0x4827    LDR	R0, [PC, #156]
0x147A	0xF7FFFDA3  BL	_GPIO_Analog_Input+0
L_ADC_Set_Input_Channel6:
;__Lib_ADC_32F100x_16ch.c, 56 :: 		
0x147E	0xF3C911C0  UBFX	R1, R9, #7, #1
0x1482	0xB121    CBZ	R1, L_ADC_Set_Input_Channel7
;__Lib_ADC_32F100x_16ch.c, 57 :: 		
0x1484	0xF2400180  MOVW	R1, #128
0x1488	0x4823    LDR	R0, [PC, #140]
0x148A	0xF7FFFD9B  BL	_GPIO_Analog_Input+0
L_ADC_Set_Input_Channel7:
;__Lib_ADC_32F100x_16ch.c, 58 :: 		
0x148E	0xF3C92100  UBFX	R1, R9, #8, #1
0x1492	0xB121    CBZ	R1, L_ADC_Set_Input_Channel8
;__Lib_ADC_32F100x_16ch.c, 59 :: 		
0x1494	0xF2400101  MOVW	R1, #1
0x1498	0x4820    LDR	R0, [PC, #128]
0x149A	0xF7FFFD93  BL	_GPIO_Analog_Input+0
L_ADC_Set_Input_Channel8:
;__Lib_ADC_32F100x_16ch.c, 60 :: 		
0x149E	0xF3C92140  UBFX	R1, R9, #9, #1
0x14A2	0xB121    CBZ	R1, L_ADC_Set_Input_Channel9
;__Lib_ADC_32F100x_16ch.c, 61 :: 		
0x14A4	0xF2400102  MOVW	R1, #2
0x14A8	0x481C    LDR	R0, [PC, #112]
0x14AA	0xF7FFFD8B  BL	_GPIO_Analog_Input+0
L_ADC_Set_Input_Channel9:
;__Lib_ADC_32F100x_16ch.c, 62 :: 		
0x14AE	0xF3C92180  UBFX	R1, R9, #10, #1
0x14B2	0xB121    CBZ	R1, L_ADC_Set_Input_Channel10
;__Lib_ADC_32F100x_16ch.c, 63 :: 		
0x14B4	0xF2400101  MOVW	R1, #1
0x14B8	0x4819    LDR	R0, [PC, #100]
0x14BA	0xF7FFFD83  BL	_GPIO_Analog_Input+0
L_ADC_Set_Input_Channel10:
;__Lib_ADC_32F100x_16ch.c, 64 :: 		
0x14BE	0xF3C921C0  UBFX	R1, R9, #11, #1
0x14C2	0xB121    CBZ	R1, L_ADC_Set_Input_Channel11
;__Lib_ADC_32F100x_16ch.c, 65 :: 		
0x14C4	0xF2400102  MOVW	R1, #2
0x14C8	0x4815    LDR	R0, [PC, #84]
0x14CA	0xF7FFFD7B  BL	_GPIO_Analog_Input+0
L_ADC_Set_Input_Channel11:
;__Lib_ADC_32F100x_16ch.c, 66 :: 		
0x14CE	0xF3C93100  UBFX	R1, R9, #12, #1
0x14D2	0xB121    CBZ	R1, L_ADC_Set_Input_Channel12
;__Lib_ADC_32F100x_16ch.c, 67 :: 		
0x14D4	0xF2400104  MOVW	R1, #4
0x14D8	0x4811    LDR	R0, [PC, #68]
0x14DA	0xF7FFFD73  BL	_GPIO_Analog_Input+0
L_ADC_Set_Input_Channel12:
;__Lib_ADC_32F100x_16ch.c, 68 :: 		
0x14DE	0xF3C93140  UBFX	R1, R9, #13, #1
0x14E2	0xB121    CBZ	R1, L_ADC_Set_Input_Channel13
;__Lib_ADC_32F100x_16ch.c, 69 :: 		
0x14E4	0xF2400108  MOVW	R1, #8
0x14E8	0x480D    LDR	R0, [PC, #52]
0x14EA	0xF7FFFD6B  BL	_GPIO_Analog_Input+0
L_ADC_Set_Input_Channel13:
;__Lib_ADC_32F100x_16ch.c, 70 :: 		
0x14EE	0xF3C93180  UBFX	R1, R9, #14, #1
0x14F2	0xB121    CBZ	R1, L_ADC_Set_Input_Channel14
;__Lib_ADC_32F100x_16ch.c, 71 :: 		
0x14F4	0xF2400110  MOVW	R1, #16
0x14F8	0x4809    LDR	R0, [PC, #36]
0x14FA	0xF7FFFD63  BL	_GPIO_Analog_Input+0
L_ADC_Set_Input_Channel14:
;__Lib_ADC_32F100x_16ch.c, 72 :: 		
0x14FE	0xF3C931C0  UBFX	R1, R9, #15, #1
; input_mask end address is: 36 (R9)
0x1502	0xB121    CBZ	R1, L_ADC_Set_Input_Channel15
;__Lib_ADC_32F100x_16ch.c, 73 :: 		
0x1504	0xF2400120  MOVW	R1, #32
0x1508	0x4805    LDR	R0, [PC, #20]
0x150A	0xF7FFFD5B  BL	_GPIO_Analog_Input+0
L_ADC_Set_Input_Channel15:
;__Lib_ADC_32F100x_16ch.c, 74 :: 		
L_end_ADC_Set_Input_Channel:
0x150E	0xF8DDE000  LDR	LR, [SP, #0]
0x1512	0xB001    ADD	SP, SP, #4
0x1514	0x4770    BX	LR
0x1516	0xBF00    NOP
0x1518	0x08004001  	GPIOA_BASE+0
0x151C	0x0C004001  	GPIOB_BASE+0
0x1520	0x10004001  	GPIOC_BASE+0
; end of _ADC_Set_Input_Channel
_GPIO_Analog_Input:
;__Lib_GPIO_32F10x.c, 373 :: 		
; pin_mask start address is: 4 (R1)
; port start address is: 0 (R0)
0x0FC4	0xB081    SUB	SP, SP, #4
0x0FC6	0xF8CDE000  STR	LR, [SP, #0]
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
; port start address is: 0 (R0)
; pin_mask start address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 374 :: 		
0x0FCA	0xF04F0201  MOV	R2, #1
0x0FCE	0xB289    UXTH	R1, R1
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
0x0FD0	0xF7FFFEFE  BL	_GPIO_Config+0
;__Lib_GPIO_32F10x.c, 375 :: 		
L_end_GPIO_Analog_Input:
0x0FD4	0xF8DDE000  LDR	LR, [SP, #0]
0x0FD8	0xB001    ADD	SP, SP, #4
0x0FDA	0x4770    BX	LR
; end of _GPIO_Analog_Input
_ADC1_Init:
;__Lib_ADC_32F100x_16ch.c, 141 :: 		
0x166C	0xB081    SUB	SP, SP, #4
0x166E	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_ADC_32F100x_16ch.c, 142 :: 		
0x1672	0x4907    LDR	R1, [PC, #28]
0x1674	0x4807    LDR	R0, [PC, #28]
0x1676	0x6001    STR	R1, [R0, #0]
;__Lib_ADC_32F100x_16ch.c, 144 :: 		
0x1678	0x2101    MOVS	R1, #1
0x167A	0xB249    SXTB	R1, R1
0x167C	0x4806    LDR	R0, [PC, #24]
0x167E	0x6001    STR	R1, [R0, #0]
;__Lib_ADC_32F100x_16ch.c, 146 :: 		
0x1680	0x4806    LDR	R0, [PC, #24]
0x1682	0xF7FFFCAB  BL	__Lib_ADC_32F100x_16ch_ADCx_Init+0
;__Lib_ADC_32F100x_16ch.c, 179 :: 		
L_end_ADC1_Init:
0x1686	0xF8DDE000  LDR	LR, [SP, #0]
0x168A	0xB001    ADD	SP, SP, #4
0x168C	0x4770    BX	LR
0x168E	0xBF00    NOP
0x1690	0x17190000  	_ADC1_Get_Sample+0
0x1694	0x00942000  	_ADC_Get_Sample_Ptr+0
0x1698	0x03244242  	RCC_APB2ENRbits+0
0x169C	0x24004001  	ADC1_SR+0
; end of _ADC1_Init
__Lib_ADC_32F100x_16ch_ADCx_Init:
;__Lib_ADC_32F100x_16ch.c, 76 :: 		
; base start address is: 0 (R0)
0x0FDC	0xB081    SUB	SP, SP, #4
; base end address is: 0 (R0)
; base start address is: 0 (R0)
;__Lib_ADC_32F100x_16ch.c, 80 :: 		
0x0FDE	0x1D03    ADDS	R3, R0, #4
0x0FE0	0x681A    LDR	R2, [R3, #0]
0x0FE2	0x493A    LDR	R1, [PC, #232]
0x0FE4	0xEA020101  AND	R1, R2, R1, LSL #0
0x0FE8	0x6019    STR	R1, [R3, #0]
;__Lib_ADC_32F100x_16ch.c, 82 :: 		
0x0FEA	0xF2000308  ADDW	R3, R0, #8
0x0FEE	0x681A    LDR	R2, [R3, #0]
0x0FF0	0x4937    LDR	R1, [PC, #220]
0x0FF2	0xEA020101  AND	R1, R2, R1, LSL #0
0x0FF6	0x6019    STR	R1, [R3, #0]
;__Lib_ADC_32F100x_16ch.c, 84 :: 		
0x0FF8	0x1D03    ADDS	R3, R0, #4
0x0FFA	0x2200    MOVS	R2, #0
0x0FFC	0x6819    LDR	R1, [R3, #0]
0x0FFE	0xF3622108  BFI	R1, R2, #8, #1
0x1002	0x6019    STR	R1, [R3, #0]
;__Lib_ADC_32F100x_16ch.c, 87 :: 		
0x1004	0xF2000308  ADDW	R3, R0, #8
0x1008	0x2200    MOVS	R2, #0
0x100A	0x6819    LDR	R1, [R3, #0]
0x100C	0xF3620141  BFI	R1, R2, #1, #1
0x1010	0x6019    STR	R1, [R3, #0]
;__Lib_ADC_32F100x_16ch.c, 89 :: 		
0x1012	0xF2000308  ADDW	R3, R0, #8
0x1016	0x2200    MOVS	R2, #0
0x1018	0x6819    LDR	R1, [R3, #0]
0x101A	0xF36221CB  BFI	R1, R2, #11, #1
0x101E	0x6019    STR	R1, [R3, #0]
;__Lib_ADC_32F100x_16ch.c, 91 :: 		
0x1020	0xF2000308  ADDW	R3, R0, #8
0x1024	0x2201    MOVS	R2, #1
0x1026	0x6819    LDR	R1, [R3, #0]
0x1028	0xF3624151  BFI	R1, R2, #17, #1
0x102C	0x6019    STR	R1, [R3, #0]
;__Lib_ADC_32F100x_16ch.c, 92 :: 		
0x102E	0xF2000308  ADDW	R3, R0, #8
0x1032	0x2201    MOVS	R2, #1
0x1034	0x6819    LDR	R1, [R3, #0]
0x1036	0xF3624192  BFI	R1, R2, #18, #1
0x103A	0x6019    STR	R1, [R3, #0]
;__Lib_ADC_32F100x_16ch.c, 93 :: 		
0x103C	0xF2000308  ADDW	R3, R0, #8
0x1040	0x2201    MOVS	R2, #1
0x1042	0x6819    LDR	R1, [R3, #0]
0x1044	0xF36241D3  BFI	R1, R2, #19, #1
0x1048	0x6019    STR	R1, [R3, #0]
;__Lib_ADC_32F100x_16ch.c, 96 :: 		
0x104A	0xF200032C  ADDW	R3, R0, #44
0x104E	0x2200    MOVS	R2, #0
0x1050	0x6819    LDR	R1, [R3, #0]
0x1052	0xF3625114  BFI	R1, R2, #20, #1
0x1056	0x6019    STR	R1, [R3, #0]
;__Lib_ADC_32F100x_16ch.c, 97 :: 		
0x1058	0xF200032C  ADDW	R3, R0, #44
0x105C	0x2200    MOVS	R2, #0
0x105E	0x6819    LDR	R1, [R3, #0]
0x1060	0xF3625155  BFI	R1, R2, #21, #1
0x1064	0x6019    STR	R1, [R3, #0]
;__Lib_ADC_32F100x_16ch.c, 98 :: 		
0x1066	0xF200032C  ADDW	R3, R0, #44
0x106A	0x2200    MOVS	R2, #0
0x106C	0x6819    LDR	R1, [R3, #0]
0x106E	0xF3625196  BFI	R1, R2, #22, #1
0x1072	0x6019    STR	R1, [R3, #0]
;__Lib_ADC_32F100x_16ch.c, 99 :: 		
0x1074	0xF200032C  ADDW	R3, R0, #44
0x1078	0x2200    MOVS	R2, #0
0x107A	0x6819    LDR	R1, [R3, #0]
0x107C	0xF36251D7  BFI	R1, R2, #23, #1
0x1080	0x6019    STR	R1, [R3, #0]
;__Lib_ADC_32F100x_16ch.c, 105 :: 		
0x1082	0xF2000308  ADDW	R3, R0, #8
0x1086	0x2201    MOVS	R2, #1
0x1088	0x6819    LDR	R1, [R3, #0]
0x108A	0xF3620100  BFI	R1, R2, #0, #1
0x108E	0x6019    STR	R1, [R3, #0]
;__Lib_ADC_32F100x_16ch.c, 108 :: 		
0x1090	0xF2000308  ADDW	R3, R0, #8
0x1094	0x2201    MOVS	R2, #1
0x1096	0x6819    LDR	R1, [R3, #0]
0x1098	0xF36201C3  BFI	R1, R2, #3, #1
0x109C	0x6019    STR	R1, [R3, #0]
; base end address is: 0 (R0)
;__Lib_ADC_32F100x_16ch.c, 109 :: 		
L___Lib_ADC_32F100x_16ch_ADCx_Init16:
; base start address is: 0 (R0)
0x109E	0xF2000108  ADDW	R1, R0, #8
0x10A2	0x680A    LDR	R2, [R1, #0]
0x10A4	0xF3C201C0  UBFX	R1, R2, #3, #1
0x10A8	0xB101    CBZ	R1, L___Lib_ADC_32F100x_16ch_ADCx_Init17
0x10AA	0xE7F8    B	L___Lib_ADC_32F100x_16ch_ADCx_Init16
L___Lib_ADC_32F100x_16ch_ADCx_Init17:
;__Lib_ADC_32F100x_16ch.c, 112 :: 		
0x10AC	0xF2000308  ADDW	R3, R0, #8
0x10B0	0x2201    MOVS	R2, #1
0x10B2	0x6819    LDR	R1, [R3, #0]
0x10B4	0xF3620182  BFI	R1, R2, #2, #1
0x10B8	0x6019    STR	R1, [R3, #0]
; base end address is: 0 (R0)
;__Lib_ADC_32F100x_16ch.c, 113 :: 		
L___Lib_ADC_32F100x_16ch_ADCx_Init18:
; base start address is: 0 (R0)
0x10BA	0xF2000108  ADDW	R1, R0, #8
0x10BE	0x680A    LDR	R2, [R1, #0]
0x10C0	0xF3C20180  UBFX	R1, R2, #2, #1
0x10C4	0xB101    CBZ	R1, L___Lib_ADC_32F100x_16ch_ADCx_Init19
; base end address is: 0 (R0)
0x10C6	0xE7F8    B	L___Lib_ADC_32F100x_16ch_ADCx_Init18
L___Lib_ADC_32F100x_16ch_ADCx_Init19:
;__Lib_ADC_32F100x_16ch.c, 115 :: 		
L_end_ADCx_Init:
0x10C8	0xB001    ADD	SP, SP, #4
0x10CA	0x4770    BX	LR
0x10CC	0xFEFFFFF0  	#-983297
0x10D0	0xF7FDFFF1  	#-919555
; end of __Lib_ADC_32F100x_16ch_ADCx_Init
_ADC1_Get_Sample:
;__Lib_ADC_32F100x_16ch.c, 131 :: 		
; channel start address is: 0 (R0)
0x1718	0xB081    SUB	SP, SP, #4
0x171A	0xF8CDE000  STR	LR, [SP, #0]
; channel end address is: 0 (R0)
; channel start address is: 0 (R0)
;__Lib_ADC_32F100x_16ch.c, 132 :: 		
0x171E	0xB281    UXTH	R1, R0
; channel end address is: 0 (R0)
0x1720	0x4803    LDR	R0, [PC, #12]
0x1722	0xF7FFFCD7  BL	__Lib_ADC_32F100x_16ch_ADCx_Get_Sample+0
;__Lib_ADC_32F100x_16ch.c, 139 :: 		
L_end_ADC1_Get_Sample:
0x1726	0xF8DDE000  LDR	LR, [SP, #0]
0x172A	0xB001    ADD	SP, SP, #4
0x172C	0x4770    BX	LR
0x172E	0xBF00    NOP
0x1730	0x24004001  	ADC1_SR+0
; end of _ADC1_Get_Sample
__Lib_ADC_32F100x_16ch_ADCx_Get_Sample:
;__Lib_ADC_32F100x_16ch.c, 117 :: 		
; channel start address is: 4 (R1)
; base start address is: 0 (R0)
0x10D4	0xB081    SUB	SP, SP, #4
0x10D6	0xF8CDE000  STR	LR, [SP, #0]
; channel end address is: 4 (R1)
; base end address is: 0 (R0)
; base start address is: 0 (R0)
; channel start address is: 4 (R1)
;__Lib_ADC_32F100x_16ch.c, 118 :: 		
0x10DA	0xF2000434  ADDW	R4, R0, #52
0x10DE	0x090A    LSRS	R2, R1, #4
0x10E0	0xB292    UXTH	R2, R2
0x10E2	0xB293    UXTH	R3, R2
0x10E4	0x6822    LDR	R2, [R4, #0]
0x10E6	0xF3631204  BFI	R2, R3, #4, #1
0x10EA	0x6022    STR	R2, [R4, #0]
;__Lib_ADC_32F100x_16ch.c, 119 :: 		
0x10EC	0xF2000434  ADDW	R4, R0, #52
0x10F0	0x08CA    LSRS	R2, R1, #3
0x10F2	0xB292    UXTH	R2, R2
0x10F4	0xB293    UXTH	R3, R2
0x10F6	0x6822    LDR	R2, [R4, #0]
0x10F8	0xF36302C3  BFI	R2, R3, #3, #1
0x10FC	0x6022    STR	R2, [R4, #0]
;__Lib_ADC_32F100x_16ch.c, 120 :: 		
0x10FE	0xF2000434  ADDW	R4, R0, #52
0x1102	0x088A    LSRS	R2, R1, #2
0x1104	0xB292    UXTH	R2, R2
0x1106	0xB293    UXTH	R3, R2
0x1108	0x6822    LDR	R2, [R4, #0]
0x110A	0xF3630282  BFI	R2, R3, #2, #1
0x110E	0x6022    STR	R2, [R4, #0]
;__Lib_ADC_32F100x_16ch.c, 121 :: 		
0x1110	0xF2000434  ADDW	R4, R0, #52
0x1114	0x084A    LSRS	R2, R1, #1
0x1116	0xB292    UXTH	R2, R2
0x1118	0xB293    UXTH	R3, R2
0x111A	0x6822    LDR	R2, [R4, #0]
0x111C	0xF3630241  BFI	R2, R3, #1, #1
0x1120	0x6022    STR	R2, [R4, #0]
;__Lib_ADC_32F100x_16ch.c, 122 :: 		
0x1122	0xF2000434  ADDW	R4, R0, #52
0x1126	0xB28B    UXTH	R3, R1
; channel end address is: 4 (R1)
0x1128	0x6822    LDR	R2, [R4, #0]
0x112A	0xF3630200  BFI	R2, R3, #0, #1
0x112E	0x6022    STR	R2, [R4, #0]
;__Lib_ADC_32F100x_16ch.c, 123 :: 		
0x1130	0xF2000408  ADDW	R4, R0, #8
0x1134	0x2301    MOVS	R3, #1
0x1136	0x6822    LDR	R2, [R4, #0]
0x1138	0xF3630200  BFI	R2, R3, #0, #1
0x113C	0x6022    STR	R2, [R4, #0]
;__Lib_ADC_32F100x_16ch.c, 124 :: 		
0x113E	0xF2000408  ADDW	R4, R0, #8
0x1142	0x2301    MOVS	R3, #1
0x1144	0x6822    LDR	R2, [R4, #0]
0x1146	0xF3635296  BFI	R2, R3, #22, #1
0x114A	0x6022    STR	R2, [R4, #0]
;__Lib_ADC_32F100x_16ch.c, 125 :: 		
0x114C	0xF7FFFAD8  BL	_Delay_1us+0
; base end address is: 0 (R0)
;__Lib_ADC_32F100x_16ch.c, 126 :: 		
L___Lib_ADC_32F100x_16ch_ADCx_Get_Sample20:
; base start address is: 0 (R0)
0x1150	0x6803    LDR	R3, [R0, #0]
0x1152	0xF3C30240  UBFX	R2, R3, #1, #1
0x1156	0xB902    CBNZ	R2, L___Lib_ADC_32F100x_16ch_ADCx_Get_Sample21
0x1158	0xE7FA    B	L___Lib_ADC_32F100x_16ch_ADCx_Get_Sample20
L___Lib_ADC_32F100x_16ch_ADCx_Get_Sample21:
;__Lib_ADC_32F100x_16ch.c, 127 :: 		
0x115A	0xF200024C  ADDW	R2, R0, #76
; base end address is: 0 (R0)
0x115E	0x6812    LDR	R2, [R2, #0]
0x1160	0xB290    UXTH	R0, R2
;__Lib_ADC_32F100x_16ch.c, 128 :: 		
L_end_ADCx_Get_Sample:
0x1162	0xF8DDE000  LDR	LR, [SP, #0]
0x1166	0xB001    ADD	SP, SP, #4
0x1168	0x4770    BX	LR
; end of __Lib_ADC_32F100x_16ch_ADCx_Get_Sample
_Delay_1us:
;__Lib_Delays.c, 13 :: 		void Delay_1us() {
;__Lib_Delays.c, 14 :: 		Delay_us(1);
0x0700	0xF2400701  MOVW	R7, #1
0x0704	0xF2C00700  MOVT	R7, #0
0x0708	0xBF00    NOP
0x070A	0xBF00    NOP
L_Delay_1us0:
0x070C	0x1E7F    SUBS	R7, R7, #1
0x070E	0xD1FD    BNE	L_Delay_1us0
0x0710	0xBF00    NOP
0x0712	0xBF00    NOP
;__Lib_Delays.c, 15 :: 		}
L_end_Delay_1us:
0x0714	0x4770    BX	LR
; end of _Delay_1us
_RTC_INIT:
;F100RTCTest.c, 195 :: 		void  RTC_INIT  (void)                                                                            //Инициализация RTC
;F100RTCTest.c, 198 :: 		RCC_APB1ENRbits.BKPEN=1;
0x1734	0x2101    MOVS	R1, #1
0x1736	0xB249    SXTB	R1, R1
0x1738	0x4840    LDR	R0, [PC, #256]
0x173A	0x6001    STR	R1, [R0, #0]
;F100RTCTest.c, 199 :: 		RCC_APB1ENRbits.PWREN=1;
0x173C	0x4840    LDR	R0, [PC, #256]
0x173E	0x6001    STR	R1, [R0, #0]
;F100RTCTest.c, 201 :: 		PWR_CRbits.DBP=1;
0x1740	0x4840    LDR	R0, [PC, #256]
0x1742	0x6001    STR	R1, [R0, #0]
;F100RTCTest.c, 203 :: 		LSEON_bit=1;
0x1744	0x4840    LDR	R0, [PC, #256]
0x1746	0x6001    STR	R1, [R0, #0]
;F100RTCTest.c, 205 :: 		while(!RCC_BDCRbits.LSERDY){delay_ms(10);};//пустой цикл
L_RTC_INIT22:
0x1748	0x4940    LDR	R1, [PC, #256]
0x174A	0x6808    LDR	R0, [R1, #0]
0x174C	0xB950    CBNZ	R0, L_RTC_INIT23
0x174E	0xF6460729  MOVW	R7, #26665
0x1752	0xF2C00700  MOVT	R7, #0
0x1756	0xBF00    NOP
0x1758	0xBF00    NOP
L_RTC_INIT24:
0x175A	0x1E7F    SUBS	R7, R7, #1
0x175C	0xD1FD    BNE	L_RTC_INIT24
0x175E	0xBF00    NOP
0x1760	0xBF00    NOP
0x1762	0xE7F1    B	L_RTC_INIT22
L_RTC_INIT23:
;F100RTCTest.c, 207 :: 		RCC_BDCRbits.RTCSEL=0b01;
0x1764	0x2201    MOVS	R2, #1
0x1766	0x493A    LDR	R1, [PC, #232]
0x1768	0x8808    LDRH	R0, [R1, #0]
0x176A	0xF3622009  BFI	R0, R2, #8, #2
0x176E	0x8008    STRH	R0, [R1, #0]
;F100RTCTest.c, 209 :: 		RCC_BDCRbits.RTCEN=1;
0x1770	0x2101    MOVS	R1, #1
0x1772	0xB249    SXTB	R1, R1
0x1774	0x4837    LDR	R0, [PC, #220]
0x1776	0x6001    STR	R1, [R0, #0]
;F100RTCTest.c, 211 :: 		while(!RTC_CRLbits.RSF){delay_ms(10);};//пустой цикл
L_RTC_INIT26:
0x1778	0x4937    LDR	R1, [PC, #220]
0x177A	0x6808    LDR	R0, [R1, #0]
0x177C	0xB950    CBNZ	R0, L_RTC_INIT27
0x177E	0xF6460729  MOVW	R7, #26665
0x1782	0xF2C00700  MOVT	R7, #0
0x1786	0xBF00    NOP
0x1788	0xBF00    NOP
L_RTC_INIT28:
0x178A	0x1E7F    SUBS	R7, R7, #1
0x178C	0xD1FD    BNE	L_RTC_INIT28
0x178E	0xBF00    NOP
0x1790	0xBF00    NOP
0x1792	0xE7F1    B	L_RTC_INIT26
L_RTC_INIT27:
;F100RTCTest.c, 213 :: 		while(!RTC_CRLbits.RTOFF){delay_ms(10);};//пустой цикл
L_RTC_INIT30:
0x1794	0x4931    LDR	R1, [PC, #196]
0x1796	0x6808    LDR	R0, [R1, #0]
0x1798	0xB950    CBNZ	R0, L_RTC_INIT31
0x179A	0xF6460729  MOVW	R7, #26665
0x179E	0xF2C00700  MOVT	R7, #0
0x17A2	0xBF00    NOP
0x17A4	0xBF00    NOP
L_RTC_INIT32:
0x17A6	0x1E7F    SUBS	R7, R7, #1
0x17A8	0xD1FD    BNE	L_RTC_INIT32
0x17AA	0xBF00    NOP
0x17AC	0xBF00    NOP
0x17AE	0xE7F1    B	L_RTC_INIT30
L_RTC_INIT31:
;F100RTCTest.c, 215 :: 		RTC_CRHbits.SECIE=1;
0x17B0	0x2101    MOVS	R1, #1
0x17B2	0xB249    SXTB	R1, R1
0x17B4	0x482A    LDR	R0, [PC, #168]
0x17B6	0x6001    STR	R1, [R0, #0]
;F100RTCTest.c, 217 :: 		RTC_CRHbits.ALRIE=0;
0x17B8	0x2100    MOVS	R1, #0
0x17BA	0xB249    SXTB	R1, R1
0x17BC	0x4829    LDR	R0, [PC, #164]
0x17BE	0x6001    STR	R1, [R0, #0]
;F100RTCTest.c, 218 :: 		RTC_CRHbits.OWIE=0;
0x17C0	0x4829    LDR	R0, [PC, #164]
0x17C2	0x6001    STR	R1, [R0, #0]
;F100RTCTest.c, 221 :: 		while(!RTC_CRLbits.RTOFF){delay_ms(10);};//пустой цикл
L_RTC_INIT34:
0x17C4	0x4925    LDR	R1, [PC, #148]
0x17C6	0x6808    LDR	R0, [R1, #0]
0x17C8	0xB950    CBNZ	R0, L_RTC_INIT35
0x17CA	0xF6460729  MOVW	R7, #26665
0x17CE	0xF2C00700  MOVT	R7, #0
0x17D2	0xBF00    NOP
0x17D4	0xBF00    NOP
L_RTC_INIT36:
0x17D6	0x1E7F    SUBS	R7, R7, #1
0x17D8	0xD1FD    BNE	L_RTC_INIT36
0x17DA	0xBF00    NOP
0x17DC	0xBF00    NOP
0x17DE	0xE7F1    B	L_RTC_INIT34
L_RTC_INIT35:
;F100RTCTest.c, 224 :: 		RTC_PRLL=32767;
0x17E0	0xF64771FF  MOVW	R1, #32767
0x17E4	0x4821    LDR	R0, [PC, #132]
0x17E6	0x6001    STR	R1, [R0, #0]
;F100RTCTest.c, 228 :: 		RTC_CRLbits.CNF=0;
0x17E8	0x2100    MOVS	R1, #0
0x17EA	0xB249    SXTB	R1, R1
0x17EC	0x4820    LDR	R0, [PC, #128]
0x17EE	0x6001    STR	R1, [R0, #0]
;F100RTCTest.c, 230 :: 		while(!RTC_CRLbits.RTOFF){delay_ms(10);};//пустой цикл
L_RTC_INIT38:
0x17F0	0x491A    LDR	R1, [PC, #104]
0x17F2	0x6808    LDR	R0, [R1, #0]
0x17F4	0xB950    CBNZ	R0, L_RTC_INIT39
0x17F6	0xF6460729  MOVW	R7, #26665
0x17FA	0xF2C00700  MOVT	R7, #0
0x17FE	0xBF00    NOP
0x1800	0xBF00    NOP
L_RTC_INIT40:
0x1802	0x1E7F    SUBS	R7, R7, #1
0x1804	0xD1FD    BNE	L_RTC_INIT40
0x1806	0xBF00    NOP
0x1808	0xBF00    NOP
0x180A	0xE7F1    B	L_RTC_INIT38
L_RTC_INIT39:
;F100RTCTest.c, 232 :: 		RTC_CRLbits.CNF=1;
0x180C	0x2101    MOVS	R1, #1
0x180E	0xB249    SXTB	R1, R1
0x1810	0x4817    LDR	R0, [PC, #92]
0x1812	0x6001    STR	R1, [R0, #0]
;F100RTCTest.c, 234 :: 		while(!RTC_CRLbits.RTOFF){delay_ms(10);};//пустой цикл
L_RTC_INIT42:
0x1814	0x4911    LDR	R1, [PC, #68]
0x1816	0x6808    LDR	R0, [R1, #0]
0x1818	0xB950    CBNZ	R0, L_RTC_INIT43
0x181A	0xF6460729  MOVW	R7, #26665
0x181E	0xF2C00700  MOVT	R7, #0
0x1822	0xBF00    NOP
0x1824	0xBF00    NOP
L_RTC_INIT44:
0x1826	0x1E7F    SUBS	R7, R7, #1
0x1828	0xD1FD    BNE	L_RTC_INIT44
0x182A	0xBF00    NOP
0x182C	0xBF00    NOP
0x182E	0xE7F1    B	L_RTC_INIT42
L_RTC_INIT43:
;F100RTCTest.c, 236 :: 		PWR_CRbits.DBP=1;
0x1830	0x2101    MOVS	R1, #1
0x1832	0xB249    SXTB	R1, R1
0x1834	0x4803    LDR	R0, [PC, #12]
0x1836	0x6001    STR	R1, [R0, #0]
;F100RTCTest.c, 238 :: 		}
L_end_RTC_INIT:
0x1838	0x4770    BX	LR
0x183A	0xBF00    NOP
0x183C	0x03EC4242  	RCC_APB1ENRbits+0
0x1840	0x03F04242  	RCC_APB1ENRbits+0
0x1844	0x0020420E  	PWR_CRbits+0
0x1848	0x04004242  	LSEON_bit+0
0x184C	0x04044242  	RCC_BDCRbits+0
0x1850	0x10204002  	RCC_BDCRbits+0
0x1854	0x043C4242  	RCC_BDCRbits+0
0x1858	0x008C4205  	RTC_CRLbits+0
0x185C	0x00944205  	RTC_CRLbits+0
0x1860	0x00004205  	RTC_CRHbits+0
0x1864	0x00044205  	RTC_CRHbits+0
0x1868	0x00084205  	RTC_CRHbits+0
0x186C	0x280C4000  	RTC_PRLL+0
0x1870	0x00904205  	RTC_CRLbits+0
; end of _RTC_INIT
__Lib_System_100_InitialSetUpRCCRCC2:
;__Lib_System_100.c, 372 :: 		
0x1C70	0xB082    SUB	SP, SP, #8
0x1C72	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_System_100.c, 374 :: 		
; ulRCC_CR start address is: 8 (R2)
0x1C76	0x4A23    LDR	R2, [PC, #140]
;__Lib_System_100.c, 375 :: 		
0x1C78	0x4823    LDR	R0, [PC, #140]
0x1C7A	0x9001    STR	R0, [SP, #4]
;__Lib_System_100.c, 376 :: 		
; ulRCC_CFGR2 start address is: 12 (R3)
0x1C7C	0x4B23    LDR	R3, [PC, #140]
;__Lib_System_100.c, 378 :: 		
0x1C7E	0xF7FFFD1D  BL	__Lib_System_100_SystemClockSetDefault+0
;__Lib_System_100.c, 380 :: 		
0x1C82	0x9901    LDR	R1, [SP, #4]
0x1C84	0x4822    LDR	R0, [PC, #136]
0x1C86	0x6001    STR	R1, [R0, #0]
;__Lib_System_100.c, 381 :: 		
0x1C88	0x4822    LDR	R0, [PC, #136]
0x1C8A	0x6003    STR	R3, [R0, #0]
; ulRCC_CFGR2 end address is: 12 (R3)
;__Lib_System_100.c, 382 :: 		
0x1C8C	0x4822    LDR	R0, [PC, #136]
0x1C8E	0xEA020100  AND	R1, R2, R0, LSL #0
0x1C92	0x4822    LDR	R0, [PC, #136]
0x1C94	0x6001    STR	R1, [R0, #0]
;__Lib_System_100.c, 384 :: 		
0x1C96	0xF0020001  AND	R0, R2, #1
0x1C9A	0xB140    CBZ	R0, L___Lib_System_100_InitialSetUpRCCRCC242
; ulRCC_CR end address is: 8 (R2)
0x1C9C	0x4611    MOV	R1, R2
;__Lib_System_100.c, 385 :: 		
L___Lib_System_100_InitialSetUpRCCRCC232:
; ulRCC_CR start address is: 4 (R1)
0x1C9E	0x481F    LDR	R0, [PC, #124]
0x1CA0	0x6800    LDR	R0, [R0, #0]
0x1CA2	0xF0000002  AND	R0, R0, #2
0x1CA6	0xB900    CBNZ	R0, L___Lib_System_100_InitialSetUpRCCRCC233
;__Lib_System_100.c, 386 :: 		
0x1CA8	0xE7F9    B	L___Lib_System_100_InitialSetUpRCCRCC232
L___Lib_System_100_InitialSetUpRCCRCC233:
;__Lib_System_100.c, 387 :: 		
0x1CAA	0x460A    MOV	R2, R1
0x1CAC	0xE7FF    B	L___Lib_System_100_InitialSetUpRCCRCC231
; ulRCC_CR end address is: 4 (R1)
L___Lib_System_100_InitialSetUpRCCRCC242:
;__Lib_System_100.c, 384 :: 		
;__Lib_System_100.c, 387 :: 		
L___Lib_System_100_InitialSetUpRCCRCC231:
;__Lib_System_100.c, 389 :: 		
; ulRCC_CR start address is: 8 (R2)
0x1CAE	0xF4023080  AND	R0, R2, #65536
0x1CB2	0xB140    CBZ	R0, L___Lib_System_100_InitialSetUpRCCRCC243
; ulRCC_CR end address is: 8 (R2)
0x1CB4	0x4611    MOV	R1, R2
;__Lib_System_100.c, 390 :: 		
L___Lib_System_100_InitialSetUpRCCRCC235:
; ulRCC_CR start address is: 4 (R1)
0x1CB6	0x4819    LDR	R0, [PC, #100]
0x1CB8	0x6800    LDR	R0, [R0, #0]
0x1CBA	0xF4003000  AND	R0, R0, #131072
0x1CBE	0x2800    CMP	R0, #0
0x1CC0	0xD100    BNE	L___Lib_System_100_InitialSetUpRCCRCC236
;__Lib_System_100.c, 391 :: 		
0x1CC2	0xE7F8    B	L___Lib_System_100_InitialSetUpRCCRCC235
L___Lib_System_100_InitialSetUpRCCRCC236:
;__Lib_System_100.c, 392 :: 		
0x1CC4	0xE000    B	L___Lib_System_100_InitialSetUpRCCRCC234
; ulRCC_CR end address is: 4 (R1)
L___Lib_System_100_InitialSetUpRCCRCC243:
;__Lib_System_100.c, 389 :: 		
0x1CC6	0x4611    MOV	R1, R2
;__Lib_System_100.c, 392 :: 		
L___Lib_System_100_InitialSetUpRCCRCC234:
;__Lib_System_100.c, 394 :: 		
; ulRCC_CR start address is: 4 (R1)
0x1CC8	0xF0017080  AND	R0, R1, #16777216
; ulRCC_CR end address is: 4 (R1)
0x1CCC	0xB158    CBZ	R0, L___Lib_System_100_InitialSetUpRCCRCC237
;__Lib_System_100.c, 395 :: 		
0x1CCE	0x4813    LDR	R0, [PC, #76]
0x1CD0	0x6800    LDR	R0, [R0, #0]
0x1CD2	0xF0407180  ORR	R1, R0, #16777216
0x1CD6	0x4811    LDR	R0, [PC, #68]
0x1CD8	0x6001    STR	R1, [R0, #0]
;__Lib_System_100.c, 396 :: 		
L___Lib_System_100_InitialSetUpRCCRCC238:
0x1CDA	0x4810    LDR	R0, [PC, #64]
0x1CDC	0x6800    LDR	R0, [R0, #0]
0x1CDE	0xF0007000  AND	R0, R0, #33554432
0x1CE2	0xB900    CBNZ	R0, L___Lib_System_100_InitialSetUpRCCRCC239
;__Lib_System_100.c, 397 :: 		
0x1CE4	0xE7F9    B	L___Lib_System_100_InitialSetUpRCCRCC238
L___Lib_System_100_InitialSetUpRCCRCC239:
;__Lib_System_100.c, 398 :: 		
L___Lib_System_100_InitialSetUpRCCRCC237:
;__Lib_System_100.c, 401 :: 		
L___Lib_System_100_InitialSetUpRCCRCC240:
0x1CE6	0x480A    LDR	R0, [PC, #40]
0x1CE8	0x6800    LDR	R0, [R0, #0]
0x1CEA	0xF000010C  AND	R1, R0, #12
0x1CEE	0x9801    LDR	R0, [SP, #4]
0x1CF0	0x0080    LSLS	R0, R0, #2
0x1CF2	0xF000000C  AND	R0, R0, #12
0x1CF6	0x4281    CMP	R1, R0
0x1CF8	0xD000    BEQ	L___Lib_System_100_InitialSetUpRCCRCC241
;__Lib_System_100.c, 402 :: 		
0x1CFA	0xE7F4    B	L___Lib_System_100_InitialSetUpRCCRCC240
L___Lib_System_100_InitialSetUpRCCRCC241:
;__Lib_System_100.c, 404 :: 		
L_end_InitialSetUpRCCRCC2:
0x1CFC	0xF8DDE000  LDR	LR, [SP, #0]
0x1D00	0xB002    ADD	SP, SP, #8
0x1D02	0x4770    BX	LR
0x1D04	0x00800001  	#65664
0x1D08	0x00010000  	#1
0x1D0C	0x00000000  	#0
0x1D10	0x10044002  	RCC_CFGR+0
0x1D14	0x102C4002  	RCC_CFGR2+0
0x1D18	0xFFFF000F  	#1048575
0x1D1C	0x10004002  	RCC_CR+0
; end of __Lib_System_100_InitialSetUpRCCRCC2
__Lib_System_100_SystemClockSetDefault:
;__Lib_System_100.c, 347 :: 		
0x16BC	0xB081    SUB	SP, SP, #4
;__Lib_System_100.c, 350 :: 		
0x16BE	0x4811    LDR	R0, [PC, #68]
0x16C0	0x6800    LDR	R0, [R0, #0]
0x16C2	0xF0400101  ORR	R1, R0, #1
0x16C6	0x480F    LDR	R0, [PC, #60]
0x16C8	0x6001    STR	R1, [R0, #0]
;__Lib_System_100.c, 353 :: 		
0x16CA	0x490F    LDR	R1, [PC, #60]
0x16CC	0x480F    LDR	R0, [PC, #60]
0x16CE	0x6001    STR	R1, [R0, #0]
;__Lib_System_100.c, 356 :: 		
0x16D0	0x480C    LDR	R0, [PC, #48]
0x16D2	0x6801    LDR	R1, [R0, #0]
0x16D4	0x480E    LDR	R0, [PC, #56]
0x16D6	0x4001    ANDS	R1, R0
0x16D8	0x480A    LDR	R0, [PC, #40]
0x16DA	0x6001    STR	R1, [R0, #0]
;__Lib_System_100.c, 359 :: 		
0x16DC	0x4809    LDR	R0, [PC, #36]
0x16DE	0x6801    LDR	R1, [R0, #0]
0x16E0	0xF46F2080  MVN	R0, #262144
0x16E4	0x4001    ANDS	R1, R0
0x16E6	0x4807    LDR	R0, [PC, #28]
0x16E8	0x6001    STR	R1, [R0, #0]
;__Lib_System_100.c, 362 :: 		
0x16EA	0x4808    LDR	R0, [PC, #32]
0x16EC	0x6801    LDR	R1, [R0, #0]
0x16EE	0xF46F00FE  MVN	R0, #8323072
0x16F2	0x4001    ANDS	R1, R0
0x16F4	0x4805    LDR	R0, [PC, #20]
0x16F6	0x6001    STR	R1, [R0, #0]
;__Lib_System_100.c, 365 :: 		
0x16F8	0x2100    MOVS	R1, #0
0x16FA	0x4806    LDR	R0, [PC, #24]
0x16FC	0x6001    STR	R1, [R0, #0]
;__Lib_System_100.c, 369 :: 		
L_end_SystemClockSetDefault:
0x16FE	0xB001    ADD	SP, SP, #4
0x1700	0x4770    BX	LR
0x1702	0xBF00    NOP
0x1704	0x10004002  	RCC_CR+0
0x1708	0x0000F8FF  	#-117506048
0x170C	0x10044002  	RCC_CFGR+0
0x1710	0xFFFFFEF6  	#-17367041
0x1714	0x102C4002  	RCC_CFGR2+0
; end of __Lib_System_100_SystemClockSetDefault
__Lib_System_100_InitialSetUpFosc:
;__Lib_System_100.c, 406 :: 		
0x1D20	0xB081    SUB	SP, SP, #4
;__Lib_System_100.c, 407 :: 		
0x1D22	0x4902    LDR	R1, [PC, #8]
0x1D24	0x4802    LDR	R0, [PC, #8]
0x1D26	0x6001    STR	R1, [R0, #0]
;__Lib_System_100.c, 408 :: 		
L_end_InitialSetUpFosc:
0x1D28	0xB001    ADD	SP, SP, #4
0x1D2A	0x4770    BX	LR
0x1D2C	0x1F400000  	#8000
0x1D30	0x00982000  	___System_CLOCK_IN_KHZ+0
; end of __Lib_System_100_InitialSetUpFosc
___GenExcept:
;__Lib_System_100.c, 298 :: 		
0x1D34	0xB081    SUB	SP, SP, #4
;__Lib_System_100.c, 299 :: 		
L___GenExcept27:
0x1D36	0xE7FE    B	L___GenExcept27
;__Lib_System_100.c, 300 :: 		
L_end___GenExcept:
0x1D38	0xB001    ADD	SP, SP, #4
0x1D3A	0x4770    BX	LR
; end of ___GenExcept
0x1E9C	0xB500    PUSH	(R14)
0x1E9E	0xF8DFB014  LDR	R11, [PC, #20]
0x1EA2	0xF8DFA014  LDR	R10, [PC, #20]
0x1EA6	0xF8DFC014  LDR	R12, [PC, #20]
0x1EAA	0xF7FFFB61  BL	5488
0x1EAE	0xBD00    POP	(R15)
0x1EB0	0x4770    BX	LR
0x1EB2	0xBF00    NOP
0x1EB4	0x00002000  	#536870912
0x1EB8	0x00932000  	#536871059
0x1EBC	0x1D3C0000  	#7484
0x1F1C	0xB500    PUSH	(R14)
0x1F1E	0xF8DFB010  LDR	R11, [PC, #16]
0x1F22	0xF8DFA010  LDR	R10, [PC, #16]
0x1F26	0xF7FFFB83  BL	5680
0x1F2A	0xBD00    POP	(R15)
0x1F2C	0x4770    BX	LR
0x1F2E	0xBF00    NOP
0x1F30	0x00002000  	#536870912
0x1F34	0x00AC2000  	#536871084
_RTCWakeUp:
;F100RTCTest.c, 99 :: 		void RTCWakeUp() iv IVT_INT_RTC_WKUP ics ICS_AUTO {//прерывание от часов - не знаю почему такое название
0x1874	0xE92D0FF0  PUSH	(R4, R5, R6, R7, R8, R9, R10, R11)
0x1878	0xB087    SUB	SP, SP, #28
0x187A	0xF8CDE000  STR	LR, [SP, #0]
;F100RTCTest.c, 106 :: 		if (RTC_CRLbits.SECF){      //если причина прерывания - секундное
0x187E	0x497F    LDR	R1, [PC, #508]
0x1880	0x6808    LDR	R0, [R1, #0]
0x1882	0x2800    CMP	R0, #0
0x1884	0xF00080F4  BEQ	L_RTCWakeUp12
;F100RTCTest.c, 107 :: 		RTC_CRLbits.SECF=0;  //снимаем бит прерывания
0x1888	0x2100    MOVS	R1, #0
0x188A	0xB249    SXTB	R1, R1
0x188C	0x487B    LDR	R0, [PC, #492]
0x188E	0x6001    STR	R1, [R0, #0]
;F100RTCTest.c, 110 :: 		TimeCount++;//увеличиваем счетчик секунд
0x1890	0x497B    LDR	R1, [PC, #492]
0x1892	0x8808    LDRH	R0, [R1, #0]
0x1894	0x1C40    ADDS	R0, R0, #1
0x1896	0xB280    UXTH	R0, R0
0x1898	0x8008    STRH	R0, [R1, #0]
;F100RTCTest.c, 111 :: 		if(TimeCount>=TimeBetweenMeasure){     //меряем
0x189A	0x2805    CMP	R0, #5
0x189C	0xF0C080E8  BCC	L_RTCWakeUp13
;F100RTCTest.c, 112 :: 		TimeCount=0;
0x18A0	0x2100    MOVS	R1, #0
0x18A2	0x4877    LDR	R0, [PC, #476]
0x18A4	0x8001    STRH	R1, [R0, #0]
;F100RTCTest.c, 114 :: 		GPIO_Digital_Output(&GPIOC_BASE,_GPIO_PINMASK_8);//светодиод на выход
0x18A6	0xF2401100  MOVW	R1, #256
0x18AA	0x4876    LDR	R0, [PC, #472]
0x18AC	0xF7FFFEF8  BL	_GPIO_Digital_Output+0
;F100RTCTest.c, 115 :: 		GPIOC_ODR.B8=1;
0x18B0	0x2101    MOVS	R1, #1
0x18B2	0xB249    SXTB	R1, R1
0x18B4	0x4874    LDR	R0, [PC, #464]
0x18B6	0x6001    STR	R1, [R0, #0]
;F100RTCTest.c, 117 :: 		ADC_Set_Input_Channel(_ADC_CHANNEL_0 | _ADC_CHANNEL_1);      //иниц ацп
0x18B8	0x2003    MOVS	R0, #3
0x18BA	0xF7FFFDA3  BL	_ADC_Set_Input_Channel+0
;F100RTCTest.c, 118 :: 		adc1_init();    //пробуждаем
0x18BE	0xF7FFFED5  BL	_ADC1_Init+0
;F100RTCTest.c, 119 :: 		ADC1_SMPR1=0xffff;//максимальное время преобразования
0x18C2	0xF64F71FF  MOVW	R1, #65535
0x18C6	0x4871    LDR	R0, [PC, #452]
0x18C8	0x6001    STR	R1, [R0, #0]
;F100RTCTest.c, 120 :: 		ADC1_SMPR2=0xffff;
0x18CA	0xF64F71FF  MOVW	R1, #65535
0x18CE	0x4870    LDR	R0, [PC, #448]
0x18D0	0x6001    STR	R1, [R0, #0]
;F100RTCTest.c, 121 :: 		TSVREFE_bit=1;//включение измерения температуры и опорного напряжения
0x18D2	0x2101    MOVS	R1, #1
0x18D4	0xB249    SXTB	R1, R1
0x18D6	0x486F    LDR	R0, [PC, #444]
0x18D8	0x6001    STR	R1, [R0, #0]
;F100RTCTest.c, 123 :: 		ADC1_Get_Sample(16);//два преобразования для калибровки
0x18DA	0x2010    MOVS	R0, #16
0x18DC	0xF7FFFF1C  BL	_ADC1_Get_Sample+0
;F100RTCTest.c, 124 :: 		ADC1_Get_Sample(17);
0x18E0	0x2011    MOVS	R0, #17
0x18E2	0xF7FFFF19  BL	_ADC1_Get_Sample+0
;F100RTCTest.c, 126 :: 		while(ADC1_SRbits.EOC){delay_us(1);};//ждем флага окончания преобразования
L_RTCWakeUp14:
0x18E6	0x496C    LDR	R1, [PC, #432]
0x18E8	0x6808    LDR	R0, [R1, #0]
0x18EA	0xB150    CBZ	R0, L_RTCWakeUp15
0x18EC	0xF2400701  MOVW	R7, #1
0x18F0	0xF2C00700  MOVT	R7, #0
0x18F4	0xBF00    NOP
0x18F6	0xBF00    NOP
L_RTCWakeUp16:
0x18F8	0x1E7F    SUBS	R7, R7, #1
0x18FA	0xD1FD    BNE	L_RTCWakeUp16
0x18FC	0xBF00    NOP
0x18FE	0xBF00    NOP
0x1900	0xE7F1    B	L_RTCWakeUp14
L_RTCWakeUp15:
;F100RTCTest.c, 127 :: 		ADC1_CR2bits.CAL=1;//калибровка
0x1902	0x2101    MOVS	R1, #1
0x1904	0xB249    SXTB	R1, R1
0x1906	0x4865    LDR	R0, [PC, #404]
0x1908	0x6001    STR	R1, [R0, #0]
;F100RTCTest.c, 128 :: 		while(ADC1_SRbits.EOC){delay_us(1);};//ждем флага окончания преобразования - готово!
L_RTCWakeUp18:
0x190A	0x4963    LDR	R1, [PC, #396]
0x190C	0x6808    LDR	R0, [R1, #0]
0x190E	0xB150    CBZ	R0, L_RTCWakeUp19
0x1910	0xF2400701  MOVW	R7, #1
0x1914	0xF2C00700  MOVT	R7, #0
0x1918	0xBF00    NOP
0x191A	0xBF00    NOP
L_RTCWakeUp20:
0x191C	0x1E7F    SUBS	R7, R7, #1
0x191E	0xD1FD    BNE	L_RTCWakeUp20
0x1920	0xBF00    NOP
0x1922	0xBF00    NOP
0x1924	0xE7F1    B	L_RTCWakeUp18
L_RTCWakeUp19:
;F100RTCTest.c, 130 :: 		WordToStr(RTC_CNTL,txt);
0x1926	0xA902    ADD	R1, SP, #8
0x1928	0x485D    LDR	R0, [PC, #372]
0x192A	0x6800    LDR	R0, [R0, #0]
0x192C	0xF7FFFD26  BL	_WordToStr+0
;F100RTCTest.c, 132 :: 		uart1_write_text("RTC_CNTL ");
0x1930	0x485C    LDR	R0, [PC, #368]
0x1932	0xF7FFFD59  BL	_UART1_Write_Text+0
;F100RTCTest.c, 134 :: 		uart1_write_text(txt);
0x1936	0xA802    ADD	R0, SP, #8
0x1938	0xF7FFFD56  BL	_UART1_Write_Text+0
;F100RTCTest.c, 136 :: 		WordToStr(RTC_CNTH,txt);
0x193C	0xA902    ADD	R1, SP, #8
0x193E	0x485A    LDR	R0, [PC, #360]
0x1940	0x6800    LDR	R0, [R0, #0]
0x1942	0xF7FFFD1B  BL	_WordToStr+0
;F100RTCTest.c, 137 :: 		uart1_write_text(" RTC_CNTH ");
0x1946	0x4859    LDR	R0, [PC, #356]
0x1948	0xF7FFFD4E  BL	_UART1_Write_Text+0
;F100RTCTest.c, 138 :: 		uart1_write_text(txt);
0x194C	0xA802    ADD	R0, SP, #8
0x194E	0xF7FFFD4B  BL	_UART1_Write_Text+0
;F100RTCTest.c, 141 :: 		WordToStr(ADC_Get_Sample_Filtered(0),txt);
0x1952	0xA802    ADD	R0, SP, #8
0x1954	0x9006    STR	R0, [SP, #24]
0x1956	0x2000    MOVS	R0, #0
0x1958	0xF7FFFC28  BL	_ADC_Get_Sample_Filtered+0
0x195C	0x9906    LDR	R1, [SP, #24]
0x195E	0xF7FFFD0D  BL	_WordToStr+0
;F100RTCTest.c, 142 :: 		uart1_write_text(" ADC0(PA0) ");
0x1962	0x4853    LDR	R0, [PC, #332]
0x1964	0xF7FFFD40  BL	_UART1_Write_Text+0
;F100RTCTest.c, 143 :: 		uart1_write_text(txt);
0x1968	0xA802    ADD	R0, SP, #8
0x196A	0xF7FFFD3D  BL	_UART1_Write_Text+0
;F100RTCTest.c, 146 :: 		WordToStr(ADC_Get_Sample_Filtered(1),txt);
0x196E	0xA802    ADD	R0, SP, #8
0x1970	0x9006    STR	R0, [SP, #24]
0x1972	0x2001    MOVS	R0, #1
0x1974	0xF7FFFC1A  BL	_ADC_Get_Sample_Filtered+0
0x1978	0x9906    LDR	R1, [SP, #24]
0x197A	0xF7FFFCFF  BL	_WordToStr+0
;F100RTCTest.c, 147 :: 		uart1_write_text(" ADC1(PA1) ");
0x197E	0x484D    LDR	R0, [PC, #308]
0x1980	0xF7FFFD32  BL	_UART1_Write_Text+0
;F100RTCTest.c, 148 :: 		uart1_write_text(txt);
0x1984	0xA802    ADD	R0, SP, #8
0x1986	0xF7FFFD2F  BL	_UART1_Write_Text+0
;F100RTCTest.c, 151 :: 		vref=ADC_Get_Sample_Filtered(17);
0x198A	0x2011    MOVS	R0, #17
0x198C	0xF7FFFC0E  BL	_ADC_Get_Sample_Filtered+0
0x1990	0xF8AD0010  STRH	R0, [SP, #16]
;F100RTCTest.c, 152 :: 		WordToStr(vref,txt);
0x1994	0xA902    ADD	R1, SP, #8
0x1996	0xF7FFFCF1  BL	_WordToStr+0
;F100RTCTest.c, 153 :: 		uart1_write_text(" ADC17(VRef) ");
0x199A	0x4847    LDR	R0, [PC, #284]
0x199C	0xF7FFFD24  BL	_UART1_Write_Text+0
;F100RTCTest.c, 154 :: 		uart1_write_text(txt);
0x19A0	0xA802    ADD	R0, SP, #8
0x19A2	0xF7FFFD21  BL	_UART1_Write_Text+0
;F100RTCTest.c, 155 :: 		WordToStr(VRefIntCal*4096/vref,txt);
0x19A6	0xAA02    ADD	R2, SP, #8
0x19A8	0xF8BD1010  LDRH	R1, [SP, #16]
0x19AC	0xF44F0096  MOV	R0, #4915200
0x19B0	0xFB90F0F1  SDIV	R0, R0, R1
0x19B4	0x4611    MOV	R1, R2
0x19B6	0xB280    UXTH	R0, R0
0x19B8	0xF7FFFCE0  BL	_WordToStr+0
;F100RTCTest.c, 156 :: 		uart1_write_text(" Vdd, mV ");
0x19BC	0x483F    LDR	R0, [PC, #252]
0x19BE	0xF7FFFD13  BL	_UART1_Write_Text+0
;F100RTCTest.c, 157 :: 		uart1_write_text(txt);
0x19C2	0xA802    ADD	R0, SP, #8
0x19C4	0xF7FFFD10  BL	_UART1_Write_Text+0
;F100RTCTest.c, 160 :: 		iii=ADC_Get_Sample_Filtered(16);
0x19C8	0x2010    MOVS	R0, #16
0x19CA	0xF7FFFBEF  BL	_ADC_Get_Sample_Filtered+0
; iii start address is: 28 (R7)
0x19CE	0xB287    UXTH	R7, R0
;F100RTCTest.c, 161 :: 		WordToStr(iii,txt);
0x19D0	0xA902    ADD	R1, SP, #8
0x19D2	0xF7FFFCD3  BL	_WordToStr+0
;F100RTCTest.c, 162 :: 		uart1_write_text(" ADC16(Temp) ");
0x19D6	0x483A    LDR	R0, [PC, #232]
0x19D8	0xF7FFFD06  BL	_UART1_Write_Text+0
;F100RTCTest.c, 163 :: 		uart1_write_text(txt);
0x19DC	0xA802    ADD	R0, SP, #8
0x19DE	0xF7FFFD03  BL	_UART1_Write_Text+0
;F100RTCTest.c, 166 :: 		temper=(int)((((long)iii*VRefIntCal))/vref);//чтобы не было переполнения
0x19E2	0xB2B9    UXTH	R1, R7
; iii end address is: 28 (R7)
0x19E4	0xF24040B0  MOVW	R0, #1200
0x19E8	0x4341    MULS	R1, R0, R1
0x19EA	0xF8BD0010  LDRH	R0, [SP, #16]
0x19EE	0xFB91F1F0  SDIV	R1, R1, R0
; temper start address is: 32 (R8)
0x19F2	0xFA0FF881  SXTH	R8, R1
;F100RTCTest.c, 168 :: 		IntToStr(temper,txt);
0x19F6	0xA802    ADD	R0, SP, #8
0x19F8	0x9101    STR	R1, [SP, #4]
0x19FA	0x4601    MOV	R1, R0
0x19FC	0xF9BD0004  LDRSH	R0, [SP, #4]
0x1A00	0xF7FFFC78  BL	_IntToStr+0
;F100RTCTest.c, 169 :: 		uart1_write_text(" Temp Sensor, mV ");
0x1A04	0x482F    LDR	R0, [PC, #188]
0x1A06	0xF7FFFCEF  BL	_UART1_Write_Text+0
;F100RTCTest.c, 170 :: 		uart1_write_text(txt);
0x1A0A	0xA802    ADD	R0, SP, #8
0x1A0C	0xF7FFFCEC  BL	_UART1_Write_Text+0
;F100RTCTest.c, 173 :: 		temper=25+(int)(((float)(TempV25-temper))/TempAvgSlope);
0x1A10	0xF240505A  MOVW	R0, #1370
0x1A14	0xB200    SXTH	R0, R0
0x1A16	0xEBA00008  SUB	R0, R0, R8, LSL #0
0x1A1A	0xB200    SXTH	R0, R0
; temper end address is: 32 (R8)
0x1A1C	0xF7FFFBA6  BL	__SignedIntegralToFloat+0
0x1A20	0xF04F4281  MOV	R2, #1082130432
0x1A24	0xF7FFF928  BL	__Div_FP+0
0x1A28	0xF7FEFE0E  BL	__FloatToSignedIntegral+0
0x1A2C	0xB200    SXTH	R0, R0
0x1A2E	0xF2000119  ADDW	R1, R0, #25
;F100RTCTest.c, 174 :: 		IntToStr(temper,txt);
0x1A32	0xA802    ADD	R0, SP, #8
0x1A34	0xF8AD1004  STRH	R1, [SP, #4]
0x1A38	0x4601    MOV	R1, R0
0x1A3A	0xF9BD0004  LDRSH	R0, [SP, #4]
0x1A3E	0xF7FFFC59  BL	_IntToStr+0
;F100RTCTest.c, 175 :: 		uart1_write_text(" Temp, C ");
0x1A42	0x4821    LDR	R0, [PC, #132]
0x1A44	0xF7FFFCD0  BL	_UART1_Write_Text+0
;F100RTCTest.c, 176 :: 		uart1_write_text(txt);
0x1A48	0xA802    ADD	R0, SP, #8
0x1A4A	0xF7FFFCCD  BL	_UART1_Write_Text+0
;F100RTCTest.c, 181 :: 		uart1_write(10);
0x1A4E	0x200A    MOVS	R0, #10
0x1A50	0xF7FFFCBC  BL	_UART1_Write+0
;F100RTCTest.c, 182 :: 		uart1_write(13);
0x1A54	0x200D    MOVS	R0, #13
0x1A56	0xF7FFFCB9  BL	_UART1_Write+0
;F100RTCTest.c, 184 :: 		ADC1_CR2bits.ADON=0;//засыпаем АЦП
0x1A5A	0x2100    MOVS	R1, #0
0x1A5C	0xB249    SXTB	R1, R1
0x1A5E	0x481B    LDR	R0, [PC, #108]
0x1A60	0x6001    STR	R1, [R0, #0]
;F100RTCTest.c, 185 :: 		GPIOC_ODR.B8=0;
0x1A62	0x4809    LDR	R0, [PC, #36]
0x1A64	0x6001    STR	R1, [R0, #0]
;F100RTCTest.c, 186 :: 		GPIO_Digital_Input(&GPIOC_BASE,_GPIO_PINMASK_8);//светодиод на вход
0x1A66	0xF2401100  MOVW	R1, #256
0x1A6A	0x4806    LDR	R0, [PC, #24]
0x1A6C	0xF7FFFC7A  BL	_GPIO_Digital_Input+0
;F100RTCTest.c, 191 :: 		};
L_RTCWakeUp13:
;F100RTCTest.c, 192 :: 		};
L_RTCWakeUp12:
;F100RTCTest.c, 193 :: 		}
L_end_RTCWakeUp:
0x1A70	0xF8DDE000  LDR	LR, [SP, #0]
0x1A74	0xB007    ADD	SP, SP, #28
0x1A76	0xE8BD0FF0  POP	(R4, R5, R6, R7, R8, R9, R10, R11)
0x1A7A	0x4770    BX	LR
0x1A7C	0x00804205  	RTC_CRLbits+0
0x1A80	0x00222000  	_TimeCount+0
0x1A84	0x10004001  	GPIOC_BASE+0
0x1A88	0x01A04222  	GPIOC_ODR+0
0x1A8C	0x240C4001  	ADC1_SMPR1+0
0x1A90	0x24104001  	ADC1_SMPR2+0
0x1A94	0x815C4224  	TSVREFE_bit+0
0x1A98	0x80044224  	ADC1_SRbits+0
0x1A9C	0x81084224  	ADC1_CR2bits+0
0x1AA0	0x281C4000  	RTC_CNTL+0
0x1AA4	0x00242000  	?lstr1_F100RTCTest+0
0x1AA8	0x28184000  	RTC_CNTH+0
0x1AAC	0x002E2000  	?lstr2_F100RTCTest+0
0x1AB0	0x00392000  	?lstr3_F100RTCTest+0
0x1AB4	0x00452000  	?lstr4_F100RTCTest+0
0x1AB8	0x00512000  	?lstr5_F100RTCTest+0
0x1ABC	0x005F2000  	?lstr6_F100RTCTest+0
0x1AC0	0x00692000  	?lstr7_F100RTCTest+0
0x1AC4	0x00772000  	?lstr8_F100RTCTest+0
0x1AC8	0x00892000  	?lstr9_F100RTCTest+0
0x1ACC	0x81004224  	ADC1_CR2bits+0
; end of _RTCWakeUp
_GPIO_Digital_Output:
;__Lib_GPIO_32F10x.c, 365 :: 		
; pin_mask start address is: 4 (R1)
; port start address is: 0 (R0)
0x16A0	0xB081    SUB	SP, SP, #4
0x16A2	0xF8CDE000  STR	LR, [SP, #0]
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
; port start address is: 0 (R0)
; pin_mask start address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 366 :: 		
0x16A6	0x4A04    LDR	R2, [PC, #16]
0x16A8	0xB289    UXTH	R1, R1
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
0x16AA	0xF7FFFB91  BL	_GPIO_Config+0
;__Lib_GPIO_32F10x.c, 367 :: 		
L_end_GPIO_Digital_Output:
0x16AE	0xF8DDE000  LDR	LR, [SP, #0]
0x16B2	0xB001    ADD	SP, SP, #4
0x16B4	0x4770    BX	LR
0x16B6	0xBF00    NOP
0x16B8	0x00140008  	#524308
; end of _GPIO_Digital_Output
_WordToStr:
;__Lib_Conversions.c, 114 :: 		
; output start address is: 4 (R1)
; input start address is: 0 (R0)
0x137C	0xB081    SUB	SP, SP, #4
0x137E	0x460A    MOV	R2, R1
0x1380	0xB281    UXTH	R1, R0
; output end address is: 4 (R1)
; input end address is: 0 (R0)
; input start address is: 4 (R1)
; output start address is: 8 (R2)
;__Lib_Conversions.c, 119 :: 		
; len start address is: 0 (R0)
0x1382	0x2000    MOVS	R0, #0
; input end address is: 4 (R1)
; output end address is: 8 (R2)
; len end address is: 0 (R0)
0x1384	0xB28D    UXTH	R5, R1
0x1386	0x4611    MOV	R1, R2
L_WordToStr11:
; len start address is: 0 (R0)
; output start address is: 4 (R1)
; input start address is: 20 (R5)
0x1388	0x2805    CMP	R0, #5
0x138A	0xD205    BCS	L_WordToStr12
;__Lib_Conversions.c, 120 :: 		
0x138C	0x180B    ADDS	R3, R1, R0
0x138E	0x2220    MOVS	R2, #32
0x1390	0x701A    STRB	R2, [R3, #0]
;__Lib_Conversions.c, 119 :: 		
0x1392	0x1C40    ADDS	R0, R0, #1
0x1394	0xB2C0    UXTB	R0, R0
;__Lib_Conversions.c, 120 :: 		
0x1396	0xE7F7    B	L_WordToStr11
L_WordToStr12:
;__Lib_Conversions.c, 121 :: 		
0x1398	0x180B    ADDS	R3, R1, R0
0x139A	0x2200    MOVS	R2, #0
0x139C	0x701A    STRB	R2, [R3, #0]
0x139E	0x1E40    SUBS	R0, R0, #1
0x13A0	0xB2C0    UXTB	R0, R0
; output end address is: 4 (R1)
; len end address is: 0 (R0)
;__Lib_Conversions.c, 123 :: 		
L_WordToStr14:
;__Lib_Conversions.c, 124 :: 		
; len start address is: 0 (R0)
; input start address is: 20 (R5)
; output start address is: 4 (R1)
0x13A2	0x180C    ADDS	R4, R1, R0
0x13A4	0x230A    MOVS	R3, #10
0x13A6	0xFBB5F2F3  UDIV	R2, R5, R3
0x13AA	0xFB035212  MLS	R2, R3, R2, R5
0x13AE	0xB292    UXTH	R2, R2
0x13B0	0x3230    ADDS	R2, #48
0x13B2	0x7022    STRB	R2, [R4, #0]
;__Lib_Conversions.c, 125 :: 		
0x13B4	0x220A    MOVS	R2, #10
0x13B6	0xFBB5F2F2  UDIV	R2, R5, R2
0x13BA	0xB292    UXTH	R2, R2
0x13BC	0xB295    UXTH	R5, R2
; input end address is: 20 (R5)
;__Lib_Conversions.c, 126 :: 		
0x13BE	0xB902    CBNZ	R2, L_WordToStr16
; output end address is: 4 (R1)
; input end address is: 20 (R5)
; len end address is: 0 (R0)
;__Lib_Conversions.c, 127 :: 		
0x13C0	0xE002    B	L_WordToStr15
L_WordToStr16:
;__Lib_Conversions.c, 128 :: 		
; len start address is: 0 (R0)
; input start address is: 20 (R5)
; output start address is: 4 (R1)
0x13C2	0x1E40    SUBS	R0, R0, #1
0x13C4	0xB2C0    UXTB	R0, R0
;__Lib_Conversions.c, 129 :: 		
; output end address is: 4 (R1)
; input end address is: 20 (R5)
; len end address is: 0 (R0)
0x13C6	0xE7EC    B	L_WordToStr14
L_WordToStr15:
;__Lib_Conversions.c, 130 :: 		
L_end_WordToStr:
0x13C8	0xB001    ADD	SP, SP, #4
0x13CA	0x4770    BX	LR
; end of _WordToStr
_ADC_Get_Sample_Filtered:
;F100RTCTest.c, 26 :: 		unsigned int ADC_Get_Sample_Filtered(char channel)
; channel start address is: 0 (R0)
0x11AC	0xF2AD2D1C  SUBW	SP, SP, #540
0x11B0	0xF8CDE000  STR	LR, [SP, #0]
; channel end address is: 0 (R0)
; channel start address is: 0 (R0)
;F100RTCTest.c, 37 :: 		mean=0;
0x11B4	0x2100    MOVS	R1, #0
0x11B6	0x9181    STR	R1, [SP, #516]
;F100RTCTest.c, 38 :: 		longsigma=0;
; longsigma start address is: 24 (R6)
0x11B8	0x2600    MOVS	R6, #0
;F100RTCTest.c, 39 :: 		resmean=0;
0x11BA	0x2100    MOVS	R1, #0
0x11BC	0x9182    STR	R1, [SP, #520]
;F100RTCTest.c, 44 :: 		for (counter=0;counter<NoOfSample;counter++){//цикл по измерениям
; counter start address is: 36 (R9)
0x11BE	0xF2400900  MOVW	R9, #0
0x11C2	0xFA0FF989  SXTH	R9, R9
; channel end address is: 0 (R0)
; longsigma end address is: 24 (R6)
; counter end address is: 36 (R9)
0x11C6	0xFA5FF880  UXTB	R8, R0
0x11CA	0xFA0FF589  SXTH	R5, R9
L_ADC_Get_Sample_Filtered0:
; counter start address is: 20 (R5)
; channel start address is: 32 (R8)
; longsigma start address is: 24 (R6)
; channel start address is: 32 (R8)
; channel end address is: 32 (R8)
0x11CE	0xF1B50FFF  CMP	R5, #255
0x11D2	0xDA17    BGE	L_ADC_Get_Sample_Filtered1
; channel end address is: 32 (R8)
;F100RTCTest.c, 45 :: 		ADCData[counter]=ADC1_Get_Sample(channel);
; channel start address is: 32 (R8)
0x11D4	0xAA01    ADD	R2, SP, #4
0x11D6	0x9286    STR	R2, [SP, #536]
0x11D8	0x0069    LSLS	R1, R5, #1
0x11DA	0x1851    ADDS	R1, R2, R1
0x11DC	0x9185    STR	R1, [SP, #532]
0x11DE	0xFA5FF088  UXTB	R0, R8
0x11E2	0xF000FA99  BL	_ADC1_Get_Sample+0
0x11E6	0x9985    LDR	R1, [SP, #532]
0x11E8	0x8008    STRH	R0, [R1, #0]
;F100RTCTest.c, 46 :: 		mean=mean+ADCData[counter];//накапливаем среднее
0x11EA	0x006A    LSLS	R2, R5, #1
0x11EC	0x9986    LDR	R1, [SP, #536]
0x11EE	0x1889    ADDS	R1, R1, R2
0x11F0	0x880A    LDRH	R2, [R1, #0]
0x11F2	0x9981    LDR	R1, [SP, #516]
0x11F4	0x1889    ADDS	R1, R1, R2
0x11F6	0x9181    STR	R1, [SP, #516]
;F100RTCTest.c, 44 :: 		for (counter=0;counter<NoOfSample;counter++){//цикл по измерениям
0x11F8	0x1C69    ADDS	R1, R5, #1
; counter end address is: 20 (R5)
; counter start address is: 36 (R9)
0x11FA	0xFA0FF981  SXTH	R9, R1
;F100RTCTest.c, 51 :: 		};
; channel end address is: 32 (R8)
; counter end address is: 36 (R9)
0x11FE	0xFA0FF589  SXTH	R5, R9
0x1202	0xE7E4    B	L_ADC_Get_Sample_Filtered0
L_ADC_Get_Sample_Filtered1:
;F100RTCTest.c, 52 :: 		mean=mean/NoOfSample;//делим на количество, чтобы получить среднеарифметическое
0x1204	0x9A81    LDR	R2, [SP, #516]
0x1206	0xF24001FF  MOVW	R1, #255
0x120A	0xFBB2F1F1  UDIV	R1, R2, R1
0x120E	0x9181    STR	R1, [SP, #516]
;F100RTCTest.c, 53 :: 		for (counter=0;counter<NoOfSample;counter++){//цикл для получения среднеквадратичного отклонения
; counter start address is: 0 (R0)
0x1210	0x2000    MOVS	R0, #0
0x1212	0xB200    SXTH	R0, R0
; longsigma end address is: 24 (R6)
; counter end address is: 0 (R0)
0x1214	0x4633    MOV	R3, R6
L_ADC_Get_Sample_Filtered3:
; counter start address is: 0 (R0)
; longsigma start address is: 12 (R3)
0x1216	0xF1B00FFF  CMP	R0, #255
0x121A	0xDA0C    BGE	L_ADC_Get_Sample_Filtered4
;F100RTCTest.c, 54 :: 		longsigma=longsigma+(ADCData[counter]-mean)*(ADCData[counter]-mean);  //накапливаем квадраты
0x121C	0xAA01    ADD	R2, SP, #4
0x121E	0x0041    LSLS	R1, R0, #1
0x1220	0x1851    ADDS	R1, R2, R1
0x1222	0x880A    LDRH	R2, [R1, #0]
0x1224	0x9981    LDR	R1, [SP, #516]
0x1226	0x1A51    SUB	R1, R2, R1
0x1228	0x4349    MULS	R1, R1, R1
0x122A	0x1859    ADDS	R1, R3, R1
; longsigma end address is: 12 (R3)
; longsigma start address is: 20 (R5)
0x122C	0x460D    MOV	R5, R1
;F100RTCTest.c, 53 :: 		for (counter=0;counter<NoOfSample;counter++){//цикл для получения среднеквадратичного отклонения
0x122E	0x1C41    ADDS	R1, R0, #1
; counter end address is: 0 (R0)
; counter start address is: 4 (R1)
;F100RTCTest.c, 55 :: 		}
0x1230	0x462B    MOV	R3, R5
; longsigma end address is: 20 (R5)
; counter end address is: 4 (R1)
0x1232	0xB208    SXTH	R0, R1
0x1234	0xE7EF    B	L_ADC_Get_Sample_Filtered3
L_ADC_Get_Sample_Filtered4:
;F100RTCTest.c, 57 :: 		sigma=pow((double)longsigma/(double)NoOfSample,0.5);//делим и берем корень
; longsigma start address is: 12 (R3)
0x1236	0x4618    MOV	R0, R3
0x1238	0xF7FFFF98  BL	__SignedIntegralToFloat+0
; longsigma end address is: 12 (R3)
0x123C	0x4A2B    LDR	R2, [PC, #172]
0x123E	0xF7FFFD1B  BL	__Div_FP+0
0x1242	0xF04F517C  MOV	R1, #1056964608
0x1246	0xF7FFFD69  BL	_pow+0
; sigma start address is: 40 (R10)
0x124A	0x4682    MOV	R10, R0
;F100RTCTest.c, 59 :: 		minuspredel=(long)(mean-3*sigma);
0x124C	0x4A28    LDR	R2, [PC, #160]
0x124E	0xF7FFF8FD  BL	__Mul_FP+0
0x1252	0x9085    STR	R0, [SP, #532]
0x1254	0x9881    LDR	R0, [SP, #516]
0x1256	0xF7FFFCF9  BL	__UnsignedIntegralToFloat+0
0x125A	0x9A85    LDR	R2, [SP, #532]
0x125C	0x9085    STR	R0, [SP, #532]
0x125E	0xF7FFF873  BL	__Sub_FP+0
0x1262	0xF7FFF9F1  BL	__FloatToSignedIntegral+0
; minuspredel start address is: 36 (R9)
0x1266	0x4681    MOV	R9, R0
;F100RTCTest.c, 60 :: 		pluspredel=(long)(mean+3*sigma);
0x1268	0x4821    LDR	R0, [PC, #132]
0x126A	0x4652    MOV	R2, R10
0x126C	0xF7FFF8EE  BL	__Mul_FP+0
; sigma end address is: 40 (R10)
0x1270	0x9A85    LDR	R2, [SP, #532]
0x1272	0xF7FEFF5F  BL	__Add_FP+0
0x1276	0xF7FFF9E7  BL	__FloatToSignedIntegral+0
; pluspredel start address is: 4 (R1)
0x127A	0x4601    MOV	R1, R0
;F100RTCTest.c, 62 :: 		rescounter=0;
; rescounter start address is: 24 (R6)
0x127C	0x2600    MOVS	R6, #0
;F100RTCTest.c, 63 :: 		for (counter=0;counter<NoOfSample;counter++){//цикл для отсечения и накопления среднего
; counter start address is: 20 (R5)
0x127E	0x2500    MOVS	R5, #0
0x1280	0xB22D    SXTH	R5, R5
; minuspredel end address is: 36 (R9)
; pluspredel end address is: 4 (R1)
; rescounter end address is: 24 (R6)
; counter end address is: 20 (R5)
0x1282	0x464C    MOV	R4, R9
0x1284	0x460B    MOV	R3, R1
0x1286	0xB228    SXTH	R0, R5
L_ADC_Get_Sample_Filtered6:
; minuspredel start address is: 16 (R4)
; pluspredel start address is: 12 (R3)
; counter start address is: 0 (R0)
; rescounter start address is: 24 (R6)
; pluspredel start address is: 12 (R3)
; pluspredel end address is: 12 (R3)
; minuspredel start address is: 16 (R4)
; minuspredel end address is: 16 (R4)
0x1288	0xF1B00FFF  CMP	R0, #255
0x128C	0xDA20    BGE	L_ADC_Get_Sample_Filtered7
; pluspredel end address is: 12 (R3)
; minuspredel end address is: 16 (R4)
;F100RTCTest.c, 65 :: 		if((ADCData[counter]>=minuspredel)&(ADCData[counter]<=pluspredel)){resmean=resmean+ADCData[counter];rescounter++;};
; minuspredel start address is: 16 (R4)
; pluspredel start address is: 12 (R3)
0x128E	0xAA01    ADD	R2, SP, #4
0x1290	0x0041    LSLS	R1, R0, #1
0x1292	0x1851    ADDS	R1, R2, R1
0x1294	0x8809    LDRH	R1, [R1, #0]
0x1296	0x42A1    CMP	R1, R4
0x1298	0xF2400200  MOVW	R2, #0
0x129C	0xDB00    BLT	L__ADC_Get_Sample_Filtered58
0x129E	0x2201    MOVS	R2, #1
L__ADC_Get_Sample_Filtered58:
0x12A0	0x4299    CMP	R1, R3
0x12A2	0xF2400100  MOVW	R1, #0
0x12A6	0xDC00    BGT	L__ADC_Get_Sample_Filtered59
0x12A8	0x2101    MOVS	R1, #1
L__ADC_Get_Sample_Filtered59:
0x12AA	0xEA020101  AND	R1, R2, R1, LSL #0
0x12AE	0xB149    CBZ	R1, L__ADC_Get_Sample_Filtered56
0x12B0	0xAA01    ADD	R2, SP, #4
0x12B2	0x0041    LSLS	R1, R0, #1
0x12B4	0x1851    ADDS	R1, R2, R1
0x12B6	0x880A    LDRH	R2, [R1, #0]
0x12B8	0x9982    LDR	R1, [SP, #520]
0x12BA	0x1889    ADDS	R1, R1, R2
0x12BC	0x9182    STR	R1, [SP, #520]
0x12BE	0x1C72    ADDS	R2, R6, #1
0x12C0	0xB292    UXTH	R2, R2
; rescounter end address is: 24 (R6)
; rescounter start address is: 8 (R2)
; rescounter end address is: 8 (R2)
0x12C2	0xE000    B	L_ADC_Get_Sample_Filtered9
L__ADC_Get_Sample_Filtered56:
0x12C4	0xB2B2    UXTH	R2, R6
L_ADC_Get_Sample_Filtered9:
;F100RTCTest.c, 63 :: 		for (counter=0;counter<NoOfSample;counter++){//цикл для отсечения и накопления среднего
; rescounter start address is: 8 (R2)
0x12C6	0x1C41    ADDS	R1, R0, #1
; counter end address is: 0 (R0)
; counter start address is: 20 (R5)
0x12C8	0xB20D    SXTH	R5, R1
;F100RTCTest.c, 66 :: 		}
; pluspredel end address is: 12 (R3)
; minuspredel end address is: 16 (R4)
; rescounter end address is: 8 (R2)
; counter end address is: 20 (R5)
0x12CA	0xB296    UXTH	R6, R2
0x12CC	0xB228    SXTH	R0, R5
0x12CE	0xE7DB    B	L_ADC_Get_Sample_Filtered6
L_ADC_Get_Sample_Filtered7:
;F100RTCTest.c, 68 :: 		if (rescounter==0){resmean=mean;} else {resmean=resmean/rescounter;}//делим на количество накопленных
; rescounter start address is: 24 (R6)
0x12D0	0xB916    CBNZ	R6, L_ADC_Get_Sample_Filtered10
; rescounter end address is: 24 (R6)
0x12D2	0x9981    LDR	R1, [SP, #516]
0x12D4	0x9182    STR	R1, [SP, #520]
0x12D6	0xE003    B	L_ADC_Get_Sample_Filtered11
L_ADC_Get_Sample_Filtered10:
; rescounter start address is: 24 (R6)
0x12D8	0x9982    LDR	R1, [SP, #520]
0x12DA	0xFBB1F1F6  UDIV	R1, R1, R6
; rescounter end address is: 24 (R6)
0x12DE	0x9182    STR	R1, [SP, #520]
L_ADC_Get_Sample_Filtered11:
;F100RTCTest.c, 96 :: 		return resmean;//выводим фильтрованное значение
0x12E0	0x9882    LDR	R0, [SP, #520]
;F100RTCTest.c, 97 :: 		}
L_end_ADC_Get_Sample_Filtered:
0x12E2	0xF8DDE000  LDR	LR, [SP, #0]
0x12E6	0xF20D2D1C  ADDW	SP, SP, #540
0x12EA	0x4770    BX	LR
0x12EC	0x0000437F  	#1132396544
0x12F0	0x00004040  	#1077936128
; end of _ADC_Get_Sample_Filtered
__SignedIntegralToFloat:
;__Lib_MathDouble.c, 186 :: 		
0x116C	0xB081    SUB	SP, SP, #4
;__Lib_MathDouble.c, 188 :: 		
0x116E	0x2800    CMP	R0, #0
;__Lib_MathDouble.c, 189 :: 		
0x1170	0xBF08    IT	EQ
;__Lib_MathDouble.c, 191 :: 		
0x1172	0xE019    BEQ	__me_lab_end
;__Lib_MathDouble.c, 193 :: 		
0x1174	0xB506    PUSH	(R1, R2, R14)
;__Lib_MathDouble.c, 195 :: 		
0x1176	0xBF54    ITE	PL
;__Lib_MathDouble.c, 196 :: 		
0x1178	0x4601    MOVPL	R1, R0
;__Lib_MathDouble.c, 197 :: 		
0x117A	0xF1D00100  RSBSMI	R1, R0, #0
;__Lib_MathDouble.c, 199 :: 		
0x117E	0xF04F029E  MOV	R2, #158
;__Lib_MathDouble.c, 201 :: 		
0x1182	0xD402    BMI	__me_lab1
;__Lib_MathDouble.c, 202 :: 		
__me_loop:
0x1184	0x1E52    SUBS	R2, R2, #1
;__Lib_MathDouble.c, 203 :: 		
0x1186	0x0049    LSLS	R1, R1, #1
;__Lib_MathDouble.c, 204 :: 		
0x1188	0xD5FC    BPL	__me_loop
;__Lib_MathDouble.c, 206 :: 		
__me_lab1:
0x118A	0x3180    ADDS	R1, #128
;__Lib_MathDouble.c, 207 :: 		
0x118C	0xBF2C    ITE	CS
;__Lib_MathDouble.c, 208 :: 		
0x118E	0x1C52    ADDCS	R2, R2, #1
;__Lib_MathDouble.c, 209 :: 		
0x1190	0x0049    LSLCC	R1, R1, #1
;__Lib_MathDouble.c, 211 :: 		
0x1192	0xEA4F2151  LSR	R1, R1, #9
;__Lib_MathDouble.c, 212 :: 		
0x1196	0xEA4151C2  ORR	R1, R1, R2, LSL #23
;__Lib_MathDouble.c, 213 :: 		
0x119A	0x2800    CMP	R0, #0
;__Lib_MathDouble.c, 214 :: 		
0x119C	0xBF4C    ITE	MI
;__Lib_MathDouble.c, 215 :: 		
0x119E	0xF0414000  ORRMI	R0, R1, #-2147483648
;__Lib_MathDouble.c, 216 :: 		
0x11A2	0x4608    MOVPL	R0, R1
;__Lib_MathDouble.c, 218 :: 		
0x11A4	0xE8BD4006  POP	(R1, R2, R14)
;__Lib_MathDouble.c, 219 :: 		
__me_lab_end:
;__Lib_MathDouble.c, 221 :: 		
L_end__SignedIntegralToFloat:
0x11A8	0xB001    ADD	SP, SP, #4
0x11AA	0x4770    BX	LR
; end of __SignedIntegralToFloat
__Div_FP:
;__Lib_MathDouble.c, 743 :: 		
0x0C78	0xB081    SUB	SP, SP, #4
;__Lib_MathDouble.c, 745 :: 		
0x0C7A	0xB5FA    PUSH	(R1, R3, R4, R5, R6, R7, R14)
;__Lib_MathDouble.c, 746 :: 		
0x0C7C	0xEA900602  EORS	R6, R0, R2, LSL #0
;__Lib_MathDouble.c, 747 :: 		
0x0C80	0xBF4C    ITE	MI
;__Lib_MathDouble.c, 748 :: 		
0x0C82	0xF04F4600  MOVMI	R6, #-2147483648
;__Lib_MathDouble.c, 749 :: 		
0x0C86	0xF04F0600  MOVPL	R6, #0
;__Lib_MathDouble.c, 751 :: 		
0x0C8A	0x0201    LSLS	R1, R0, #8
;__Lib_MathDouble.c, 752 :: 		
0x0C8C	0x0043    LSLS	R3, R0, #1
;__Lib_MathDouble.c, 753 :: 		
0x0C8E	0x0E1B    LSRS	R3, R3, #24
;__Lib_MathDouble.c, 754 :: 		
0x0C90	0xBF12    ITEE	NE
;__Lib_MathDouble.c, 755 :: 		
0x0C92	0xF0414100  ORRNE	R1, R1, #-2147483648
;__Lib_MathDouble.c, 757 :: 		
0x0C96	0xF04F0000  MOVEQ	R0, #0
;__Lib_MathDouble.c, 759 :: 		
0x0C9A	0xE03B    BEQ	__me_lab_end
;__Lib_MathDouble.c, 761 :: 		
0x0C9C	0x2BFF    CMP	R3, #255
;__Lib_MathDouble.c, 762 :: 		
0x0C9E	0xD035    BEQ	__me_ovfl
;__Lib_MathDouble.c, 764 :: 		
0x0CA0	0xEA5F2402  LSLS	R4, R2, #8
;__Lib_MathDouble.c, 765 :: 		
0x0CA4	0xEA5F0542  LSLS	R5, R2, #1
;__Lib_MathDouble.c, 766 :: 		
0x0CA8	0xEA5F6515  LSRS	R5, R5, #24
;__Lib_MathDouble.c, 767 :: 		
0x0CAC	0xBF11    ITEEE	NE
;__Lib_MathDouble.c, 769 :: 		
0x0CAE	0xF0444400  ORRNE	R4, R4, #-2147483648
;__Lib_MathDouble.c, 770 :: 		
0x0CB2	0xF04F40FF  MOVEQ	R0, #2139095040
;__Lib_MathDouble.c, 771 :: 		
0x0CB6	0x4330    ORREQ	R0, R6
;__Lib_MathDouble.c, 773 :: 		
0x0CB8	0xE02C    BEQ	__me_lab_end
;__Lib_MathDouble.c, 775 :: 		
0x0CBA	0x2DFF    CMP	R5, #255
;__Lib_MathDouble.c, 776 :: 		
0x0CBC	0xD026    BEQ	__me_ovfl
;__Lib_MathDouble.c, 778 :: 		
0x0CBE	0x1B5B    SUBS	R3, R3, R5
;__Lib_MathDouble.c, 781 :: 		
0x0CC0	0x2000    MOVS	R0, #0
;__Lib_MathDouble.c, 782 :: 		
0x0CC2	0x2720    MOVS	R7, #32
;__Lib_MathDouble.c, 783 :: 		
0x0CC4	0x0864    LSRS	R4, R4, #1
;__Lib_MathDouble.c, 784 :: 		
0x0CC6	0x0849    LSRS	R1, R1, #1
;__Lib_MathDouble.c, 786 :: 		
__me_fdiv_:
;__Lib_MathDouble.c, 788 :: 		
0x0CC8	0x42A1    CMP	R1, R4
;__Lib_MathDouble.c, 790 :: 		
0x0CCA	0xEB400000  ADC	R0, R0, R0, LSL #0
;__Lib_MathDouble.c, 791 :: 		
0x0CCE	0xBF28    IT	CS
;__Lib_MathDouble.c, 792 :: 		
0x0CD0	0x1B09    SUBCS	R1, R1, R4
;__Lib_MathDouble.c, 793 :: 		
0x0CD2	0x1E7F    SUBS	R7, R7, #1
;__Lib_MathDouble.c, 794 :: 		
0x0CD4	0xD004    BEQ	__me_flb1_
;__Lib_MathDouble.c, 795 :: 		
0x0CD6	0x2900    CMP	R1, #0
;__Lib_MathDouble.c, 796 :: 		
0x0CD8	0xBF18    IT	NE
;__Lib_MathDouble.c, 797 :: 		
0x0CDA	0x0049    LSLNE	R1, R1, #1
;__Lib_MathDouble.c, 798 :: 		
0x0CDC	0xD1F4    BNE	__me_fdiv_
;__Lib_MathDouble.c, 800 :: 		
0x0CDE	0x40B8    LSLS	R0, R7
;__Lib_MathDouble.c, 802 :: 		
__me_flb1_:
0x0CE0	0xF0104F00  TST	R0, #-2147483648
;__Lib_MathDouble.c, 803 :: 		
0x0CE4	0xBF04    ITT	EQ
;__Lib_MathDouble.c, 804 :: 		
0x0CE6	0x0040    LSLEQ	R0, R0, #1
;__Lib_MathDouble.c, 805 :: 		
0x0CE8	0xF1B30301  SUBSEQ	R3, R3, #1
;__Lib_MathDouble.c, 807 :: 		
0x0CEC	0x3080    ADDS	R0, #128
;__Lib_MathDouble.c, 808 :: 		
0x0CEE	0xBF2C    ITE	CS
;__Lib_MathDouble.c, 809 :: 		
0x0CF0	0x1C5B    ADDCS	R3, R3, #1
;__Lib_MathDouble.c, 810 :: 		
0x0CF2	0x0040    LSLCC	R0, R0, #1
;__Lib_MathDouble.c, 812 :: 		
__me_flb2_:
0x0CF4	0x337F    ADDS	R3, #127
;__Lib_MathDouble.c, 813 :: 		
0x0CF6	0xBFDC    ITT	LE
;__Lib_MathDouble.c, 814 :: 		
0x0CF8	0xF04F0000  MOVLE	R0, #0
;__Lib_MathDouble.c, 816 :: 		
0x0CFC	0xE00A    BLE	__me_lab_end
;__Lib_MathDouble.c, 818 :: 		
0x0CFE	0x2BFF    CMP	R3, #255
;__Lib_MathDouble.c, 819 :: 		
0x0D00	0xD204    BCS	__me_ovfl
;__Lib_MathDouble.c, 821 :: 		
0x0D02	0x0A40    LSRS	R0, R0, #9
;__Lib_MathDouble.c, 822 :: 		
0x0D04	0xEA4050C3  ORR	R0, R0, R3, LSL #23
;__Lib_MathDouble.c, 823 :: 		
0x0D08	0x4330    ORRS	R0, R6
;__Lib_MathDouble.c, 826 :: 		
0x0D0A	0xE003    B	__me_lab_end
;__Lib_MathDouble.c, 828 :: 		
__me_ovfl:
0x0D0C	0x27FF    MOVS	R7, #255
;__Lib_MathDouble.c, 829 :: 		
0x0D0E	0x05FF    LSLS	R7, R7, #23
;__Lib_MathDouble.c, 830 :: 		
0x0D10	0xEA560007  ORRS	R0, R6, R7, LSL #0
;__Lib_MathDouble.c, 831 :: 		
__me_lab_end:
;__Lib_MathDouble.c, 832 :: 		
0x0D14	0xE8BD40FA  POP	(R1, R3, R4, R5, R6, R7, R14)
;__Lib_MathDouble.c, 834 :: 		
L_end__Div_FP:
0x0D18	0xB001    ADD	SP, SP, #4
0x0D1A	0x4770    BX	LR
; end of __Div_FP
_pow:
;__Lib_CMath.c, 397 :: 		
; x start address is: 0 (R0)
0x0D1C	0xB084    SUB	SP, SP, #16
0x0D1E	0xF8CDE000  STR	LR, [SP, #0]
0x0D22	0x9103    STR	R1, [SP, #12]
0x0D24	0x4601    MOV	R1, R0
; x end address is: 0 (R0)
; x start address is: 4 (R1)
;__Lib_CMath.c, 398 :: 		
0x0D26	0x2200    MOVS	R2, #0
0x0D28	0xF88D2008  STRB	R2, [SP, #8]
;__Lib_CMath.c, 402 :: 		
0x0D2C	0x9A03    LDR	R2, [SP, #12]
0x0D2E	0xF04F0000  MOV	R0, #0
0x0D32	0xF7FFFC45  BL	__Compare_FP+0
0x0D36	0xF2400000  MOVW	R0, #0
0x0D3A	0xD100    BNE	L__pow135
0x0D3C	0x2001    MOVS	R0, #1
L__pow135:
0x0D3E	0xB110    CBZ	R0, L_pow60
; x end address is: 4 (R1)
;__Lib_CMath.c, 403 :: 		
0x0D40	0xF04F507E  MOV	R0, #1065353216
0x0D44	0xE03F    B	L_end_pow
L_pow60:
;__Lib_CMath.c, 404 :: 		
; x start address is: 4 (R1)
0x0D46	0xF04F0000  MOV	R0, #0
0x0D4A	0x460A    MOV	R2, R1
0x0D4C	0xF7FFFC38  BL	__Compare_FP+0
0x0D50	0xF2400000  MOVW	R0, #0
0x0D54	0xD100    BNE	L__pow136
0x0D56	0x2001    MOVS	R0, #1
L__pow136:
0x0D58	0xB110    CBZ	R0, L_pow61
; x end address is: 4 (R1)
;__Lib_CMath.c, 405 :: 		
0x0D5A	0xF04F0000  MOV	R0, #0
0x0D5E	0xE032    B	L_end_pow
L_pow61:
;__Lib_CMath.c, 406 :: 		
; x start address is: 4 (R1)
0x0D60	0xF04F0000  MOV	R0, #0
0x0D64	0x460A    MOV	R2, R1
0x0D66	0xF7FFFC2B  BL	__Compare_FP+0
0x0D6A	0xF2400000  MOVW	R0, #0
0x0D6E	0xDD00    BLE	L__pow137
0x0D70	0x2001    MOVS	R0, #1
L__pow137:
0x0D72	0xB1C8    CBZ	R0, L__pow80
;__Lib_CMath.c, 407 :: 		
0x0D74	0x9101    STR	R1, [SP, #4]
0x0D76	0x9803    LDR	R0, [SP, #12]
0x0D78	0xF7FFFC66  BL	__FloatToSignedIntegral+0
; yi start address is: 12 (R3)
0x0D7C	0x4603    MOV	R3, R0
;__Lib_CMath.c, 408 :: 		
0x0D7E	0xF000F9F5  BL	__SignedIntegralToFloat+0
0x0D82	0x9901    LDR	R1, [SP, #4]
0x0D84	0x9A03    LDR	R2, [SP, #12]
0x0D86	0xF7FFFC1B  BL	__Compare_FP+0
0x0D8A	0xF2400000  MOVW	R0, #0
0x0D8E	0xD000    BEQ	L__pow138
0x0D90	0x2001    MOVS	R0, #1
L__pow138:
0x0D92	0xB110    CBZ	R0, L_pow63
; x end address is: 4 (R1)
; yi end address is: 12 (R3)
;__Lib_CMath.c, 409 :: 		
0x0D94	0xF04F0000  MOV	R0, #0
0x0D98	0xE015    B	L_end_pow
L_pow63:
;__Lib_CMath.c, 410 :: 		
; yi start address is: 12 (R3)
; x start address is: 4 (R1)
0x0D9A	0xF0030201  AND	R2, R3, #1
; yi end address is: 12 (R3)
0x0D9E	0xF88D2008  STRB	R2, [SP, #8]
;__Lib_CMath.c, 411 :: 		
0x0DA2	0xF0814000  EOR	R0, R1, #-2147483648
; x end address is: 4 (R1)
; x start address is: 0 (R0)
; x end address is: 0 (R0)
;__Lib_CMath.c, 412 :: 		
0x0DA6	0xE000    B	L_pow62
L__pow80:
;__Lib_CMath.c, 406 :: 		
0x0DA8	0x4608    MOV	R0, R1
;__Lib_CMath.c, 412 :: 		
L_pow62:
;__Lib_CMath.c, 413 :: 		
; x start address is: 0 (R0)
; x end address is: 0 (R0)
0x0DAA	0xF7FFFC6F  BL	_log+0
;__Lib_CMath.c, 414 :: 		
0x0DAE	0x9A03    LDR	R2, [SP, #12]
0x0DB0	0xF7FFFB4C  BL	__Mul_FP+0
;__Lib_CMath.c, 415 :: 		
0x0DB4	0xF7FFFDD2  BL	_exp+0
; x start address is: 0 (R0)
;__Lib_CMath.c, 417 :: 		
0x0DB8	0xF89D2008  LDRB	R2, [SP, #8]
0x0DBC	0xB11A    CBZ	R2, L_pow64
;__Lib_CMath.c, 418 :: 		
0x0DBE	0xF0804200  EOR	R2, R0, #-2147483648
; x end address is: 0 (R0)
0x0DC2	0x4610    MOV	R0, R2
0x0DC4	0xE7FF    B	L_end_pow
L_pow64:
;__Lib_CMath.c, 419 :: 		
; x start address is: 0 (R0)
; x end address is: 0 (R0)
;__Lib_CMath.c, 420 :: 		
L_end_pow:
0x0DC6	0xF8DDE000  LDR	LR, [SP, #0]
0x0DCA	0xB004    ADD	SP, SP, #16
0x0DCC	0x4770    BX	LR
; end of _pow
__Compare_FP:
;__Lib_MathDouble.c, 839 :: 		
0x05C0	0xB081    SUB	SP, SP, #4
;__Lib_MathDouble.c, 841 :: 		
0x05C2	0xB510    PUSH	(R4, R14)
;__Lib_MathDouble.c, 843 :: 		
0x05C4	0x4290    CMP	R0, R2
;__Lib_MathDouble.c, 844 :: 		
0x05C6	0xBF08    IT	EQ
;__Lib_MathDouble.c, 846 :: 		
0x05C8	0xE02A    BEQ	__me_lab_end
;__Lib_MathDouble.c, 848 :: 		
0x05CA	0xEA400402  ORR	R4, R0, R2, LSL #0
;__Lib_MathDouble.c, 849 :: 		
0x05CE	0xEA4F0444  LSL	R4, R4, #1
;__Lib_MathDouble.c, 850 :: 		
0x05D2	0x2C00    CMP	R4, #0
;__Lib_MathDouble.c, 851 :: 		
0x05D4	0xBF08    IT	EQ
;__Lib_MathDouble.c, 853 :: 		
0x05D6	0xE023    BEQ	__me_lab_end
;__Lib_MathDouble.c, 855 :: 		
0x05D8	0x0044    LSLS	R4, R0, #1
;__Lib_MathDouble.c, 856 :: 		
0x05DA	0xD104    BNE	__me_ct2_
;__Lib_MathDouble.c, 858 :: 		
0x05DC	0x4294    CMP	R4, R2
;__Lib_MathDouble.c, 859 :: 		
0x05DE	0xD401    BMI	__me_labop2_pos
;__Lib_MathDouble.c, 860 :: 		
0x05E0	0x1CA4    ADDS	R4, R4, #2
;__Lib_MathDouble.c, 861 :: 		
0x05E2	0x2C01    CMP	R4, #1
;__Lib_MathDouble.c, 862 :: 		
__me_labop2_pos:
;__Lib_MathDouble.c, 864 :: 		
0x05E4	0xE01C    B	__me_lab_end
;__Lib_MathDouble.c, 866 :: 		
__me_ct2_:
0x05E6	0xEA4F0440  LSL	R4, R0, #1
;__Lib_MathDouble.c, 867 :: 		
0x05EA	0xEA4F6414  LSR	R4, R4, #24
;__Lib_MathDouble.c, 868 :: 		
0x05EE	0x2CFF    CMP	R4, #255
;__Lib_MathDouble.c, 869 :: 		
0x05F0	0xD10A    BNE	__me_ct1_
;__Lib_MathDouble.c, 870 :: 		
0x05F2	0xEA4F0442  LSL	R4, R2, #1
;__Lib_MathDouble.c, 871 :: 		
0x05F6	0xEA4F6414  LSR	R4, R4, #24
;__Lib_MathDouble.c, 872 :: 		
0x05FA	0x2CFF    CMP	R4, #255
;__Lib_MathDouble.c, 873 :: 		
0x05FC	0xD104    BNE	__me_ct1_
;__Lib_MathDouble.c, 875 :: 		
0x05FE	0xEA4F74D2  LSR	R4, R2, #31
;__Lib_MathDouble.c, 876 :: 		
0x0602	0xEBB434D0  SUBS	R4, R4, R0, LSR #31
;__Lib_MathDouble.c, 878 :: 		
0x0606	0xE00B    B	__me_lab_end
;__Lib_MathDouble.c, 880 :: 		
__me_ct1_:
0x0608	0x2A00    CMP	R2, #0
;__Lib_MathDouble.c, 881 :: 		
0x060A	0xD406    BMI	__me_op2_m
;__Lib_MathDouble.c, 883 :: 		
0x060C	0x2800    CMP	R0, #0
;__Lib_MathDouble.c, 884 :: 		
0x060E	0xDC02    BGT	__me_labop1_pos
;__Lib_MathDouble.c, 885 :: 		
0x0610	0x2400    MOVS	R4, #0
;__Lib_MathDouble.c, 886 :: 		
0x0612	0x2C01    CMP	R4, #1
;__Lib_MathDouble.c, 888 :: 		
0x0614	0xE004    B	__me_lab_end
;__Lib_MathDouble.c, 889 :: 		
__me_labop1_pos:
;__Lib_MathDouble.c, 890 :: 		
0x0616	0x4290    CMP	R0, R2
;__Lib_MathDouble.c, 892 :: 		
0x0618	0xE002    B	__me_lab_end
;__Lib_MathDouble.c, 893 :: 		
__me_op2_m:
0x061A	0x2800    CMP	R0, #0
;__Lib_MathDouble.c, 894 :: 		
0x061C	0xBF48    IT	MI
;__Lib_MathDouble.c, 895 :: 		
0x061E	0x4282    CMPMI	R2, R0
;__Lib_MathDouble.c, 896 :: 		
__me_lab_end:
;__Lib_MathDouble.c, 897 :: 		
0x0620	0xE8BD4010  POP	(R4, R14)
;__Lib_MathDouble.c, 899 :: 		
L_end__Compare_FP:
0x0624	0xB001    ADD	SP, SP, #4
0x0626	0x4770    BX	LR
; end of __Compare_FP
__FloatToSignedIntegral:
;__Lib_MathDouble.c, 4 :: 		
0x0648	0xB081    SUB	SP, SP, #4
;__Lib_MathDouble.c, 6 :: 		
0x064A	0xB506    PUSH	(R1, R2, R14)
;__Lib_MathDouble.c, 8 :: 		
0x064C	0xEA4F0240  LSL	R2, R0, #1
;__Lib_MathDouble.c, 9 :: 		
0x0650	0xEA4F6212  LSR	R2, R2, #24
;__Lib_MathDouble.c, 11 :: 		
0x0654	0x3A7F    SUBS	R2, #127
;__Lib_MathDouble.c, 12 :: 		
0x0656	0xBF44    ITT	MI
;__Lib_MathDouble.c, 13 :: 		
0x0658	0xF04F0000  MOVMI	R0, #0
;__Lib_MathDouble.c, 15 :: 		
0x065C	0xE011    BMI	__me_lab_end
;__Lib_MathDouble.c, 17 :: 		
0x065E	0xF1D2021F  RSBS	R2, R2, #31
;__Lib_MathDouble.c, 18 :: 		
0x0662	0xD909    BLS	__me_ovfl
;__Lib_MathDouble.c, 20 :: 		
0x0664	0xEA4F2100  LSL	R1, R0, #8
;__Lib_MathDouble.c, 21 :: 		
0x0668	0xF0414100  ORR	R1, R1, #-2147483648
;__Lib_MathDouble.c, 23 :: 		
0x066C	0x40D1    LSRS	R1, R2
;__Lib_MathDouble.c, 25 :: 		
0x066E	0x2800    CMP	R0, #0
;__Lib_MathDouble.c, 26 :: 		
0x0670	0xBF4C    ITE	MI
;__Lib_MathDouble.c, 27 :: 		
0x0672	0x4248    RSBMI	R0, R1, #0
;__Lib_MathDouble.c, 28 :: 		
0x0674	0x4608    MOVPL	R0, R1
;__Lib_MathDouble.c, 31 :: 		
0x0676	0xE004    B	__me_lab_end
;__Lib_MathDouble.c, 33 :: 		
__me_ovfl:
0x0678	0x2800    CMP	R0, #0
;__Lib_MathDouble.c, 34 :: 		
0x067A	0xF04F4000  MOV	R0, #-2147483648
;__Lib_MathDouble.c, 35 :: 		
0x067E	0xBF58    IT	PL
;__Lib_MathDouble.c, 36 :: 		
0x0680	0x1E40    SUBPL	R0, R0, #1
;__Lib_MathDouble.c, 37 :: 		
__me_lab_end:
;__Lib_MathDouble.c, 38 :: 		
0x0682	0xE8BD4006  POP	(R1, R2, R14)
;__Lib_MathDouble.c, 40 :: 		
L_end__FloatToSignedIntegral:
0x0686	0xB001    ADD	SP, SP, #4
0x0688	0x4770    BX	LR
; end of __FloatToSignedIntegral
_log:
;__Lib_CMath.c, 365 :: 		
; x start address is: 0 (R0)
0x068C	0xB082    SUB	SP, SP, #8
0x068E	0xF8CDE000  STR	LR, [SP, #0]
0x0692	0x4603    MOV	R3, R0
; x end address is: 0 (R0)
; x start address is: 12 (R3)
;__Lib_CMath.c, 381 :: 		
0x0694	0xF04F0000  MOV	R0, #0
0x0698	0x461A    MOV	R2, R3
0x069A	0xF7FFFF91  BL	__Compare_FP+0
0x069E	0xF2400000  MOVW	R0, #0
0x06A2	0xDB00    BLT	L__log132
0x06A4	0x2001    MOVS	R0, #1
L__log132:
0x06A6	0xB110    CBZ	R0, L_log59
; x end address is: 12 (R3)
;__Lib_CMath.c, 382 :: 		
0x06A8	0xF04F0000  MOV	R0, #0
0x06AC	0xE020    B	L_end_log
L_log59:
;__Lib_CMath.c, 383 :: 		
; x start address is: 12 (R3)
0x06AE	0xA901    ADD	R1, SP, #4
0x06B0	0x4618    MOV	R0, R3
; x end address is: 12 (R3)
0x06B2	0xF7FFFE0B  BL	_frexp+0
0x06B6	0xF04F4280  MOV	R2, #1073741824
0x06BA	0xF7FFFEC7  BL	__Mul_FP+0
0x06BE	0xF04F527E  MOV	R2, #1065353216
0x06C2	0xF7FFFE41  BL	__Sub_FP+0
;__Lib_CMath.c, 384 :: 		
0x06C6	0xF9BD1004  LDRSH	R1, [SP, #4]
0x06CA	0x1E49    SUBS	R1, R1, #1
0x06CC	0xF8AD1004  STRH	R1, [SP, #4]
;__Lib_CMath.c, 385 :: 		
0x06D0	0x2208    MOVS	R2, #8
0x06D2	0xB212    SXTH	R2, R2
0x06D4	0x4908    LDR	R1, [PC, #32]
0x06D6	0xF7FFFE13  BL	__Lib_CMath_eval_poly+0
; x start address is: 32 (R8)
0x06DA	0x4680    MOV	R8, R0
;__Lib_CMath.c, 386 :: 		
0x06DC	0xF9BD0004  LDRSH	R0, [SP, #4]
0x06E0	0xF000FD44  BL	__SignedIntegralToFloat+0
0x06E4	0x4A05    LDR	R2, [PC, #20]
0x06E6	0xF7FFFEB1  BL	__Mul_FP+0
0x06EA	0x4642    MOV	R2, R8
0x06EC	0xF7FFFD22  BL	__Add_FP+0
; x end address is: 32 (R8)
;__Lib_CMath.c, 388 :: 		
L_end_log:
0x06F0	0xF8DDE000  LDR	LR, [SP, #0]
0x06F4	0xB002    ADD	SP, SP, #8
0x06F6	0x4770    BX	LR
0x06F8	0x1E640000  	log_coeff_L0+0
0x06FC	0x72183F31  	#1060205080
; end of _log
_frexp:
;__Lib_CMath.c, 79 :: 		
; eptr start address is: 4 (R1)
; value start address is: 0 (R0)
0x02CC	0xB082    SUB	SP, SP, #8
; eptr end address is: 4 (R1)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
; eptr start address is: 4 (R1)
;__Lib_CMath.c, 83 :: 		
0x02CE	0x9001    STR	R0, [SP, #4]
; value end address is: 0 (R0)
;__Lib_CMath.c, 84 :: 		
0x02D0	0xF8BD2006  LDRH	R2, [SP, #6]
0x02D4	0xF3C212C7  UBFX	R2, R2, #7, #8
0x02D8	0x3A7E    SUBS	R2, #126
; bb start address is: 0 (R0)
0x02DA	0xB210    SXTH	R0, R2
;__Lib_CMath.c, 85 :: 		
0x02DC	0x8008    STRH	R0, [R1, #0]
; eptr end address is: 4 (R1)
; bb end address is: 0 (R0)
;__Lib_CMath.c, 86 :: 		
0x02DE	0x237E    MOVS	R3, #126
0x02E0	0xF8BD2006  LDRH	R2, [SP, #6]
0x02E4	0xF36312CE  BFI	R2, R3, #7, #8
0x02E8	0xF8AD2006  STRH	R2, [SP, #6]
;__Lib_CMath.c, 87 :: 		
0x02EC	0x9801    LDR	R0, [SP, #4]
;__Lib_CMath.c, 94 :: 		
L_end_frexp:
0x02EE	0xB002    ADD	SP, SP, #8
0x02F0	0x4770    BX	LR
; end of _frexp
__Mul_FP:
;__Lib_MathDouble.c, 666 :: 		
0x044C	0xB081    SUB	SP, SP, #4
;__Lib_MathDouble.c, 668 :: 		
0x044E	0xB5FA    PUSH	(R1, R3, R4, R5, R6, R7, R14)
;__Lib_MathDouble.c, 670 :: 		
0x0450	0xEA900602  EORS	R6, R0, R2, LSL #0
;__Lib_MathDouble.c, 671 :: 		
0x0454	0xBF4C    ITE	MI
;__Lib_MathDouble.c, 672 :: 		
0x0456	0xF04F4600  MOVMI	R6, #-2147483648
;__Lib_MathDouble.c, 673 :: 		
0x045A	0xF04F0600  MOVPL	R6, #0
;__Lib_MathDouble.c, 675 :: 		
0x045E	0xEA4F2100  LSL	R1, R0, #8
;__Lib_MathDouble.c, 676 :: 		
0x0462	0xEA4F0340  LSL	R3, R0, #1
;__Lib_MathDouble.c, 677 :: 		
0x0466	0x0E1B    LSRS	R3, R3, #24
;__Lib_MathDouble.c, 678 :: 		
0x0468	0xBF12    ITEE	NE
;__Lib_MathDouble.c, 679 :: 		
0x046A	0xF0414100  ORRNE	R1, R1, #-2147483648
;__Lib_MathDouble.c, 681 :: 		
0x046E	0xF04F0000  MOVEQ	R0, #0
;__Lib_MathDouble.c, 683 :: 		
0x0472	0xE02C    BEQ	__me_lab_end
;__Lib_MathDouble.c, 685 :: 		
0x0474	0x2BFF    CMP	R3, #255
;__Lib_MathDouble.c, 686 :: 		
0x0476	0xD026    BEQ	__me_ovfl
;__Lib_MathDouble.c, 688 :: 		
0x0478	0xEA4F2402  LSL	R4, R2, #8
;__Lib_MathDouble.c, 689 :: 		
0x047C	0xEA4F0542  LSL	R5, R2, #1
;__Lib_MathDouble.c, 690 :: 		
0x0480	0x0E2D    LSRS	R5, R5, #24
;__Lib_MathDouble.c, 691 :: 		
0x0482	0xBF12    ITEE	NE
;__Lib_MathDouble.c, 692 :: 		
0x0484	0xF0444400  ORRNE	R4, R4, #-2147483648
;__Lib_MathDouble.c, 694 :: 		
0x0488	0xF04F0000  MOVEQ	R0, #0
;__Lib_MathDouble.c, 696 :: 		
0x048C	0xE01F    BEQ	__me_lab_end
;__Lib_MathDouble.c, 698 :: 		
0x048E	0x2DFF    CMP	R5, #255
;__Lib_MathDouble.c, 699 :: 		
0x0490	0xD019    BEQ	__me_ovfl
;__Lib_MathDouble.c, 701 :: 		
0x0492	0x195B    ADDS	R3, R3, R5
;__Lib_MathDouble.c, 703 :: 		
0x0494	0xFBA15404  UMULL	R5, R4, R1, R4
;__Lib_MathDouble.c, 705 :: 		
0x0498	0x2C00    CMP	R4, #0
;__Lib_MathDouble.c, 706 :: 		
0x049A	0xBF5C    ITT	PL
;__Lib_MathDouble.c, 707 :: 		
0x049C	0x0064    LSLPL	R4, R4, #1
;__Lib_MathDouble.c, 708 :: 		
0x049E	0x1E5B    SUBPL	R3, R3, #1
;__Lib_MathDouble.c, 710 :: 		
0x04A0	0x3480    ADDS	R4, #128
;__Lib_MathDouble.c, 711 :: 		
0x04A2	0xBF24    ITT	CS
;__Lib_MathDouble.c, 712 :: 		
0x04A4	0x1C5B    ADDCS	R3, R3, #1
;__Lib_MathDouble.c, 713 :: 		
0x04A6	0x0864    LSRCS	R4, R4, #1
;__Lib_MathDouble.c, 715 :: 		
0x04A8	0x3B7E    SUBS	R3, #126
;__Lib_MathDouble.c, 716 :: 		
0x04AA	0xBFDC    ITT	LE
;__Lib_MathDouble.c, 717 :: 		
0x04AC	0xF04F0000  MOVLE	R0, #0
;__Lib_MathDouble.c, 719 :: 		
0x04B0	0xE00D    BLE	__me_lab_end
;__Lib_MathDouble.c, 721 :: 		
0x04B2	0x2BFF    CMP	R3, #255
;__Lib_MathDouble.c, 722 :: 		
0x04B4	0xD207    BCS	__me_ovfl
;__Lib_MathDouble.c, 724 :: 		
0x04B6	0xEA4F2014  LSR	R0, R4, #8
;__Lib_MathDouble.c, 725 :: 		
0x04BA	0xF4300000  BICS	R0, R0, #8388608
;__Lib_MathDouble.c, 726 :: 		
0x04BE	0xEA4050C3  ORR	R0, R0, R3, LSL #23
;__Lib_MathDouble.c, 727 :: 		
0x04C2	0x4330    ORRS	R0, R6
;__Lib_MathDouble.c, 730 :: 		
0x04C4	0xE003    B	__me_lab_end
;__Lib_MathDouble.c, 732 :: 		
__me_ovfl:
0x04C6	0x27FF    MOVS	R7, #255
;__Lib_MathDouble.c, 733 :: 		
0x04C8	0x05FF    LSLS	R7, R7, #23
;__Lib_MathDouble.c, 734 :: 		
0x04CA	0xEA460007  ORR	R0, R6, R7, LSL #0
;__Lib_MathDouble.c, 735 :: 		
__me_lab_end:
;__Lib_MathDouble.c, 736 :: 		
0x04CE	0xE8BD40FA  POP	(R1, R3, R4, R5, R6, R7, R14)
;__Lib_MathDouble.c, 738 :: 		
L_end__Mul_FP:
0x04D2	0xB001    ADD	SP, SP, #4
0x04D4	0x4770    BX	LR
; end of __Mul_FP
__Sub_FP:
;__Lib_MathDouble.c, 539 :: 		
0x0348	0xB081    SUB	SP, SP, #4
;__Lib_MathDouble.c, 541 :: 		
0x034A	0xF0824200  EOR	R2, R2, #-2147483648
;__Lib_MathDouble.c, 542 :: 		
0x034E	0xE92D41FA  PUSH	(R1, R3, R4, R5, R6, R7, R8, R14)
;__Lib_MathDouble.c, 544 :: 		
0x0352	0xEA4F2402  LSL	R4, R2, #8
;__Lib_MathDouble.c, 545 :: 		
0x0356	0xEA4F0542  LSL	R5, R2, #1
;__Lib_MathDouble.c, 546 :: 		
0x035A	0x0E2D    LSRS	R5, R5, #24
;__Lib_MathDouble.c, 547 :: 		
0x035C	0xD104    BNE	__me_lab1
;__Lib_MathDouble.c, 549 :: 		
0x035E	0x2C00    CMP	R4, #0
;__Lib_MathDouble.c, 550 :: 		
0x0360	0xBF18    IT	NE
;__Lib_MathDouble.c, 551 :: 		
0x0362	0xF04F0000  MOVNE	R0, #0
;__Lib_MathDouble.c, 553 :: 		
0x0366	0xE06C    B	__me_lab_end
;__Lib_MathDouble.c, 555 :: 		
__me_lab1:
0x0368	0xF0444400  ORR	R4, R4, #-2147483648
;__Lib_MathDouble.c, 557 :: 		
0x036C	0x2DFF    CMP	R5, #255
;__Lib_MathDouble.c, 559 :: 		
0x036E	0xD05F    BEQ	__me_ovfl1
;__Lib_MathDouble.c, 561 :: 		
0x0370	0xEA4F0494  LSR	R4, R4, #2
;__Lib_MathDouble.c, 562 :: 		
0x0374	0x2A00    CMP	R2, #0
;__Lib_MathDouble.c, 563 :: 		
0x0376	0xBF48    IT	MI
;__Lib_MathDouble.c, 564 :: 		
0x0378	0x4264    RSBMI	R4, R4, #0
;__Lib_MathDouble.c, 566 :: 		
0x037A	0xEA4F2100  LSL	R1, R0, #8
;__Lib_MathDouble.c, 567 :: 		
0x037E	0xEA4F0340  LSL	R3, R0, #1
;__Lib_MathDouble.c, 568 :: 		
0x0382	0x0E1B    LSRS	R3, R3, #24
;__Lib_MathDouble.c, 569 :: 		
0x0384	0xD105    BNE	__me_lab2
;__Lib_MathDouble.c, 571 :: 		
0x0386	0x2900    CMP	R1, #0
;__Lib_MathDouble.c, 572 :: 		
0x0388	0xBF14    ITE	NE
;__Lib_MathDouble.c, 573 :: 		
0x038A	0xF04F0000  MOVNE	R0, #0
;__Lib_MathDouble.c, 574 :: 		
0x038E	0x4610    MOVEQ	R0, R2
;__Lib_MathDouble.c, 576 :: 		
0x0390	0xE057    B	__me_lab_end
;__Lib_MathDouble.c, 578 :: 		
__me_lab2:
0x0392	0xF0414100  ORR	R1, R1, #-2147483648
;__Lib_MathDouble.c, 580 :: 		
0x0396	0x2BFF    CMP	R3, #255
;__Lib_MathDouble.c, 581 :: 		
0x0398	0xD04B    BEQ	__me_ovfl0
;__Lib_MathDouble.c, 583 :: 		
0x039A	0xEA4F0191  LSR	R1, R1, #2
;__Lib_MathDouble.c, 584 :: 		
0x039E	0x2800    CMP	R0, #0
;__Lib_MathDouble.c, 585 :: 		
0x03A0	0xBF48    IT	MI
;__Lib_MathDouble.c, 586 :: 		
0x03A2	0x4249    RSBMI	R1, R1, #0
;__Lib_MathDouble.c, 588 :: 		
0x03A4	0x1B5E    SUBS	R6, R3, R5
;__Lib_MathDouble.c, 589 :: 		
0x03A6	0xBF41    ITTTT	MI
;__Lib_MathDouble.c, 590 :: 		
0x03A8	0x460F    MOVMI	R7, R1
;__Lib_MathDouble.c, 591 :: 		
0x03AA	0x4621    MOVMI	R1, R4
;__Lib_MathDouble.c, 592 :: 		
0x03AC	0x463C    MOVMI	R4, R7
;__Lib_MathDouble.c, 593 :: 		
0x03AE	0x4276    RSBMI	R6, R6, #0
;__Lib_MathDouble.c, 594 :: 		
0x03B0	0xBF48    IT	MI
;__Lib_MathDouble.c, 595 :: 		
0x03B2	0x462B    MOVMI	R3, R5
;__Lib_MathDouble.c, 597 :: 		
0x03B4	0x2E19    CMP	R6, #25
;__Lib_MathDouble.c, 598 :: 		
0x03B6	0xBF47    ITTEE	MI
;__Lib_MathDouble.c, 599 :: 		
0x03B8	0xFA44F706  ASRMI	R7, R4, R6
;__Lib_MathDouble.c, 600 :: 		
0x03BC	0x19C9    ADDMI	R1, R1, R7
;__Lib_MathDouble.c, 601 :: 		
0x03BE	0xF04F0800  MOVPL	R8, #0
;__Lib_MathDouble.c, 602 :: 		
0x03C2	0xE003    BPL	__me_skip_sticky
;__Lib_MathDouble.c, 603 :: 		
0x03C4	0xF1C6071C  RSB	R7, R6, #28
;__Lib_MathDouble.c, 604 :: 		
0x03C8	0xFA04F807  LSL	R8, R4, R7
;__Lib_MathDouble.c, 606 :: 		
__me_skip_sticky:
;__Lib_MathDouble.c, 607 :: 		
0x03CC	0x2900    CMP	R1, #0
;__Lib_MathDouble.c, 608 :: 		
0x03CE	0xBF04    ITT	EQ
;__Lib_MathDouble.c, 609 :: 		
0x03D0	0xF04F0000  MOVEQ	R0, #0
;__Lib_MathDouble.c, 611 :: 		
0x03D4	0xE035    BEQ	__me_lab_end
;__Lib_MathDouble.c, 612 :: 		
0x03D6	0xBF46    ITTE	MI
;__Lib_MathDouble.c, 613 :: 		
0x03D8	0x4249    RSBMI	R1, R1, #0
;__Lib_MathDouble.c, 614 :: 		
0x03DA	0xF04F0701  MOVMI	R7, #1
;__Lib_MathDouble.c, 615 :: 		
0x03DE	0xF04F0700  MOVPL	R7, #0
;__Lib_MathDouble.c, 617 :: 		
__me_loop:
0x03E2	0xF1A30301  SUB	R3, R3, #1
;__Lib_MathDouble.c, 618 :: 		
0x03E6	0x0049    LSLS	R1, R1, #1
;__Lib_MathDouble.c, 619 :: 		
0x03E8	0xD5FB    BPL	__me_loop
;__Lib_MathDouble.c, 621 :: 		
0x03EA	0xF0110480  ANDS	R4, R1, #128
;__Lib_MathDouble.c, 622 :: 		
0x03EE	0xD00D    BEQ	__me_no_round
;__Lib_MathDouble.c, 623 :: 		
0x03F0	0xF0010520  AND	R5, R1, #32
;__Lib_MathDouble.c, 624 :: 		
0x03F4	0xEA480805  ORR	R8, R8, R5, LSL #0
;__Lib_MathDouble.c, 625 :: 		
0x03F8	0x3180    ADDS	R1, #128
;__Lib_MathDouble.c, 626 :: 		
0x03FA	0xBF28    IT	CS
;__Lib_MathDouble.c, 627 :: 		
0x03FC	0x1C5B    ADDCS	R3, R3, #1
;__Lib_MathDouble.c, 628 :: 		
0x03FE	0xF0010440  AND	R4, R1, #64
;__Lib_MathDouble.c, 629 :: 		
0x0402	0xEA580804  ORRS	R8, R8, R4, LSL #0
;__Lib_MathDouble.c, 630 :: 		
0x0406	0xBF08    IT	EQ
;__Lib_MathDouble.c, 631 :: 		
0x0408	0xF4217180  BICEQ	R1, R1, #256
;__Lib_MathDouble.c, 633 :: 		
__me_no_round:
;__Lib_MathDouble.c, 634 :: 		
0x040C	0x1C9B    ADDS	R3, R3, #2
;__Lib_MathDouble.c, 635 :: 		
0x040E	0xBFDC    ITT	LE
;__Lib_MathDouble.c, 636 :: 		
0x0410	0xF04F0000  MOVLE	R0, #0
;__Lib_MathDouble.c, 638 :: 		
0x0414	0xE015    BLE	__me_lab_end
;__Lib_MathDouble.c, 639 :: 		
0x0416	0x2BFF    CMP	R3, #255
;__Lib_MathDouble.c, 640 :: 		
0x0418	0xD20D    BCS	__me_ovfl
;__Lib_MathDouble.c, 642 :: 		
0x041A	0xF02101FF  BIC	R1, R1, #255
;__Lib_MathDouble.c, 643 :: 		
0x041E	0xEA4F0141  LSL	R1, R1, #1
;__Lib_MathDouble.c, 645 :: 		
0x0422	0xEA4F2051  LSR	R0, R1, #9
;__Lib_MathDouble.c, 646 :: 		
0x0426	0xEA4050C3  ORR	R0, R0, R3, LSL #23
;__Lib_MathDouble.c, 647 :: 		
0x042A	0xEA4070C7  ORR	R0, R0, R7, LSL #31
;__Lib_MathDouble.c, 650 :: 		
0x042E	0xE008    B	__me_lab_end
;__Lib_MathDouble.c, 652 :: 		
__me_ovfl1:
0x0430	0x4610    MOV	R0, R2
;__Lib_MathDouble.c, 653 :: 		
__me_ovfl0:
0x0432	0xEA4F77D0  LSR	R7, R0, #31
;__Lib_MathDouble.c, 654 :: 		
__me_ovfl:
0x0436	0xEA4F77C7  LSL	R7, R7, #31
;__Lib_MathDouble.c, 655 :: 		
0x043A	0x20FF    MOVS	R0, #255
;__Lib_MathDouble.c, 656 :: 		
0x043C	0xEA4F50C0  LSL	R0, R0, #23
;__Lib_MathDouble.c, 657 :: 		
0x0440	0x4338    ORRS	R0, R7
;__Lib_MathDouble.c, 658 :: 		
__me_lab_end:
;__Lib_MathDouble.c, 659 :: 		
0x0442	0xE8BD41FA  POP	(R1, R3, R4, R5, R6, R7, R8, R14)
;__Lib_MathDouble.c, 661 :: 		
L_end__Sub_FP:
0x0446	0xB001    ADD	SP, SP, #4
0x0448	0x4770    BX	LR
; end of __Sub_FP
__Lib_CMath_eval_poly:
;__Lib_CMath.c, 117 :: 		
; n start address is: 8 (R2)
; d start address is: 4 (R1)
; x start address is: 0 (R0)
0x0300	0xB081    SUB	SP, SP, #4
0x0302	0xF8CDE000  STR	LR, [SP, #0]
; n end address is: 8 (R2)
; d end address is: 4 (R1)
; x end address is: 0 (R0)
; x start address is: 0 (R0)
; d start address is: 4 (R1)
; n start address is: 8 (R2)
;__Lib_CMath.c, 120 :: 		
0x0306	0x0093    LSLS	R3, R2, #2
0x0308	0x18CB    ADDS	R3, R1, R3
0x030A	0x681B    LDR	R3, [R3, #0]
; res start address is: 16 (R4)
0x030C	0x461C    MOV	R4, R3
; x end address is: 0 (R0)
; d end address is: 4 (R1)
; n end address is: 8 (R2)
; res end address is: 16 (R4)
0x030E	0x4682    MOV	R10, R0
0x0310	0x4620    MOV	R0, R4
0x0312	0x4689    MOV	R9, R1
0x0314	0xFA0FF882  SXTH	R8, R2
;__Lib_CMath.c, 121 :: 		
L___Lib_CMath_eval_poly17:
; res start address is: 0 (R0)
; x start address is: 40 (R10)
; d start address is: 36 (R9)
; n start address is: 32 (R8)
; d start address is: 36 (R9)
; d end address is: 36 (R9)
; x start address is: 40 (R10)
; x end address is: 40 (R10)
0x0318	0xF1B80F00  CMP	R8, #0
0x031C	0xD010    BEQ	L___Lib_CMath_eval_poly18
; d end address is: 36 (R9)
; x end address is: 40 (R10)
;__Lib_CMath.c, 122 :: 		
; x start address is: 40 (R10)
; d start address is: 36 (R9)
0x031E	0x4652    MOV	R2, R10
0x0320	0xF000F894  BL	__Mul_FP+0
; res end address is: 0 (R0)
0x0324	0xF1A80301  SUB	R3, R8, #1
0x0328	0xB21B    SXTH	R3, R3
; n end address is: 32 (R8)
; n start address is: 44 (R11)
0x032A	0xFA0FFB83  SXTH	R11, R3
0x032E	0x009B    LSLS	R3, R3, #2
0x0330	0xEB090303  ADD	R3, R9, R3, LSL #0
0x0334	0x681A    LDR	R2, [R3, #0]
0x0336	0xF7FFFEFD  BL	__Add_FP+0
; res start address is: 0 (R0)
; d end address is: 36 (R9)
; x end address is: 40 (R10)
; n end address is: 44 (R11)
0x033A	0xFA0FF88B  SXTH	R8, R11
0x033E	0xE7EB    B	L___Lib_CMath_eval_poly17
L___Lib_CMath_eval_poly18:
;__Lib_CMath.c, 124 :: 		
; res end address is: 0 (R0)
;__Lib_CMath.c, 125 :: 		
L_end_eval_poly:
0x0340	0xF8DDE000  LDR	LR, [SP, #0]
0x0344	0xB001    ADD	SP, SP, #4
0x0346	0x4770    BX	LR
; end of __Lib_CMath_eval_poly
__Add_FP:
;__Lib_MathDouble.c, 413 :: 		
0x0134	0xB081    SUB	SP, SP, #4
;__Lib_MathDouble.c, 415 :: 		
0x0136	0xE92D41FA  PUSH	(R1, R3, R4, R5, R6, R7, R8, R14)
;__Lib_MathDouble.c, 417 :: 		
0x013A	0xEA4F2402  LSL	R4, R2, #8
;__Lib_MathDouble.c, 418 :: 		
0x013E	0xEA4F0542  LSL	R5, R2, #1
;__Lib_MathDouble.c, 419 :: 		
0x0142	0x0E2D    LSRS	R5, R5, #24
;__Lib_MathDouble.c, 420 :: 		
0x0144	0xD104    BNE	__me_lab1
;__Lib_MathDouble.c, 422 :: 		
0x0146	0x2C00    CMP	R4, #0
;__Lib_MathDouble.c, 423 :: 		
0x0148	0xBF18    IT	NE
;__Lib_MathDouble.c, 424 :: 		
0x014A	0xF04F0000  MOVNE	R0, #0
;__Lib_MathDouble.c, 426 :: 		
0x014E	0xE06C    B	__me_lab_end
;__Lib_MathDouble.c, 428 :: 		
__me_lab1:
0x0150	0xF0444400  ORR	R4, R4, #-2147483648
;__Lib_MathDouble.c, 430 :: 		
0x0154	0x2DFF    CMP	R5, #255
;__Lib_MathDouble.c, 432 :: 		
0x0156	0xD05F    BEQ	__me_ovfl1
;__Lib_MathDouble.c, 434 :: 		
0x0158	0xEA4F0494  LSR	R4, R4, #2
;__Lib_MathDouble.c, 435 :: 		
0x015C	0x2A00    CMP	R2, #0
;__Lib_MathDouble.c, 436 :: 		
0x015E	0xBF48    IT	MI
;__Lib_MathDouble.c, 437 :: 		
0x0160	0x4264    RSBMI	R4, R4, #0
;__Lib_MathDouble.c, 439 :: 		
0x0162	0xEA4F2100  LSL	R1, R0, #8
;__Lib_MathDouble.c, 440 :: 		
0x0166	0xEA4F0340  LSL	R3, R0, #1
;__Lib_MathDouble.c, 441 :: 		
0x016A	0x0E1B    LSRS	R3, R3, #24
;__Lib_MathDouble.c, 442 :: 		
0x016C	0xD105    BNE	__me_lab2
;__Lib_MathDouble.c, 444 :: 		
0x016E	0x2900    CMP	R1, #0
;__Lib_MathDouble.c, 445 :: 		
0x0170	0xBF14    ITE	NE
;__Lib_MathDouble.c, 446 :: 		
0x0172	0xF04F0000  MOVNE	R0, #0
;__Lib_MathDouble.c, 447 :: 		
0x0176	0x4610    MOVEQ	R0, R2
;__Lib_MathDouble.c, 449 :: 		
0x0178	0xE057    B	__me_lab_end
;__Lib_MathDouble.c, 451 :: 		
__me_lab2:
0x017A	0xF0414100  ORR	R1, R1, #-2147483648
;__Lib_MathDouble.c, 453 :: 		
0x017E	0x2BFF    CMP	R3, #255
;__Lib_MathDouble.c, 454 :: 		
0x0180	0xD04B    BEQ	__me_ovfl0
;__Lib_MathDouble.c, 456 :: 		
0x0182	0xEA4F0191  LSR	R1, R1, #2
;__Lib_MathDouble.c, 457 :: 		
0x0186	0x2800    CMP	R0, #0
;__Lib_MathDouble.c, 458 :: 		
0x0188	0xBF48    IT	MI
;__Lib_MathDouble.c, 459 :: 		
0x018A	0x4249    RSBMI	R1, R1, #0
;__Lib_MathDouble.c, 461 :: 		
0x018C	0x1B5E    SUBS	R6, R3, R5
;__Lib_MathDouble.c, 462 :: 		
0x018E	0xBF41    ITTTT	MI
;__Lib_MathDouble.c, 463 :: 		
0x0190	0x460F    MOVMI	R7, R1
;__Lib_MathDouble.c, 464 :: 		
0x0192	0x4621    MOVMI	R1, R4
;__Lib_MathDouble.c, 465 :: 		
0x0194	0x463C    MOVMI	R4, R7
;__Lib_MathDouble.c, 466 :: 		
0x0196	0x4276    RSBMI	R6, R6, #0
;__Lib_MathDouble.c, 467 :: 		
0x0198	0xBF48    IT	MI
;__Lib_MathDouble.c, 468 :: 		
0x019A	0x462B    MOVMI	R3, R5
;__Lib_MathDouble.c, 470 :: 		
0x019C	0x2E19    CMP	R6, #25
;__Lib_MathDouble.c, 471 :: 		
0x019E	0xBF47    ITTEE	MI
;__Lib_MathDouble.c, 472 :: 		
0x01A0	0xFA44F706  ASRMI	R7, R4, R6
;__Lib_MathDouble.c, 473 :: 		
0x01A4	0x19C9    ADDMI	R1, R1, R7
;__Lib_MathDouble.c, 474 :: 		
0x01A6	0xF04F0800  MOVPL	R8, #0
;__Lib_MathDouble.c, 475 :: 		
0x01AA	0xE003    BPL	__me_skip_sticky
;__Lib_MathDouble.c, 476 :: 		
0x01AC	0xF1C6071C  RSB	R7, R6, #28
;__Lib_MathDouble.c, 477 :: 		
0x01B0	0xFA04F807  LSL	R8, R4, R7
;__Lib_MathDouble.c, 479 :: 		
__me_skip_sticky:
;__Lib_MathDouble.c, 480 :: 		
0x01B4	0x2900    CMP	R1, #0
;__Lib_MathDouble.c, 481 :: 		
0x01B6	0xBF04    ITT	EQ
;__Lib_MathDouble.c, 482 :: 		
0x01B8	0xF04F0000  MOVEQ	R0, #0
;__Lib_MathDouble.c, 484 :: 		
0x01BC	0xE035    BEQ	__me_lab_end
;__Lib_MathDouble.c, 485 :: 		
0x01BE	0xBF46    ITTE	MI
;__Lib_MathDouble.c, 486 :: 		
0x01C0	0x4249    RSBMI	R1, R1, #0
;__Lib_MathDouble.c, 487 :: 		
0x01C2	0xF04F0701  MOVMI	R7, #1
;__Lib_MathDouble.c, 488 :: 		
0x01C6	0xF04F0700  MOVPL	R7, #0
;__Lib_MathDouble.c, 490 :: 		
__me_loop:
0x01CA	0xF1A30301  SUB	R3, R3, #1
;__Lib_MathDouble.c, 491 :: 		
0x01CE	0x0049    LSLS	R1, R1, #1
;__Lib_MathDouble.c, 492 :: 		
0x01D0	0xD5FB    BPL	__me_loop
;__Lib_MathDouble.c, 494 :: 		
0x01D2	0xF0110480  ANDS	R4, R1, #128
;__Lib_MathDouble.c, 495 :: 		
0x01D6	0xD00D    BEQ	__me_no_round
;__Lib_MathDouble.c, 496 :: 		
0x01D8	0xF0010520  AND	R5, R1, #32
;__Lib_MathDouble.c, 497 :: 		
0x01DC	0xEA480805  ORR	R8, R8, R5, LSL #0
;__Lib_MathDouble.c, 498 :: 		
0x01E0	0x3180    ADDS	R1, #128
;__Lib_MathDouble.c, 499 :: 		
0x01E2	0xBF28    IT	CS
;__Lib_MathDouble.c, 500 :: 		
0x01E4	0x1C5B    ADDCS	R3, R3, #1
;__Lib_MathDouble.c, 501 :: 		
0x01E6	0xF0010440  AND	R4, R1, #64
;__Lib_MathDouble.c, 502 :: 		
0x01EA	0xEA580804  ORRS	R8, R8, R4, LSL #0
;__Lib_MathDouble.c, 503 :: 		
0x01EE	0xBF08    IT	EQ
;__Lib_MathDouble.c, 504 :: 		
0x01F0	0xF4217180  BICEQ	R1, R1, #256
;__Lib_MathDouble.c, 506 :: 		
__me_no_round:
;__Lib_MathDouble.c, 507 :: 		
0x01F4	0x1C9B    ADDS	R3, R3, #2
;__Lib_MathDouble.c, 508 :: 		
0x01F6	0xBFDC    ITT	LE
;__Lib_MathDouble.c, 509 :: 		
0x01F8	0xF04F0000  MOVLE	R0, #0
;__Lib_MathDouble.c, 511 :: 		
0x01FC	0xE015    BLE	__me_lab_end
;__Lib_MathDouble.c, 512 :: 		
0x01FE	0x2BFF    CMP	R3, #255
;__Lib_MathDouble.c, 513 :: 		
0x0200	0xD20D    BCS	__me_ovfl
;__Lib_MathDouble.c, 515 :: 		
0x0202	0xF02101FF  BIC	R1, R1, #255
;__Lib_MathDouble.c, 516 :: 		
0x0206	0xEA4F0141  LSL	R1, R1, #1
;__Lib_MathDouble.c, 518 :: 		
0x020A	0xEA4F2051  LSR	R0, R1, #9
;__Lib_MathDouble.c, 519 :: 		
0x020E	0xEA4050C3  ORR	R0, R0, R3, LSL #23
;__Lib_MathDouble.c, 520 :: 		
0x0212	0xEA4070C7  ORR	R0, R0, R7, LSL #31
;__Lib_MathDouble.c, 523 :: 		
0x0216	0xE008    B	__me_lab_end
;__Lib_MathDouble.c, 525 :: 		
__me_ovfl1:
0x0218	0x4610    MOV	R0, R2
;__Lib_MathDouble.c, 526 :: 		
__me_ovfl0:
0x021A	0xEA4F77D0  LSR	R7, R0, #31
;__Lib_MathDouble.c, 527 :: 		
__me_ovfl:
0x021E	0xEA4F77C7  LSL	R7, R7, #31
;__Lib_MathDouble.c, 528 :: 		
0x0222	0x20FF    MOVS	R0, #255
;__Lib_MathDouble.c, 529 :: 		
0x0224	0xEA4F50C0  LSL	R0, R0, #23
;__Lib_MathDouble.c, 530 :: 		
0x0228	0x4338    ORRS	R0, R7
;__Lib_MathDouble.c, 531 :: 		
__me_lab_end:
;__Lib_MathDouble.c, 532 :: 		
0x022A	0xE8BD41FA  POP	(R1, R3, R4, R5, R6, R7, R8, R14)
;__Lib_MathDouble.c, 534 :: 		
L_end__Add_FP:
0x022E	0xB001    ADD	SP, SP, #4
0x0230	0x4770    BX	LR
; end of __Add_FP
_exp:
;__Lib_CMath.c, 324 :: 		
; x start address is: 0 (R0)
0x095C	0xB084    SUB	SP, SP, #16
0x095E	0xF8CDE000  STR	LR, [SP, #0]
0x0962	0x4602    MOV	R2, R0
; x end address is: 0 (R0)
; x start address is: 8 (R2)
;__Lib_CMath.c, 342 :: 		
0x0964	0xF04F0000  MOV	R0, #0
0x0968	0x9201    STR	R2, [SP, #4]
0x096A	0xF7FFFE29  BL	__Compare_FP+0
0x096E	0xF2400000  MOVW	R0, #0
0x0972	0xD100    BNE	L__exp126
0x0974	0x2001    MOVS	R0, #1
L__exp126:
0x0976	0x9A01    LDR	R2, [SP, #4]
0x0978	0xB110    CBZ	R0, L_exp53
; x end address is: 8 (R2)
;__Lib_CMath.c, 343 :: 		
0x097A	0xF04F507E  MOV	R0, #1065353216
0x097E	0xE05F    B	L_end_exp
L_exp53:
;__Lib_CMath.c, 344 :: 		
; x start address is: 8 (R2)
0x0980	0x4831    LDR	R0, [PC, #196]
0x0982	0x9201    STR	R2, [SP, #4]
0x0984	0xF7FFFE1C  BL	__Compare_FP+0
0x0988	0xF2400000  MOVW	R0, #0
0x098C	0xDA00    BGE	L__exp127
0x098E	0x2001    MOVS	R0, #1
L__exp127:
0x0990	0x9A01    LDR	R2, [SP, #4]
0x0992	0xB108    CBZ	R0, L_exp54
; x end address is: 8 (R2)
;__Lib_CMath.c, 345 :: 		
0x0994	0x482D    LDR	R0, [PC, #180]
0x0996	0xE053    B	L_end_exp
L_exp54:
;__Lib_CMath.c, 346 :: 		
; x start address is: 8 (R2)
0x0998	0x482D    LDR	R0, [PC, #180]
0x099A	0x9201    STR	R2, [SP, #4]
0x099C	0xF7FFFE10  BL	__Compare_FP+0
0x09A0	0xF2400000  MOVW	R0, #0
0x09A4	0xDD00    BLE	L__exp128
0x09A6	0x2001    MOVS	R0, #1
L__exp128:
0x09A8	0x9A01    LDR	R2, [SP, #4]
0x09AA	0xB110    CBZ	R0, L_exp55
; x end address is: 8 (R2)
;__Lib_CMath.c, 347 :: 		
0x09AC	0xF04F0000  MOV	R0, #0
0x09B0	0xE046    B	L_end_exp
L_exp55:
;__Lib_CMath.c, 348 :: 		
; x start address is: 8 (R2)
0x09B2	0xF04F0000  MOV	R0, #0
0x09B6	0x9201    STR	R2, [SP, #4]
0x09B8	0xF7FFFE02  BL	__Compare_FP+0
0x09BC	0xF2400000  MOVW	R0, #0
0x09C0	0xDD00    BLE	L__exp129
0x09C2	0x2001    MOVS	R0, #1
L__exp129:
0x09C4	0x9A01    LDR	R2, [SP, #4]
; sign start address is: 48 (R12)
0x09C6	0xFA5FFC80  UXTB	R12, R0
;__Lib_CMath.c, 349 :: 		
0x09CA	0xB2C1    UXTB	R1, R0
0x09CC	0xB121    CBZ	R1, L__exp79
;__Lib_CMath.c, 350 :: 		
0x09CE	0xF0824100  EOR	R1, R2, #-2147483648
; x end address is: 8 (R2)
; x start address is: 0 (R0)
0x09D2	0x4608    MOV	R0, R1
; x end address is: 0 (R0)
0x09D4	0x4601    MOV	R1, R0
0x09D6	0xE000    B	L_exp56
L__exp79:
;__Lib_CMath.c, 349 :: 		
0x09D8	0x4611    MOV	R1, R2
;__Lib_CMath.c, 350 :: 		
L_exp56:
;__Lib_CMath.c, 351 :: 		
; x start address is: 4 (R1)
0x09DA	0x481E    LDR	R0, [PC, #120]
0x09DC	0x460A    MOV	R2, R1
0x09DE	0xF7FFFD35  BL	__Mul_FP+0
; x end address is: 4 (R1)
; x start address is: 36 (R9)
0x09E2	0x4681    MOV	R9, R0
;__Lib_CMath.c, 352 :: 		
0x09E4	0xF7FFFD78  BL	_floor+0
0x09E8	0xF7FFFE2E  BL	__FloatToSignedIntegral+0
0x09EC	0xB200    SXTH	R0, R0
0x09EE	0xF8AD0008  STRH	R0, [SP, #8]
;__Lib_CMath.c, 353 :: 		
0x09F2	0xF000FBBB  BL	__SignedIntegralToFloat+0
0x09F6	0x9003    STR	R0, [SP, #12]
0x09F8	0x9A03    LDR	R2, [SP, #12]
0x09FA	0x4648    MOV	R0, R9
0x09FC	0xF7FFFCA4  BL	__Sub_FP+0
; x end address is: 36 (R9)
;__Lib_CMath.c, 354 :: 		
0x0A00	0x2209    MOVS	R2, #9
0x0A02	0xB212    SXTH	R2, R2
0x0A04	0x4914    LDR	R1, [PC, #80]
0x0A06	0xF7FFFC7B  BL	__Lib_CMath_eval_poly+0
0x0A0A	0xF9BD1008  LDRSH	R1, [SP, #8]
0x0A0E	0xF7FFFDA1  BL	_ldexp+0
; x start address is: 4 (R1)
0x0A12	0x4601    MOV	R1, R0
;__Lib_CMath.c, 355 :: 		
0x0A14	0xF1BC0F00  CMP	R12, #0
0x0A18	0xD011    BEQ	L_exp57
; sign end address is: 48 (R12)
;__Lib_CMath.c, 356 :: 		
0x0A1A	0x480C    LDR	R0, [PC, #48]
0x0A1C	0x460A    MOV	R2, R1
0x0A1E	0xF7FFFDCF  BL	__Compare_FP+0
0x0A22	0xF2400000  MOVW	R0, #0
0x0A26	0xD100    BNE	L__exp130
0x0A28	0x2001    MOVS	R0, #1
L__exp130:
0x0A2A	0xB110    CBZ	R0, L_exp58
; x end address is: 4 (R1)
;__Lib_CMath.c, 357 :: 		
0x0A2C	0xF04F0000  MOV	R0, #0
0x0A30	0xE006    B	L_end_exp
L_exp58:
;__Lib_CMath.c, 358 :: 		
; x start address is: 4 (R1)
0x0A32	0xF04F507E  MOV	R0, #1065353216
0x0A36	0x460A    MOV	R2, R1
0x0A38	0xF000F91E  BL	__Div_FP+0
; x end address is: 4 (R1)
0x0A3C	0xE000    B	L_end_exp
;__Lib_CMath.c, 359 :: 		
L_exp57:
;__Lib_CMath.c, 360 :: 		
; x start address is: 4 (R1)
0x0A3E	0x4608    MOV	R0, R1
; x end address is: 4 (R1)
;__Lib_CMath.c, 361 :: 		
L_end_exp:
0x0A40	0xF8DDE000  LDR	LR, [SP, #0]
0x0A44	0xB004    ADD	SP, SP, #16
0x0A46	0x4770    BX	LR
0x0A48	0xD4FE42B2  	#1119016190
0x0A4C	0xFFFF7F7F  	#2139095039
0x0A50	0xAC50C2AE  	#-1028740016
0x0A54	0xAA3B3FB8  	#1069066811
0x0A58	0x1E3C0000  	exp_coeff_L0+0
; end of _exp
_floor:
;__Lib_CMath.c, 38 :: 		
0x04D8	0xB082    SUB	SP, SP, #8
0x04DA	0xF8CDE000  STR	LR, [SP, #0]
0x04DE	0x9001    STR	R0, [SP, #4]
;__Lib_CMath.c, 42 :: 		
0x04E0	0xA901    ADD	R1, SP, #4
0x04E2	0x6809    LDR	R1, [R1, #0]
0x04E4	0x0DC9    LSRS	R1, R1, #23
0x04E6	0xF00101FF  AND	R1, R1, #255
;__Lib_CMath.c, 43 :: 		
0x04EA	0xB209    SXTH	R1, R1
0x04EC	0x397F    SUBS	R1, #127
0x04EE	0xB209    SXTH	R1, R1
; expon start address is: 0 (R0)
0x04F0	0xB208    SXTH	R0, R1
;__Lib_CMath.c, 44 :: 		
0x04F2	0x2900    CMP	R1, #0
0x04F4	0xDA0E    BGE	L_floor1
; expon end address is: 0 (R0)
;__Lib_CMath.c, 45 :: 		
0x04F6	0x9A01    LDR	R2, [SP, #4]
0x04F8	0xF04F0000  MOV	R0, #0
0x04FC	0xF000F860  BL	__Compare_FP+0
0x0500	0xF2400000  MOVW	R0, #0
0x0504	0xDD00    BLE	L__floor84
0x0506	0x2001    MOVS	R0, #1
L__floor84:
0x0508	0xB108    CBZ	R0, L_floor2
;__Lib_CMath.c, 46 :: 		
0x050A	0x4811    LDR	R0, [PC, #68]
0x050C	0xE01C    B	L_end_floor
L_floor2:
;__Lib_CMath.c, 48 :: 		
0x050E	0xF04F0000  MOV	R0, #0
0x0512	0xE019    B	L_end_floor
L_floor1:
;__Lib_CMath.c, 49 :: 		
; expon start address is: 0 (R0)
0x0514	0xB281    UXTH	R1, R0
; expon end address is: 0 (R0)
0x0516	0x2918    CMP	R1, #24
0x0518	0xD901    BLS	L_floor4
;__Lib_CMath.c, 50 :: 		
0x051A	0x9801    LDR	R0, [SP, #4]
0x051C	0xE014    B	L_end_floor
L_floor4:
;__Lib_CMath.c, 51 :: 		
0x051E	0x9801    LDR	R0, [SP, #4]
0x0520	0xF000F892  BL	__FloatToSignedIntegral+0
0x0524	0xF000FE22  BL	__SignedIntegralToFloat+0
; i start address is: 4 (R1)
0x0528	0x4601    MOV	R1, R0
;__Lib_CMath.c, 53 :: 		
0x052A	0x9A01    LDR	R2, [SP, #4]
0x052C	0xF000F848  BL	__Compare_FP+0
0x0530	0xF2400000  MOVW	R0, #0
0x0534	0xDD00    BLE	L__floor85
0x0536	0x2001    MOVS	R0, #1
L__floor85:
0x0538	0xB128    CBZ	R0, L_floor5
;__Lib_CMath.c, 54 :: 		
0x053A	0x4608    MOV	R0, R1
0x053C	0xF04F527E  MOV	R2, #1065353216
0x0540	0xF7FFFF02  BL	__Sub_FP+0
; i end address is: 4 (R1)
0x0544	0xE000    B	L_end_floor
L_floor5:
;__Lib_CMath.c, 55 :: 		
; i start address is: 4 (R1)
0x0546	0x4608    MOV	R0, R1
; i end address is: 4 (R1)
;__Lib_CMath.c, 56 :: 		
L_end_floor:
0x0548	0xF8DDE000  LDR	LR, [SP, #0]
0x054C	0xB002    ADD	SP, SP, #8
0x054E	0x4770    BX	LR
0x0550	0x0000BF80  	#-1082130432
; end of _floor
_ldexp:
;__Lib_CMath.c, 97 :: 		
; newexp start address is: 4 (R1)
; value start address is: 0 (R0)
0x0554	0xB083    SUB	SP, SP, #12
0x0556	0xF8CDE000  STR	LR, [SP, #0]
0x055A	0xF8AD1004  STRH	R1, [SP, #4]
0x055E	0x4601    MOV	R1, R0
0x0560	0xF9BD0004  LDRSH	R0, [SP, #4]
; newexp end address is: 4 (R1)
; value end address is: 0 (R0)
; value start address is: 4 (R1)
; newexp start address is: 0 (R0)
;__Lib_CMath.c, 100 :: 		
0x0564	0x9102    STR	R1, [SP, #8]
;__Lib_CMath.c, 101 :: 		
0x0566	0xF8BD200A  LDRH	R2, [SP, #10]
0x056A	0xF3C212C7  UBFX	R2, R2, #7, #8
0x056E	0x1882    ADDS	R2, R0, R2
0x0570	0xB210    SXTH	R0, R2
;__Lib_CMath.c, 102 :: 		
0x0572	0xB212    SXTH	R2, R2
0x0574	0x2A00    CMP	R2, #0
0x0576	0xDA02    BGE	L_ldexp11
; value end address is: 4 (R1)
; newexp end address is: 0 (R0)
;__Lib_CMath.c, 103 :: 		
0x0578	0xF04F0000  MOV	R0, #0
0x057C	0xE019    B	L_end_ldexp
L_ldexp11:
;__Lib_CMath.c, 105 :: 		
; newexp start address is: 0 (R0)
; value start address is: 4 (R1)
0x057E	0xF1B00FFF  CMP	R0, #255
0x0582	0xDD0E    BLE	L_ldexp13
; newexp end address is: 0 (R0)
;__Lib_CMath.c, 106 :: 		
0x0584	0xF04F0000  MOV	R0, #0
0x0588	0x460A    MOV	R2, R1
0x058A	0xF000F819  BL	__Compare_FP+0
0x058E	0xF2400000  MOVW	R0, #0
0x0592	0xDD00    BLE	L__ldexp91
0x0594	0x2001    MOVS	R0, #1
L__ldexp91:
; value end address is: 4 (R1)
0x0596	0xB110    CBZ	R0, L_ldexp14
;__Lib_CMath.c, 107 :: 		
0x0598	0xF46F0000  MVN	R0, #8388608
0x059C	0xE009    B	L_end_ldexp
L_ldexp14:
;__Lib_CMath.c, 109 :: 		
0x059E	0x4807    LDR	R0, [PC, #28]
0x05A0	0xE007    B	L_end_ldexp
L_ldexp13:
;__Lib_CMath.c, 111 :: 		
; newexp start address is: 0 (R0)
0x05A2	0xB283    UXTH	R3, R0
; newexp end address is: 0 (R0)
0x05A4	0xF8BD200A  LDRH	R2, [SP, #10]
0x05A8	0xF36312CE  BFI	R2, R3, #7, #8
0x05AC	0xF8AD200A  STRH	R2, [SP, #10]
;__Lib_CMath.c, 112 :: 		
0x05B0	0x9802    LDR	R0, [SP, #8]
;__Lib_CMath.c, 114 :: 		
L_end_ldexp:
0x05B2	0xF8DDE000  LDR	LR, [SP, #0]
0x05B6	0xB003    ADD	SP, SP, #12
0x05B8	0x4770    BX	LR
0x05BA	0xBF00    NOP
0x05BC	0xFFFF7F7F  	#2139095039
; end of _ldexp
__UnsignedIntegralToFloat:
;__Lib_MathDouble.c, 262 :: 		
0x0C4C	0xB081    SUB	SP, SP, #4
;__Lib_MathDouble.c, 264 :: 		
0x0C4E	0x2800    CMP	R0, #0
;__Lib_MathDouble.c, 265 :: 		
0x0C50	0xBF08    IT	EQ
;__Lib_MathDouble.c, 267 :: 		
0x0C52	0xE00F    BEQ	__me_lab_end
;__Lib_MathDouble.c, 269 :: 		
0x0C54	0xB502    PUSH	(R1, R14)
;__Lib_MathDouble.c, 271 :: 		
0x0C56	0xF04F029E  MOV	R2, #158
;__Lib_MathDouble.c, 272 :: 		
0x0C5A	0xD402    BMI	__me_label_cont
;__Lib_MathDouble.c, 274 :: 		
__me_loop:
0x0C5C	0x1E52    SUBS	R2, R2, #1
;__Lib_MathDouble.c, 275 :: 		
0x0C5E	0x0040    LSLS	R0, R0, #1
;__Lib_MathDouble.c, 277 :: 		
0x0C60	0xD5FC    BPL	__me_loop
;__Lib_MathDouble.c, 279 :: 		
__me_label_cont:
0x0C62	0x3080    ADDS	R0, #128
;__Lib_MathDouble.c, 280 :: 		
0x0C64	0xBF2C    ITE	CS
;__Lib_MathDouble.c, 281 :: 		
0x0C66	0x1C52    ADDCS	R2, R2, #1
;__Lib_MathDouble.c, 282 :: 		
0x0C68	0x0040    LSLCC	R0, R0, #1
;__Lib_MathDouble.c, 284 :: 		
0x0C6A	0x0A40    LSRS	R0, R0, #9
;__Lib_MathDouble.c, 285 :: 		
0x0C6C	0xEA4050C2  ORR	R0, R0, R2, LSL #23
;__Lib_MathDouble.c, 287 :: 		
0x0C70	0xE8BD4002  POP	(R1, R14)
;__Lib_MathDouble.c, 288 :: 		
__me_lab_end:
;__Lib_MathDouble.c, 290 :: 		
L_end__UnsignedIntegralToFloat:
0x0C74	0xB001    ADD	SP, SP, #4
0x0C76	0x4770    BX	LR
; end of __UnsignedIntegralToFloat
_IntToStr:
;__Lib_Conversions.c, 211 :: 		
; output start address is: 4 (R1)
; input start address is: 0 (R0)
0x12F4	0xB081    SUB	SP, SP, #4
0x12F6	0xF8CDE000  STR	LR, [SP, #0]
0x12FA	0x460E    MOV	R6, R1
; output end address is: 4 (R1)
; input end address is: 0 (R0)
; input start address is: 0 (R0)
; output start address is: 24 (R6)
;__Lib_Conversions.c, 217 :: 		
; negative start address is: 4 (R1)
0x12FC	0x2100    MOVS	R1, #0
;__Lib_Conversions.c, 218 :: 		
; inword start address is: 12 (R3)
0x12FE	0xB283    UXTH	R3, R0
;__Lib_Conversions.c, 219 :: 		
0x1300	0x2800    CMP	R0, #0
0x1302	0xDA05    BGE	L__IntToStr165
; inword end address is: 12 (R3)
;__Lib_Conversions.c, 220 :: 		
0x1304	0x2101    MOVS	R1, #1
;__Lib_Conversions.c, 221 :: 		
0x1306	0x4240    RSBS	R0, R0, #0
0x1308	0xB280    UXTH	R0, R0
; input end address is: 0 (R0)
; inword start address is: 0 (R0)
0x130A	0xB280    UXTH	R0, R0
; negative end address is: 4 (R1)
; inword end address is: 0 (R0)
0x130C	0xB28F    UXTH	R7, R1
;__Lib_Conversions.c, 222 :: 		
0x130E	0xE001    B	L_IntToStr37
L__IntToStr165:
;__Lib_Conversions.c, 219 :: 		
0x1310	0xB298    UXTH	R0, R3
0x1312	0xB28F    UXTH	R7, R1
;__Lib_Conversions.c, 222 :: 		
L_IntToStr37:
;__Lib_Conversions.c, 223 :: 		
; inword start address is: 0 (R0)
; negative start address is: 28 (R7)
0x1314	0x4631    MOV	R1, R6
; inword end address is: 0 (R0)
0x1316	0xF000F831  BL	_WordToStr+0
;__Lib_Conversions.c, 225 :: 		
; i start address is: 4 (R1)
0x131A	0x2106    MOVS	R1, #6
; output end address is: 24 (R6)
; negative end address is: 28 (R7)
; i end address is: 4 (R1)
0x131C	0x4634    MOV	R4, R6
0x131E	0xB2B8    UXTH	R0, R7
;__Lib_Conversions.c, 226 :: 		
L_IntToStr38:
; i start address is: 4 (R1)
; negative start address is: 0 (R0)
; output start address is: 16 (R4)
0x1320	0x2900    CMP	R1, #0
0x1322	0xD908    BLS	L_IntToStr39
;__Lib_Conversions.c, 227 :: 		
0x1324	0x1863    ADDS	R3, R4, R1
0x1326	0x1E4A    SUBS	R2, R1, #1
0x1328	0xB292    UXTH	R2, R2
0x132A	0x18A2    ADDS	R2, R4, R2
0x132C	0x7812    LDRB	R2, [R2, #0]
0x132E	0x701A    STRB	R2, [R3, #0]
;__Lib_Conversions.c, 228 :: 		
0x1330	0x1E49    SUBS	R1, R1, #1
0x1332	0xB289    UXTH	R1, R1
;__Lib_Conversions.c, 229 :: 		
; i end address is: 4 (R1)
0x1334	0xE7F4    B	L_IntToStr38
L_IntToStr39:
;__Lib_Conversions.c, 230 :: 		
0x1336	0x2220    MOVS	R2, #32
0x1338	0x7022    STRB	R2, [R4, #0]
;__Lib_Conversions.c, 231 :: 		
0x133A	0xB170    CBZ	R0, L_IntToStr40
; negative end address is: 0 (R0)
;__Lib_Conversions.c, 232 :: 		
; i start address is: 0 (R0)
0x133C	0x2000    MOVS	R0, #0
; output end address is: 16 (R4)
; i end address is: 0 (R0)
0x133E	0xB281    UXTH	R1, R0
0x1340	0x4620    MOV	R0, R4
;__Lib_Conversions.c, 233 :: 		
L_IntToStr41:
; i start address is: 4 (R1)
; output start address is: 0 (R0)
0x1342	0x1842    ADDS	R2, R0, R1
0x1344	0x7812    LDRB	R2, [R2, #0]
0x1346	0x2A20    CMP	R2, #32
0x1348	0xD102    BNE	L_IntToStr42
0x134A	0x1C49    ADDS	R1, R1, #1
0x134C	0xB289    UXTH	R1, R1
0x134E	0xE7F8    B	L_IntToStr41
L_IntToStr42:
;__Lib_Conversions.c, 234 :: 		
0x1350	0x1E4A    SUBS	R2, R1, #1
0x1352	0xB292    UXTH	R2, R2
; i end address is: 4 (R1)
;__Lib_Conversions.c, 235 :: 		
0x1354	0x1883    ADDS	R3, R0, R2
; output end address is: 0 (R0)
0x1356	0x222D    MOVS	R2, #45
0x1358	0x701A    STRB	R2, [R3, #0]
L_IntToStr40:
;__Lib_Conversions.c, 236 :: 		
L_end_IntToStr:
0x135A	0xF8DDE000  LDR	LR, [SP, #0]
0x135E	0xB001    ADD	SP, SP, #4
0x1360	0x4770    BX	LR
; end of _IntToStr
_GPIO_Digital_Input:
;__Lib_GPIO_32F10x.c, 369 :: 		
; pin_mask start address is: 4 (R1)
; port start address is: 0 (R0)
0x1364	0xB081    SUB	SP, SP, #4
0x1366	0xF8CDE000  STR	LR, [SP, #0]
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
; port start address is: 0 (R0)
; pin_mask start address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 370 :: 		
0x136A	0xF04F0242  MOV	R2, #66
0x136E	0xB289    UXTH	R1, R1
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
0x1370	0xF7FFFD2E  BL	_GPIO_Config+0
;__Lib_GPIO_32F10x.c, 371 :: 		
L_end_GPIO_Digital_Input:
0x1374	0xF8DDE000  LDR	LR, [SP, #0]
0x1378	0xB001    ADD	SP, SP, #4
0x137A	0x4770    BX	LR
; end of _GPIO_Digital_Input
;F100RTCTest.c,0 :: ?ICS?lstr10_F100RTCTest [4]
0x1D3C	0x00796452 ;?ICS?lstr10_F100RTCTest+0
; end of ?ICS?lstr10_F100RTCTest
;F100RTCTest.c,0 :: ?ICS?lstr11_F100RTCTest [10]
0x1D40	0x69726553 ;?ICS?lstr11_F100RTCTest+0
0x1D44	0x6F4E6C61 ;?ICS?lstr11_F100RTCTest+4
0x1D48	0x0020 ;?ICS?lstr11_F100RTCTest+8
; end of ?ICS?lstr11_F100RTCTest
;F100RTCTest.c,0 :: ?ICS?lstr12_F100RTCTest [2]
0x1D4A	0x0020 ;?ICS?lstr12_F100RTCTest+0
; end of ?ICS?lstr12_F100RTCTest
;F100RTCTest.c,0 :: ?ICSF100RTCTest_Unique_ID [4]
0x1D4C	0x1FFFF7E8 ;?ICSF100RTCTest_Unique_ID+0
; end of ?ICSF100RTCTest_Unique_ID
;F100RTCTest.c,0 :: ?ICS?lstr13_F100RTCTest [2]
0x1D50	0x0020 ;?ICS?lstr13_F100RTCTest+0
; end of ?ICS?lstr13_F100RTCTest
;F100RTCTest.c,0 :: ?ICS?lstr14_F100RTCTest [2]
0x1D52	0x0020 ;?ICS?lstr14_F100RTCTest+0
; end of ?ICS?lstr14_F100RTCTest
;F100RTCTest.c,0 :: ?ICS?lstr15_F100RTCTest [10]
0x1D54	0x73206F4E ;?ICS?lstr15_F100RTCTest+0
0x1D58	0x7065656C ;?ICS?lstr15_F100RTCTest+4
0x1D5C	0x0021 ;?ICS?lstr15_F100RTCTest+8
; end of ?ICS?lstr15_F100RTCTest
;F100RTCTest.c,0 :: ?ICS_TimeCount [2]
0x1D5E	0xFFFE ;?ICS_TimeCount+0
; end of ?ICS_TimeCount
;F100RTCTest.c,0 :: ?ICS?lstr1_F100RTCTest [10]
0x1D60	0x5F435452 ;?ICS?lstr1_F100RTCTest+0
0x1D64	0x4C544E43 ;?ICS?lstr1_F100RTCTest+4
0x1D68	0x0020 ;?ICS?lstr1_F100RTCTest+8
; end of ?ICS?lstr1_F100RTCTest
;,0 :: _initBlock_9 [101]
; Containing: ?ICS?lstr2_F100RTCTest [11]
;             ?ICS?lstr3_F100RTCTest [12]
;             ?ICS?lstr4_F100RTCTest [12]
;             ?ICS?lstr5_F100RTCTest [14]
;             ?ICS?lstr6_F100RTCTest [10]
;             ?ICS?lstr7_F100RTCTest [14]
;             ?ICS?lstr8_F100RTCTest [18]
;             ?ICS?lstr9_F100RTCTest [10]
0x1D6A	0x43545220 ;_initBlock_9+0 : ?ICS?lstr2_F100RTCTest at 0x1D6A
0x1D6E	0x544E435F ;_initBlock_9+4
0x1D72	0x20002048 ;_initBlock_9+8 : ?ICS?lstr3_F100RTCTest at 0x1D75
0x1D76	0x30434441 ;_initBlock_9+12
0x1D7A	0x30415028 ;_initBlock_9+16
0x1D7E	0x20002029 ;_initBlock_9+20 : ?ICS?lstr4_F100RTCTest at 0x1D81
0x1D82	0x31434441 ;_initBlock_9+24
0x1D86	0x31415028 ;_initBlock_9+28
0x1D8A	0x20002029 ;_initBlock_9+32 : ?ICS?lstr5_F100RTCTest at 0x1D8D
0x1D8E	0x31434441 ;_initBlock_9+36
0x1D92	0x52562837 ;_initBlock_9+40
0x1D96	0x20296665 ;_initBlock_9+44
0x1D9A	0x64562000 ;_initBlock_9+48 : ?ICS?lstr6_F100RTCTest at 0x1D9B
0x1D9E	0x6D202C64 ;_initBlock_9+52
0x1DA2	0x20002056 ;_initBlock_9+56 : ?ICS?lstr7_F100RTCTest at 0x1DA5
0x1DA6	0x31434441 ;_initBlock_9+60
0x1DAA	0x65542836 ;_initBlock_9+64
0x1DAE	0x2029706D ;_initBlock_9+68
0x1DB2	0x65542000 ;_initBlock_9+72 : ?ICS?lstr8_F100RTCTest at 0x1DB3
0x1DB6	0x5320706D ;_initBlock_9+76
0x1DBA	0x6F736E65 ;_initBlock_9+80
0x1DBE	0x6D202C72 ;_initBlock_9+84
0x1DC2	0x20002056 ;_initBlock_9+88 : ?ICS?lstr9_F100RTCTest at 0x1DC5
0x1DC6	0x706D6554 ;_initBlock_9+92
0x1DCA	0x2043202C ;_initBlock_9+96
0x1DCE	0x00 ;_initBlock_9+100
; end of _initBlock_9
;__Lib_GPIO_32F10x_Defs.c,696 :: __GPIO_MODULE_USART1_PA9_10 [108]
0x1DD0	0x00000009 ;__GPIO_MODULE_USART1_PA9_10+0
0x1DD4	0x0000000A ;__GPIO_MODULE_USART1_PA9_10+4
0x1DD8	0xFFFFFFFF ;__GPIO_MODULE_USART1_PA9_10+8
0x1DDC	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+12
0x1DE0	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+16
0x1DE4	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+20
0x1DE8	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+24
0x1DEC	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+28
0x1DF0	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+32
0x1DF4	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+36
0x1DF8	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+40
0x1DFC	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+44
0x1E00	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+48
0x1E04	0x00000818 ;__GPIO_MODULE_USART1_PA9_10+52
0x1E08	0x00000018 ;__GPIO_MODULE_USART1_PA9_10+56
0x1E0C	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+60
0x1E10	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+64
0x1E14	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+68
0x1E18	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+72
0x1E1C	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+76
0x1E20	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+80
0x1E24	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+84
0x1E28	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+88
0x1E2C	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+92
0x1E30	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+96
0x1E34	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+100
0x1E38	0x00000004 ;__GPIO_MODULE_USART1_PA9_10+104
; end of __GPIO_MODULE_USART1_PA9_10
;__Lib_CMath.c,329 :: exp_coeff_L0 [40]
0x1E3C	0x3F800000 ;exp_coeff_L0+0
0x1E40	0x3F317218 ;exp_coeff_L0+4
0x1E44	0x3E75FDF0 ;exp_coeff_L0+8
0x1E48	0x3D635847 ;exp_coeff_L0+12
0x1E4C	0x3C1D9558 ;exp_coeff_L0+16
0x1E50	0x3AAEC482 ;exp_coeff_L0+20
0x1E54	0x392178A8 ;exp_coeff_L0+24
0x1E58	0x378093EF ;exp_coeff_L0+28
0x1E5C	0x35A792A0 ;exp_coeff_L0+32
0x1E60	0x34155646 ;exp_coeff_L0+36
; end of exp_coeff_L0
;__Lib_CMath.c,367 :: log_coeff_L0 [36]
0x1E64	0x2EDBE6FF ;log_coeff_L0+0
0x1E68	0x3F7FFFC4 ;log_coeff_L0+4
0x1E6C	0xBEFFEF80 ;log_coeff_L0+8
0x1E70	0x3EA9E190 ;log_coeff_L0+12
0x1E74	0xBE7682EC ;log_coeff_L0+16
0x1E78	0x3E2BAD82 ;log_coeff_L0+20
0x1E7C	0xBDC33C0E ;log_coeff_L0+24
0x1E80	0x3D13D187 ;log_coeff_L0+28
0x1E84	0xBBD37841 ;log_coeff_L0+32
; end of log_coeff_L0
;__Lib_System_100.c,410 :: __Lib_System_100_APBAHBPrescTable [16]
0x1E88	0x00000000 ;__Lib_System_100_APBAHBPrescTable+0
0x1E8C	0x04030201 ;__Lib_System_100_APBAHBPrescTable+4
0x1E90	0x04030201 ;__Lib_System_100_APBAHBPrescTable+8
0x1E94	0x09080706 ;__Lib_System_100_APBAHBPrescTable+12
; end of __Lib_System_100_APBAHBPrescTable
;__Lib_System_100.c,411 :: __Lib_System_100_ADCPrescTable [4]
0x1E98	0x08060402 ;__Lib_System_100_ADCPrescTable+0
; end of __Lib_System_100_ADCPrescTable
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0134     [254]    __Add_FP
0x0234     [152]    __Lib_GPIO_32F10x_GPIO_Configure_Pin
0x02CC      [38]    _frexp
0x02F4      [12]    _Get_Fosc_kHz
0x0300      [72]    __Lib_CMath_eval_poly
0x0348     [258]    __Sub_FP
0x044C     [138]    __Mul_FP
0x04D8     [124]    _floor
0x0554     [108]    _ldexp
0x05C0     [104]    __Compare_FP
0x0628      [30]    __Lib_UART_123_UARTx_Write
0x0648      [66]    __FloatToSignedIntegral
0x068C     [116]    _log
0x0700      [22]    _Delay_1us
0x0718     [140]    _GPIO_Clk_Enable
0x07A4     [272]    _GPIO_Alternate_Function_Enable
0x08B4     [168]    _RCC_GetClocksFrequency
0x095C     [256]    _exp
0x0A5C     [444]    __Lib_UART_123_UARTx_Init_Advanced
0x0C18      [50]    __Lib_UART_123_UARTx_Write_Text
0x0C4C      [44]    __UnsignedIntegralToFloat
0x0C78     [164]    __Div_FP
0x0D1C     [178]    _pow
0x0DD0     [500]    _GPIO_Config
0x0FC4      [24]    _GPIO_Analog_Input
0x0FDC     [248]    __Lib_ADC_32F100x_16ch_ADCx_Init
0x10D4     [150]    __Lib_ADC_32F100x_16ch_ADCx_Get_Sample
0x116C      [64]    __SignedIntegralToFloat
0x11AC     [328]    _ADC_Get_Sample_Filtered
0x12F4     [110]    _IntToStr
0x1364      [24]    _GPIO_Digital_Input
0x137C      [80]    _WordToStr
0x13CC      [28]    _UART1_Write
0x13E8      [28]    _UART1_Write_Text
0x1404     [288]    _ADC_Set_Input_Channel
0x1524      [76]    _LongWordToStr
0x1570      [20]    ___CC2DW
0x1584     [120]    _NVIC_IntEnable
0x15FC      [52]    _UART1_Init
0x1630      [58]    ___FillZeros
0x166C      [52]    _ADC1_Init
0x16A0      [28]    _GPIO_Digital_Output
0x16BC      [92]    __Lib_System_100_SystemClockSetDefault
0x1718      [28]    _ADC1_Get_Sample
0x1734     [320]    _RTC_INIT
0x1874     [604]    _RTCWakeUp
0x1AD0     [416]    _main
0x1C70     [176]    __Lib_System_100_InitialSetUpRCCRCC2
0x1D20      [20]    __Lib_System_100_InitialSetUpFosc
0x1D34       [8]    ___GenExcept
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x20000000       [4]    ?lstr10_F100RTCTest
0x20000004      [10]    ?lstr11_F100RTCTest
0x2000000E       [2]    ?lstr12_F100RTCTest
0x20000010       [4]    F100RTCTest_Unique_ID
0x20000014       [2]    ?lstr13_F100RTCTest
0x20000016       [2]    ?lstr14_F100RTCTest
0x20000018      [10]    ?lstr15_F100RTCTest
0x20000022       [2]    _TimeCount
0x20000024      [10]    ?lstr1_F100RTCTest
0x2000002E      [11]    ?lstr2_F100RTCTest
0x20000039      [12]    ?lstr3_F100RTCTest
0x20000045      [12]    ?lstr4_F100RTCTest
0x20000051      [14]    ?lstr5_F100RTCTest
0x2000005F      [10]    ?lstr6_F100RTCTest
0x20000069      [14]    ?lstr7_F100RTCTest
0x20000077      [18]    ?lstr8_F100RTCTest
0x20000089      [10]    ?lstr9_F100RTCTest
0x20000094       [4]    _ADC_Get_Sample_Ptr
0x20000098       [4]    ___System_CLOCK_IN_KHZ
0x2000009C       [4]    _UART_Wr_Ptr
0x200000A0       [4]    _UART_Rd_Ptr
0x200000A4       [4]    _UART_Rdy_Ptr
0x200000A8       [4]    _UART_Tx_Idle_Ptr
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x1D3C       [4]    ?ICS?lstr10_F100RTCTest
0x1D40      [10]    ?ICS?lstr11_F100RTCTest
0x1D4A       [2]    ?ICS?lstr12_F100RTCTest
0x1D4C       [4]    ?ICSF100RTCTest_Unique_ID
0x1D50       [2]    ?ICS?lstr13_F100RTCTest
0x1D52       [2]    ?ICS?lstr14_F100RTCTest
0x1D54      [10]    ?ICS?lstr15_F100RTCTest
0x1D5E       [2]    ?ICS_TimeCount
0x1D60      [10]    ?ICS?lstr1_F100RTCTest
0x1D6A      [11]    ?ICS?lstr2_F100RTCTest
0x1D75      [12]    ?ICS?lstr3_F100RTCTest
0x1D81      [12]    ?ICS?lstr4_F100RTCTest
0x1D8D      [14]    ?ICS?lstr5_F100RTCTest
0x1D9B      [10]    ?ICS?lstr6_F100RTCTest
0x1DA5      [14]    ?ICS?lstr7_F100RTCTest
0x1DB3      [18]    ?ICS?lstr8_F100RTCTest
0x1DC5      [10]    ?ICS?lstr9_F100RTCTest
0x1DD0     [108]    __GPIO_MODULE_USART1_PA9_10
0x1E3C      [40]    exp_coeff_L0
0x1E64      [36]    log_coeff_L0
0x1E88      [16]    __Lib_System_100_APBAHBPrescTable
0x1E98       [4]    __Lib_System_100_ADCPrescTable
